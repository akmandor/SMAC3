Search.setIndex({"docnames": ["1_installation", "2_package_overview", "3_getting_started", "4_minimal_example", "5_api", "6_references", "7_glossary", "8_faq", "9_license", "advanced_usage/10_continue", "advanced_usage/11_reproducibility", "advanced_usage/12_optimizations", "advanced_usage/1_components", "advanced_usage/2_multi_fidelity", "advanced_usage/3_multi_objective", "advanced_usage/4_instances", "advanced_usage/5_ask_and_tell", "advanced_usage/6_commandline", "advanced_usage/7_stopping_criteria", "advanced_usage/8_logging", "advanced_usage/9_parallelism", "advanced_usage/index", "api/smac.acquisition", "api/smac.acquisition.function", "api/smac.acquisition.function.abstract_acquisition_function", "api/smac.acquisition.function.confidence_bound", "api/smac.acquisition.function.expected_improvement", "api/smac.acquisition.function.integrated_acquisition_function", "api/smac.acquisition.function.prior_acqusition_function", "api/smac.acquisition.function.probability_improvement", "api/smac.acquisition.function.thompson", "api/smac.acquisition.maximizer", "api/smac.acquisition.maximizer.abstract_acqusition_maximizer", "api/smac.acquisition.maximizer.differential_evolution", "api/smac.acquisition.maximizer.helpers", "api/smac.acquisition.maximizer.local_and_random_search", "api/smac.acquisition.maximizer.local_search", "api/smac.acquisition.maximizer.random_search", "api/smac.callback", "api/smac.facade", "api/smac.facade.abstract_facade", "api/smac.facade.algorithm_configuration_facade", "api/smac.facade.blackbox_facade", "api/smac.facade.hyperband_facade", "api/smac.facade.hyperparameter_optimization_facade", "api/smac.facade.multi_fidelity_facade", "api/smac.facade.random_facade", "api/smac.initial_design", "api/smac.initial_design.abstract_initial_design", "api/smac.initial_design.default_design", "api/smac.initial_design.factorial_design", "api/smac.initial_design.latin_hypercube_design", "api/smac.initial_design.random_design", "api/smac.initial_design.sobol_design", "api/smac.intensifier", "api/smac.intensifier.abstract_intensifier", "api/smac.intensifier.hyperband", "api/smac.intensifier.intensifier", "api/smac.intensifier.successive_halving", "api/smac.main", "api/smac.main.config_selector", "api/smac.main.smbo", "api/smac.model", "api/smac.model.abstract_model", "api/smac.model.gaussian_process", "api/smac.model.gaussian_process.abstract_gaussian_process", "api/smac.model.gaussian_process.gaussian_process", "api/smac.model.gaussian_process.gpytorch_gaussian_process", "api/smac.model.gaussian_process.kernels", "api/smac.model.gaussian_process.kernels.base_kernels", "api/smac.model.gaussian_process.kernels.hamming_kernel", "api/smac.model.gaussian_process.kernels.matern_kernel", "api/smac.model.gaussian_process.kernels.rbf_kernel", "api/smac.model.gaussian_process.kernels.white_kernel", "api/smac.model.gaussian_process.mcmc_gaussian_process", "api/smac.model.gaussian_process.priors", "api/smac.model.gaussian_process.priors.abstract_prior", "api/smac.model.gaussian_process.priors.gamma_prior", "api/smac.model.gaussian_process.priors.horseshoe_prior", "api/smac.model.gaussian_process.priors.log_normal_prior", "api/smac.model.gaussian_process.priors.tophat_prior", "api/smac.model.multi_objective_model", "api/smac.model.random_forest", "api/smac.model.random_forest.abstract_random_forest", "api/smac.model.random_forest.random_forest", "api/smac.model.random_model", "api/smac.multi_objective", "api/smac.multi_objective.abstract_multi_objective_algorithm", "api/smac.multi_objective.aggregation_strategy", "api/smac.multi_objective.parego", "api/smac.random_design", "api/smac.random_design.abstract_random_design", "api/smac.random_design.annealing_design", "api/smac.random_design.modulus_design", "api/smac.random_design.probability_design", "api/smac.runhistory", "api/smac.runhistory.dataclasses", "api/smac.runhistory.encoder", "api/smac.runhistory.encoder.abstract_encoder", "api/smac.runhistory.encoder.boing_encoder", "api/smac.runhistory.encoder.eips_encoder", "api/smac.runhistory.encoder.encoder", "api/smac.runhistory.encoder.inverse_scaled_encoder", "api/smac.runhistory.encoder.log_encoder", "api/smac.runhistory.encoder.log_scaled_encoder", "api/smac.runhistory.encoder.scaled_encoder", "api/smac.runhistory.encoder.sqrt_scaled_encoder", "api/smac.runhistory.enumerations", "api/smac.runhistory.errors", "api/smac.runhistory.runhistory", "api/smac.runner", "api/smac.runner.abstract_runner", "api/smac.runner.abstract_serial_runner", "api/smac.runner.dask_runner", "api/smac.runner.exceptions", "api/smac.runner.target_function_runner", "api/smac.runner.target_function_script_runner", "api/smac.scenario", "api/smac.utils", "api/smac.utils.configspace", "api/smac.utils.data_structures", "api/smac.utils.logging", "api/smac.utils.multi_objective", "api/smac.utils.pareto_front", "api/smac.utils.subspaces", "api/smac.utils.subspaces.boing_subspace", "api/smac.utils.subspaces.turbo_subspace", "examples/1_basics/1_quadratic_function", "examples/1_basics/2_svm_cv", "examples/1_basics/3_ask_and_tell", "examples/1_basics/4_callback", "examples/1_basics/5_continue", "examples/1_basics/6_priors", "examples/1_basics/index", "examples/1_basics/sg_execution_times", "examples/2_multi_fidelity/1_mlp_epochs", "examples/2_multi_fidelity/2_sgd_datasets", "examples/2_multi_fidelity/index", "examples/2_multi_fidelity/sg_execution_times", "examples/3_multi_objective/1_schaffer", "examples/3_multi_objective/2_parego", "examples/3_multi_objective/index", "examples/3_multi_objective/sg_execution_times", "examples/5_commandline/1_call_target_function_script", "examples/5_commandline/index", "examples/5_commandline/sg_execution_times", "examples/index", "images/README", "index"], "filenames": ["1_installation.rst", "2_package_overview.rst", "3_getting_started.rst", "4_minimal_example.rst", "5_api.rst", "6_references.rst", "7_glossary.rst", "8_faq.rst", "9_license.rst", "advanced_usage/10_continue.rst", "advanced_usage/11_reproducibility.rst", "advanced_usage/12_optimizations.rst", "advanced_usage/1_components.rst", "advanced_usage/2_multi_fidelity.rst", "advanced_usage/3_multi_objective.rst", "advanced_usage/4_instances.rst", "advanced_usage/5_ask_and_tell.rst", "advanced_usage/6_commandline.rst", "advanced_usage/7_stopping_criteria.rst", "advanced_usage/8_logging.rst", "advanced_usage/9_parallelism.rst", "advanced_usage/index.rst", "api/smac.acquisition.rst", "api/smac.acquisition.function.rst", "api/smac.acquisition.function.abstract_acquisition_function.rst", "api/smac.acquisition.function.confidence_bound.rst", "api/smac.acquisition.function.expected_improvement.rst", "api/smac.acquisition.function.integrated_acquisition_function.rst", "api/smac.acquisition.function.prior_acqusition_function.rst", "api/smac.acquisition.function.probability_improvement.rst", "api/smac.acquisition.function.thompson.rst", "api/smac.acquisition.maximizer.rst", "api/smac.acquisition.maximizer.abstract_acqusition_maximizer.rst", "api/smac.acquisition.maximizer.differential_evolution.rst", "api/smac.acquisition.maximizer.helpers.rst", "api/smac.acquisition.maximizer.local_and_random_search.rst", "api/smac.acquisition.maximizer.local_search.rst", "api/smac.acquisition.maximizer.random_search.rst", "api/smac.callback.rst", "api/smac.facade.rst", "api/smac.facade.abstract_facade.rst", "api/smac.facade.algorithm_configuration_facade.rst", "api/smac.facade.blackbox_facade.rst", "api/smac.facade.hyperband_facade.rst", "api/smac.facade.hyperparameter_optimization_facade.rst", "api/smac.facade.multi_fidelity_facade.rst", "api/smac.facade.random_facade.rst", "api/smac.initial_design.rst", "api/smac.initial_design.abstract_initial_design.rst", "api/smac.initial_design.default_design.rst", "api/smac.initial_design.factorial_design.rst", "api/smac.initial_design.latin_hypercube_design.rst", "api/smac.initial_design.random_design.rst", "api/smac.initial_design.sobol_design.rst", "api/smac.intensifier.rst", "api/smac.intensifier.abstract_intensifier.rst", "api/smac.intensifier.hyperband.rst", "api/smac.intensifier.intensifier.rst", "api/smac.intensifier.successive_halving.rst", "api/smac.main.rst", "api/smac.main.config_selector.rst", "api/smac.main.smbo.rst", "api/smac.model.rst", "api/smac.model.abstract_model.rst", "api/smac.model.gaussian_process.rst", "api/smac.model.gaussian_process.abstract_gaussian_process.rst", "api/smac.model.gaussian_process.gaussian_process.rst", "api/smac.model.gaussian_process.gpytorch_gaussian_process.rst", "api/smac.model.gaussian_process.kernels.rst", "api/smac.model.gaussian_process.kernels.base_kernels.rst", "api/smac.model.gaussian_process.kernels.hamming_kernel.rst", "api/smac.model.gaussian_process.kernels.matern_kernel.rst", "api/smac.model.gaussian_process.kernels.rbf_kernel.rst", "api/smac.model.gaussian_process.kernels.white_kernel.rst", "api/smac.model.gaussian_process.mcmc_gaussian_process.rst", "api/smac.model.gaussian_process.priors.rst", "api/smac.model.gaussian_process.priors.abstract_prior.rst", "api/smac.model.gaussian_process.priors.gamma_prior.rst", "api/smac.model.gaussian_process.priors.horseshoe_prior.rst", "api/smac.model.gaussian_process.priors.log_normal_prior.rst", "api/smac.model.gaussian_process.priors.tophat_prior.rst", "api/smac.model.multi_objective_model.rst", "api/smac.model.random_forest.rst", "api/smac.model.random_forest.abstract_random_forest.rst", "api/smac.model.random_forest.random_forest.rst", "api/smac.model.random_model.rst", "api/smac.multi_objective.rst", "api/smac.multi_objective.abstract_multi_objective_algorithm.rst", "api/smac.multi_objective.aggregation_strategy.rst", "api/smac.multi_objective.parego.rst", "api/smac.random_design.rst", "api/smac.random_design.abstract_random_design.rst", "api/smac.random_design.annealing_design.rst", "api/smac.random_design.modulus_design.rst", "api/smac.random_design.probability_design.rst", "api/smac.runhistory.rst", "api/smac.runhistory.dataclasses.rst", "api/smac.runhistory.encoder.rst", "api/smac.runhistory.encoder.abstract_encoder.rst", "api/smac.runhistory.encoder.boing_encoder.rst", "api/smac.runhistory.encoder.eips_encoder.rst", "api/smac.runhistory.encoder.encoder.rst", "api/smac.runhistory.encoder.inverse_scaled_encoder.rst", "api/smac.runhistory.encoder.log_encoder.rst", "api/smac.runhistory.encoder.log_scaled_encoder.rst", "api/smac.runhistory.encoder.scaled_encoder.rst", "api/smac.runhistory.encoder.sqrt_scaled_encoder.rst", "api/smac.runhistory.enumerations.rst", "api/smac.runhistory.errors.rst", "api/smac.runhistory.runhistory.rst", "api/smac.runner.rst", "api/smac.runner.abstract_runner.rst", "api/smac.runner.abstract_serial_runner.rst", "api/smac.runner.dask_runner.rst", "api/smac.runner.exceptions.rst", "api/smac.runner.target_function_runner.rst", "api/smac.runner.target_function_script_runner.rst", "api/smac.scenario.rst", "api/smac.utils.rst", "api/smac.utils.configspace.rst", "api/smac.utils.data_structures.rst", "api/smac.utils.logging.rst", "api/smac.utils.multi_objective.rst", "api/smac.utils.pareto_front.rst", "api/smac.utils.subspaces.rst", "api/smac.utils.subspaces.boing_subspace.rst", "api/smac.utils.subspaces.turbo_subspace.rst", "examples/1_basics/1_quadratic_function.rst", "examples/1_basics/2_svm_cv.rst", "examples/1_basics/3_ask_and_tell.rst", "examples/1_basics/4_callback.rst", "examples/1_basics/5_continue.rst", "examples/1_basics/6_priors.rst", "examples/1_basics/index.rst", "examples/1_basics/sg_execution_times.rst", "examples/2_multi_fidelity/1_mlp_epochs.rst", "examples/2_multi_fidelity/2_sgd_datasets.rst", "examples/2_multi_fidelity/index.rst", "examples/2_multi_fidelity/sg_execution_times.rst", "examples/3_multi_objective/1_schaffer.rst", "examples/3_multi_objective/2_parego.rst", "examples/3_multi_objective/index.rst", "examples/3_multi_objective/sg_execution_times.rst", "examples/5_commandline/1_call_target_function_script.rst", "examples/5_commandline/index.rst", "examples/5_commandline/sg_execution_times.rst", "examples/index.rst", "images/README.md", "index.rst"], "titles": ["Installation", "Package Overview", "Getting Started", "Minimal Example", "API References", "References", "Glossary", "F.A.Q.", "License", "Continue", "Reproducibility", "Optimizations", "Components", "Multi-Fidelity Optimization", "Multi-Objective Optimization", "Optimization across Instances", "Ask-and-Tell Interface", "Command-Line Interface", "Stopping Criteria", "Logging", "Parallelism", "Advanced Usage", "smac.acquisition", "smac.acquisition.function", "smac.acquisition.function.abstract_acquisition_function", "smac.acquisition.function.confidence_bound", "smac.acquisition.function.expected_improvement", "smac.acquisition.function.integrated_acquisition_function", "smac.acquisition.function.prior_acqusition_function", "smac.acquisition.function.probability_improvement", "smac.acquisition.function.thompson", "smac.acquisition.maximizer", "smac.acquisition.maximizer.abstract_acqusition_maximizer", "smac.acquisition.maximizer.differential_evolution", "smac.acquisition.maximizer.helpers", "smac.acquisition.maximizer.local_and_random_search", "smac.acquisition.maximizer.local_search", "smac.acquisition.maximizer.random_search", "smac.callback", "smac.facade", "smac.facade.abstract_facade", "smac.facade.algorithm_configuration_facade", "smac.facade.blackbox_facade", "smac.facade.hyperband_facade", "smac.facade.hyperparameter_optimization_facade", "smac.facade.multi_fidelity_facade", "smac.facade.random_facade", "smac.initial_design", "smac.initial_design.abstract_initial_design", "smac.initial_design.default_design", "smac.initial_design.factorial_design", "smac.initial_design.latin_hypercube_design", "smac.initial_design.random_design", "smac.initial_design.sobol_design", "smac.intensifier", "smac.intensifier.abstract_intensifier", "smac.intensifier.hyperband", "smac.intensifier.intensifier", "smac.intensifier.successive_halving", "smac.main", "smac.main.config_selector", "smac.main.smbo", "smac.model", "smac.model.abstract_model", "smac.model.gaussian_process", "smac.model.gaussian_process.abstract_gaussian_process", "smac.model.gaussian_process.gaussian_process", "smac.model.gaussian_process.gpytorch_gaussian_process", "smac.model.gaussian_process.kernels", "smac.model.gaussian_process.kernels.base_kernels", "smac.model.gaussian_process.kernels.hamming_kernel", "smac.model.gaussian_process.kernels.matern_kernel", "smac.model.gaussian_process.kernels.rbf_kernel", "smac.model.gaussian_process.kernels.white_kernel", "smac.model.gaussian_process.mcmc_gaussian_process", "smac.model.gaussian_process.priors", "smac.model.gaussian_process.priors.abstract_prior", "smac.model.gaussian_process.priors.gamma_prior", "smac.model.gaussian_process.priors.horseshoe_prior", "smac.model.gaussian_process.priors.log_normal_prior", "smac.model.gaussian_process.priors.tophat_prior", "smac.model.multi_objective_model", "smac.model.random_forest", "smac.model.random_forest.abstract_random_forest", "smac.model.random_forest.random_forest", "smac.model.random_model", "smac.multi_objective", "smac.multi_objective.abstract_multi_objective_algorithm", "smac.multi_objective.aggregation_strategy", "smac.multi_objective.parego", "smac.random_design", "smac.random_design.abstract_random_design", "smac.random_design.annealing_design", "smac.random_design.modulus_design", "smac.random_design.probability_design", "smac.runhistory", "smac.runhistory.dataclasses", "smac.runhistory.encoder", "smac.runhistory.encoder.abstract_encoder", "smac.runhistory.encoder.boing_encoder", "smac.runhistory.encoder.eips_encoder", "smac.runhistory.encoder.encoder", "smac.runhistory.encoder.inverse_scaled_encoder", "smac.runhistory.encoder.log_encoder", "smac.runhistory.encoder.log_scaled_encoder", "smac.runhistory.encoder.scaled_encoder", "smac.runhistory.encoder.sqrt_scaled_encoder", "smac.runhistory.enumerations", "smac.runhistory.errors", "smac.runhistory.runhistory", "smac.runner", "smac.runner.abstract_runner", "smac.runner.abstract_serial_runner", "smac.runner.dask_runner", "smac.runner.exceptions", "smac.runner.target_function_runner", "smac.runner.target_function_script_runner", "smac.scenario", "smac.utils", "smac.utils.configspace", "smac.utils.data_structures", "smac.utils.logging", "smac.utils.multi_objective", "smac.utils.pareto_front", "smac.utils.subspaces", "smac.utils.subspaces.boing_subspace", "smac.utils.subspaces.turbo_subspace", "Quadratic Function", "Support Vector Machine with Cross-Validation", "Ask-and-Tell", "Custom Callback", "Continue an Optimization", "User Priors over the Optimum", "Basics", "Computation times", "Multi-Layer Perceptron Using Multiple Epochs", "Stochastic Gradient Descent On Multiple Datasets", "Multi-Fidelity and Multi-Instances", "Computation times", "2D Schaffer Function with Objective Weights", "ParEGO", "Multi-Objective", "Computation times", "Call Target Function From Script", "Command-Line Interface", "Computation times", "Examples", "Overview Figure", "Home"], "terms": {"smac": [0, 1, 2, 3, 6, 7, 9, 11, 12, 14, 16, 17, 18, 19, 20, 21, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143, 144, 146, 148], "i": [0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 23, 28, 31, 32, 33, 35, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 74, 75, 76, 78, 81, 82, 84, 90, 91, 92, 93, 94, 95, 96, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 122, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143, 144, 146, 148], "written": [0, 54, 55, 148], "python3": [0, 135, 148], "therefor": [0, 2, 6, 12, 39, 46, 68, 69, 117, 135, 140], "an": [0, 1, 2, 6, 7, 12, 13, 14, 16, 17, 23, 24, 31, 32, 34, 38, 39, 40, 41, 42, 44, 46, 54, 55, 57, 64, 74, 86, 88, 90, 91, 92, 93, 94, 95, 96, 109, 110, 111, 112, 113, 114, 115, 116, 120, 121, 127, 128, 132, 133, 134, 135, 136, 140, 146, 148], "environ": [0, 2, 3, 39, 40, 117, 127, 130, 131, 132, 135, 140, 143], "python": [0, 1, 7, 17, 34, 64, 66, 74, 76, 110, 115, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143, 144, 146, 148], "3": [0, 6, 8, 12, 14, 39, 41, 42, 43, 44, 45, 46, 54, 56, 57, 58, 82, 84, 90, 93, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143, 148], "8": [0, 2, 11, 12, 39, 40, 42, 54, 58, 60, 82, 84, 128, 132, 135, 139, 140, 143, 148], "furthermor": [0, 54, 55, 130], "random": [0, 2, 6, 21, 23, 28, 31, 32, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 54, 55, 57, 58, 62, 63, 82, 83, 84, 85, 90, 91, 92, 93, 94, 117, 128, 132, 135, 140, 148], "forest": [0, 2, 6, 12, 23, 28, 31, 35, 39, 41, 44, 62, 63, 82, 83, 84, 128, 132, 148], "us": [0, 1, 2, 3, 6, 7, 8, 10, 12, 13, 14, 15, 17, 18, 20, 23, 24, 28, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 74, 75, 76, 78, 80, 81, 82, 84, 90, 92, 93, 94, 95, 96, 97, 98, 102, 103, 104, 106, 109, 110, 111, 113, 116, 117, 119, 120, 121, 127, 128, 129, 130, 131, 132, 136, 137, 138, 139, 140, 143, 144, 146, 148], "swig": 0, "build": [0, 128, 132, 135, 136], "depend": [0, 1, 2, 7, 11, 12, 17, 21, 39, 42, 62, 63, 86, 87, 110, 114, 117, 128], "either": [0, 2, 7, 39, 40, 64, 74, 95, 109, 110, 115], "your": [0, 1, 2, 6, 7, 14, 15, 17, 19, 21, 117], "system": 0, "directli": [0, 2, 12, 13, 14, 17, 110, 115], "The": [0, 1, 2, 3, 6, 7, 11, 12, 13, 14, 17, 18, 19, 20, 23, 24, 31, 32, 33, 35, 39, 40, 41, 42, 44, 46, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 74, 75, 76, 77, 80, 81, 82, 84, 90, 91, 93, 95, 96, 97, 98, 109, 110, 111, 112, 113, 115, 116, 117, 119, 123, 127, 129, 135, 139, 140, 148], "command": [0, 1, 6, 21], "linux": 0, "machin": [0, 3, 23, 27, 133, 134, 146, 148], "follow": [0, 1, 2, 3, 7, 11, 12, 14, 15, 17, 19, 39, 46, 54, 57, 58, 82, 84, 110, 111, 113, 116, 143, 148], "apt": 0, "get": [0, 12, 31, 32, 33, 37, 54, 55, 58, 68, 69, 110, 113, 121, 127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "test": [0, 17, 62, 63, 64, 66, 95, 109, 116, 148], "mac": [0, 7], "9": [0, 31, 33, 135, 136, 139, 148], "10": [0, 2, 6, 19, 23, 28, 31, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 64, 66, 82, 84, 127, 128, 129, 130, 131, 132, 135, 139, 140, 148], "we": [0, 2, 6, 7, 12, 14, 15, 17, 21, 23, 30, 31, 32, 39, 46, 54, 55, 58, 60, 64, 74, 76, 110, 111, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143, 146, 148], "recommend": [0, 7, 11, 12, 17, 21], "creat": [0, 7, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 47, 48, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 74, 75, 76, 77, 78, 79, 80, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 110, 111, 113, 115, 116, 128, 132, 135, 136, 140], "activ": [0, 7, 68, 69, 110, 113, 132, 135, 140], "n": [0, 5, 23, 24, 27, 30, 54, 57, 60, 64, 66, 74, 76, 110, 113, 120, 139, 140], "If": [0, 2, 7, 8, 9, 12, 16, 17, 18, 21, 23, 28, 31, 32, 39, 40, 44, 46, 54, 55, 57, 58, 60, 61, 62, 64, 68, 69, 74, 81, 82, 84, 90, 93, 95, 97, 98, 109, 110, 113, 116, 117, 122, 128, 136, 148], "you": [0, 1, 2, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 21, 39, 44, 46, 64, 74, 110, 113, 117, 128, 132, 135, 139, 144, 146, 148], "haven": 0, "t": [0, 2, 7, 23, 25, 26, 29, 30, 68, 69, 131], "yet": [0, 7, 54, 58, 127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "can": [0, 1, 2, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 30, 31, 32, 33, 36, 39, 40, 43, 45, 54, 55, 58, 64, 74, 95, 109, 110, 111, 112, 113, 115, 117, 121, 128, 129, 131, 132, 135, 139, 140, 144, 146, 148], "insid": [0, 12, 130], "gxx_linux": 0, "64": [0, 31, 36], "gcc_linux": 0, "now": [0, 14, 127, 128, 129, 130, 131, 136, 143], "via": [0, 12, 14, 31, 33, 37, 110, 111, 113], "pypi": 0, "pip": [0, 135], "Or": [0, 14], "altern": [0, 14, 128, 136], "clone": 0, "from": [0, 1, 2, 3, 7, 9, 12, 17, 18, 19, 31, 32, 33, 35, 39, 40, 46, 47, 48, 54, 55, 57, 58, 60, 61, 64, 66, 68, 69, 76, 95, 109, 110, 111, 113, 116, 117, 123, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 144, 145, 146], "github": [0, 7, 47, 53, 123, 148], "git": 0, "http": [0, 5, 8, 23, 27, 34, 47, 51, 53, 86, 89, 123, 135, 148], "com": [0, 34, 123, 148], "automl": [0, 7, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143, 148], "smac3": [0, 7, 148], "cd": 0, "e": [0, 1, 6, 11, 12, 14, 17, 23, 26, 31, 35, 39, 43, 45, 54, 58, 60, 75, 77, 110, 111, 136], "dev": 0, "channel": 0, "achiev": [0, 2], "ad": [0, 12, 38, 54, 55, 57, 58, 68, 69, 95, 109, 119, 127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "config": [0, 2, 3, 6, 12, 38, 39, 40, 45, 47, 48, 54, 55, 57, 58, 60, 61, 95, 96, 107, 109, 110, 111, 113, 115, 116, 117, 119, 123, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "add": [0, 7, 12, 15, 39, 40, 41, 42, 44, 45, 46, 47, 48, 54, 57, 58, 61, 95, 109, 128, 132, 135, 136, 140], "set": [0, 1, 5, 7, 9, 12, 17, 18, 39, 40, 42, 43, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 61, 90, 92, 94, 95, 109, 110, 115, 117, 121, 122, 131, 132, 139, 140, 143], "channel_prior": 0, "strict": 0, "must": [0, 2, 17, 31, 32, 34, 39, 41, 42, 44, 46, 62, 63, 68, 69, 75, 76, 77, 80, 81, 86, 88, 116, 117, 135], "have": [0, 6, 7, 8, 9, 12, 13, 14, 16, 17, 31, 35, 39, 46, 54, 55, 60, 95, 96, 109, 110, 111, 112, 113, 129, 132, 135, 136, 140], "4": [0, 1, 12, 17, 39, 41, 54, 58, 97, 98, 100, 101, 103, 104, 105, 116, 127, 129, 130, 132, 135, 136, 139, 140], "To": [0, 7, 9, 12, 15, 110, 113, 132, 135], "updat": [0, 12, 17, 23, 24, 38, 39, 40, 46, 54, 55, 61, 86, 87, 89, 95, 109, 131], "check": [0, 12, 54, 55, 60, 61, 90, 91, 92, 93, 94, 95, 109, 110, 111, 117, 131], "current": [0, 6, 12, 23, 24, 26, 27, 31, 32, 39, 40, 46, 54, 55, 56, 57, 58, 61, 64, 66, 90, 94, 95, 96, 97, 98, 109, 130], "version": [0, 2, 7, 12, 18, 19, 31, 35], "pleas": [0, 1, 2, 7, 8, 9, 12, 13, 16, 17, 20, 23, 30, 39, 46, 54, 55, 95, 109, 135, 148], "instruct": 0, "offici": 0, "document": [0, 2, 5, 31, 33, 54, 56], "onc": [0, 12, 31, 36, 39, 43, 45, 46, 54, 58, 132, 135, 140], "ha": [0, 1, 18, 31, 32, 47, 48, 54, 55, 58, 68, 69, 96], "been": [0, 1, 7, 12, 16, 18, 54, 55, 58, 60, 95, 96, 109, 110, 111, 112, 113, 129], "enabl": [0, 17, 39, 41, 44, 82, 84, 95, 109], "read": [0, 9, 21, 95, 109], "feedstock": 0, "more": [0, 2, 6, 11, 12, 14, 18, 21, 39, 45, 54, 55, 57, 110, 111, 113, 139], "detail": [0, 2, 6, 23, 27, 28, 39, 45, 135], "support": [1, 2, 3, 12, 20, 39, 41, 43, 45, 54, 55, 57, 58, 68, 69, 133, 134, 146], "determin": [1, 7, 13, 39, 40, 54, 55, 64, 68, 69, 74, 112], "well": [1, 12, 16, 23, 28, 110, 111, 128, 129, 132], "perform": [1, 2, 6, 7, 12, 13, 17, 31, 35, 36, 39, 40, 41, 43, 44, 45, 46, 54, 55, 58, 61, 82, 84, 95, 109, 110, 111, 117, 136, 148], "hyperparamet": [1, 2, 3, 5, 6, 12, 17, 23, 27, 28, 31, 35, 39, 40, 42, 44, 45, 47, 48, 62, 63, 64, 66, 68, 69, 70, 74, 75, 76, 80, 81, 82, 84, 119, 127, 128, 129, 130, 131, 132, 135, 140, 143, 148], "configur": [1, 3, 6, 7, 11, 14, 16, 17, 21, 23, 24, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 57, 58, 60, 61, 75, 76, 80, 90, 91, 92, 93, 94, 95, 96, 97, 98, 109, 110, 111, 112, 113, 115, 116, 117, 119, 121, 123, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143, 148], "algorithm": [1, 2, 5, 6, 7, 13, 14, 21, 23, 27, 31, 33, 39, 40, 41, 42, 43, 44, 46, 54, 55, 95, 97, 98, 109, 110, 111, 115, 116, 123, 136, 148], "By": [1, 135], "being": [1, 6, 68, 69, 110, 115], "robust": [1, 64, 66, 74, 76], "flexibl": [1, 64, 66, 74, 76], "framework": [1, 2, 6, 64, 66, 74, 76], "bayesian": [1, 5, 6, 12, 23, 27, 28, 39, 40, 61, 64, 66, 74, 76, 90, 93, 130, 148], "optim": [1, 2, 3, 5, 6, 7, 12, 16, 18, 19, 20, 21, 23, 25, 27, 28, 30, 31, 33, 35, 38, 39, 40, 46, 54, 55, 61, 64, 66, 74, 76, 86, 87, 90, 93, 117, 127, 128, 129, 130, 132, 133, 134, 135, 136, 139, 140, 143, 144, 146, 148], "improv": [1, 2, 12, 23, 26, 29, 39, 41, 42, 44, 97, 100], "within": [1, 60, 110, 113], "few": [1, 6, 39, 46, 136], "function": [1, 5, 6, 7, 11, 13, 14, 20, 21, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 46, 60, 61, 64, 66, 68, 69, 74, 95, 97, 98, 100, 109, 110, 111, 112, 113, 114, 115, 116, 117, 129, 131, 132, 133, 134, 135, 136, 140, 141, 142, 144, 145, 146], "evalu": [1, 2, 6, 7, 11, 12, 13, 18, 20, 23, 24, 31, 32, 33, 39, 40, 41, 42, 44, 46, 47, 48, 49, 52, 54, 55, 57, 58, 60, 68, 69, 90, 91, 92, 93, 94, 95, 96, 109, 110, 115, 127, 128, 129, 130, 135, 136, 139, 140], "It": [1, 6, 12, 16, 54, 55, 60, 82, 84, 110, 113, 128, 129], "offer": [1, 2, 14, 110, 111], "sever": [1, 34, 38, 146], "entri": [1, 2], "point": [1, 2, 12, 14, 23, 25, 31, 32, 35, 39, 41, 44, 54, 55, 62, 63, 64, 66, 81, 82, 84, 139], "pre": [1, 15], "typic": 1, "case": [1, 2, 12, 13, 14, 16, 20, 23, 28, 31, 35, 39, 40, 41, 42, 43, 44, 45, 46, 54, 55, 57, 58, 60, 61, 95, 96, 109, 110, 111, 112, 113, 117, 136, 146], "solv": 1, "low": [1, 2, 11, 12, 39, 46], "dimension": [1, 12, 39, 41, 62, 63, 64, 65, 66, 74, 82, 84, 129], "continu": [1, 12, 21, 31, 33, 39, 40, 42, 54, 55, 56, 57, 58, 60, 95, 109, 128, 129, 132, 133, 134, 135, 139, 146, 148], "artifici": [1, 131], "global": [1, 6, 19, 31, 33, 54, 55], "problem": [1, 5, 6, 7, 39, 40, 110, 111, 113, 115, 116, 127, 129], "across": [1, 6, 21, 39, 43, 45, 54, 58, 95, 109, 136], "multipl": [1, 6, 7, 12, 13, 14, 20, 23, 28, 39, 40, 47, 48, 62, 81, 95, 109, 117, 132, 137, 138, 140, 146], "instanc": [1, 2, 6, 7, 12, 13, 17, 18, 21, 39, 40, 41, 42, 43, 44, 45, 46, 54, 55, 57, 58, 61, 62, 63, 64, 65, 66, 74, 81, 82, 84, 95, 96, 97, 98, 109, 110, 111, 113, 115, 116, 117, 119, 123, 127, 128, 129, 131, 132, 135, 136, 140, 143], "characterist": 1, "capabl": [1, 110, 113], "sampl": [1, 12, 14, 15, 23, 30, 31, 32, 34, 35, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 54, 57, 58, 60, 62, 63, 64, 66, 74, 76, 81, 82, 84, 117], "effici": [1, 2, 11, 31, 33, 54, 55, 95, 109, 148], "black": [1, 2, 6, 127], "box": [1, 2, 6, 127], "onli": [1, 6, 7, 10, 11, 12, 14, 17, 19, 20, 23, 24, 30, 39, 43, 45, 47, 49, 54, 55, 57, 58, 60, 61, 62, 63, 68, 69, 81, 95, 97, 98, 109, 110, 112, 113, 117, 123, 127, 129, 131, 132, 135, 136, 139, 140, 143], "awar": 1, "input": [1, 6, 12, 23, 25, 39, 43, 45, 54, 57, 58, 62, 63, 64, 66, 76, 81, 82, 84, 97, 101, 122, 129], "output": [1, 6, 17, 61, 62, 63, 64, 66, 74, 117], "agnost": 1, "intern": [1, 13, 15, 39, 40, 47, 48, 54, 55, 56, 57, 58, 61, 62, 63, 64, 68, 69, 74, 75, 76, 80, 81, 86, 87, 89, 110, 111, 113, 115, 116, 117, 135], "categor": [1, 2, 31, 35, 39, 42, 128, 132, 135, 136, 140], "hierarch": 1, "condit": [1, 68, 69, 119, 128, 135, 136, 140], "integr": [1, 12, 23, 27, 64, 74, 130, 132], "configurationspac": [1, 2, 3, 31, 32, 34, 35, 36, 62, 63, 64, 65, 66, 74, 95, 109, 117, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "up": [1, 12, 54, 58, 60, 95, 109, 121, 127], "100": [1, 3, 6, 117, 127, 129, 130, 136, 139], "ani": [1, 6, 7, 8, 9, 12, 19, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 39, 40, 43, 45, 47, 48, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 68, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 109, 110, 111, 112, 113, 115, 116, 117, 127, 131, 132, 143], "object": [1, 2, 3, 6, 15, 17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 109, 110, 111, 112, 113, 115, 116, 117, 119, 122, 127, 128, 129, 130, 131, 132, 135, 136, 140, 142, 143], "g": [1, 5, 6, 11, 12, 14, 17, 31, 35, 136], "accuraci": [1, 2, 18, 132, 135, 140], "runtim": [1, 17, 18, 23, 26, 61, 97, 100, 110, 111, 113, 115, 116], "cross": [1, 6, 117, 132, 133, 134, 135, 136, 140, 146], "valid": [1, 2, 6, 39, 40, 54, 55, 58, 61, 62, 63, 117, 127, 129, 131, 132, 133, 134, 135, 136, 139, 140, 143, 146], "possibl": [1, 2, 12, 23, 28, 39, 40, 68, 69, 136], "multi": [1, 2, 6, 17, 21, 39, 40, 41, 42, 43, 44, 45, 46, 54, 55, 57, 58, 61, 86, 87, 88, 89, 95, 96, 97, 98, 109, 110, 115, 116, 117, 132, 136, 138, 139, 140], "arbitrari": [1, 2, 110, 111, 113, 115, 116, 129, 148], "number": [1, 6, 11, 12, 13, 15, 18, 20, 23, 25, 27, 28, 31, 32, 33, 35, 36, 39, 41, 42, 44, 45, 46, 47, 48, 54, 55, 57, 58, 62, 63, 64, 65, 66, 68, 69, 74, 76, 82, 84, 86, 88, 90, 91, 92, 93, 94, 95, 109, 110, 111, 112, 113, 115, 116, 117, 128, 132, 135, 136, 139, 140, 143], "scalar": [1, 12, 14, 39, 40, 76, 95, 109], "both": [1, 2, 13, 14, 54, 55, 60, 112, 135, 140], "parego": [1, 5, 12, 14, 86, 141, 142, 146], "know06": [1, 5, 14], "mean": [1, 3, 7, 12, 14, 15, 39, 41, 42, 44, 46, 54, 57, 62, 63, 64, 66, 74, 75, 77, 79, 81, 82, 84, 86, 88, 95, 109, 117, 128, 132, 135, 136, 140], "aggreg": [1, 14, 39, 41, 42, 44, 46, 86, 88], "strategi": [1, 6, 14, 39, 40, 41, 42, 44, 46, 47, 48, 86, 87], "ar": [1, 2, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 20, 23, 24, 26, 31, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 74, 76, 82, 84, 95, 97, 98, 109, 110, 111, 112, 113, 115, 116, 117, 119, 122, 127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "fidel": [1, 2, 6, 12, 18, 21, 39, 40, 45, 54, 55, 57, 58, 61, 95, 109, 117, 135, 136], "judg": [1, 39, 40, 61], "budget": [1, 2, 6, 12, 13, 16, 17, 18, 39, 40, 41, 43, 45, 46, 54, 55, 57, 58, 60, 61, 95, 96, 97, 98, 109, 110, 111, 113, 115, 116, 117, 123, 127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "discard": [1, 39, 43, 45, 54, 58], "unsuit": 1, "earli": [1, 39, 46], "thi": [1, 2, 7, 8, 12, 14, 15, 19, 20, 21, 23, 24, 31, 32, 35, 38, 39, 40, 42, 44, 45, 46, 47, 48, 54, 55, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 70, 74, 75, 76, 80, 82, 84, 90, 91, 93, 95, 96, 109, 110, 111, 112, 113, 114, 117, 119, 129, 130, 131, 132, 135, 136, 143, 144, 146, 148], "result": [1, 2, 12, 16, 39, 40, 54, 55, 61, 110, 111, 112, 113, 115, 116, 117, 127, 131, 135, 143], "massiv": 1, "speed": 1, "find": [1, 2, 3, 6, 12, 31, 33, 54, 55, 60, 127, 128, 129, 130, 131, 143], "one": [1, 6, 7, 10, 11, 14, 17, 18, 20, 31, 34, 35, 39, 46, 54, 55, 57, 58, 64, 74, 95, 97, 102, 104, 105, 106, 109, 110, 111, 112, 113, 116, 117, 127, 129, 131, 132, 136, 139, 140, 143], "dataset": [1, 3, 6, 15, 117, 128, 132, 135, 137, 138, 140, 146], "mani": [1, 2, 6, 11, 39, 41, 42, 43, 44, 45, 46, 54, 55, 57, 58, 60, 62, 81, 95, 96, 109], "line": [1, 5, 6, 21], "interfac": [1, 2, 6, 14, 21, 129], "execut": [1, 7, 12, 17, 39, 40, 45, 61, 95, 109, 110, 111, 112, 113, 115, 116, 134, 138, 142, 145], "file": [1, 8, 9, 17, 21, 39, 40, 61, 95, 109, 117, 134, 138, 142, 145], "also": [1, 2, 6, 7, 12, 13, 17, 18, 54, 55, 64, 74, 95, 109, 110, 111, 113, 116, 122, 128, 131, 132, 135, 140], "commandlin": 1, "consequ": 1, "implement": [1, 2, 7, 12, 23, 24, 31, 32, 35, 36, 47, 48, 54, 55, 57, 58, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 82, 84, 86, 89, 110, 111, 113, 135], "other": [1, 12, 18, 23, 30, 39, 40, 54, 55, 61, 95, 109], "languag": 1, "temporarili": 1, "disabl": [1, 19, 39, 42, 44, 45, 47, 48, 130], "v2": [1, 7, 16, 17], "0": [1, 2, 3, 7, 12, 14, 15, 16, 17, 18, 19, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 109, 116, 117, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 142, 143, 145], "fall": 1, "back": [1, 12], "v1": [1, 17], "need": [1, 2, 12, 15, 17, 21, 34, 39, 40, 54, 55, 57, 58, 68, 69, 95, 109, 110, 111, 112, 113, 136], "tabl": [1, 2, 19], "provid": [1, 2, 7, 12, 16, 18, 34, 39, 43, 45, 54, 55, 58, 62, 81, 110, 113, 146], "": [1, 2, 5, 6, 7, 9, 12, 13, 19, 31, 35, 36, 39, 40, 61, 64, 66, 74, 76, 110, 111, 113, 115, 116, 117, 127, 128, 129, 130, 132, 135, 140, 143], "tool": [1, 7, 148], "complex": [1, 12, 21, 110, 111], "space": [1, 12, 17, 23, 25, 26, 28, 31, 32, 33, 35, 39, 42, 44, 45, 46, 47, 48, 75, 76, 80, 116, 117, 127, 128, 132, 135, 136], "parallel": [1, 11, 21, 110, 111, 112, 113, 117], "hypermapp": 1, "optuna": 1, "hyperopt": 1, "botorch": 1, "openbox": 1, "hpbandster": [1, 7], "four": [2, 62, 63], "core": [2, 11, 135, 148], "compon": [2, 9, 17, 21, 39, 40, 41, 60, 62, 63, 64, 65, 66, 74, 82, 84], "run": [2, 6, 7, 9, 11, 12, 13, 14, 17, 18, 38, 39, 40, 43, 45, 46, 54, 55, 56, 57, 58, 60, 61, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "process": [2, 5, 6, 7, 11, 12, 14, 16, 17, 18, 20, 31, 35, 38, 39, 40, 42, 54, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 74, 76, 110, 111, 115, 116, 117, 127, 130, 135, 136], "all": [2, 6, 12, 14, 16, 17, 18, 19, 21, 23, 28, 31, 35, 39, 40, 43, 45, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 68, 69, 76, 81, 82, 83, 84, 95, 97, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 127, 128, 129, 132, 135, 136, 139, 146], "which": [2, 6, 7, 12, 14, 17, 19, 23, 24, 31, 34, 35, 39, 40, 41, 42, 46, 47, 48, 54, 55, 57, 58, 61, 62, 63, 64, 65, 66, 68, 69, 74, 81, 82, 84, 85, 90, 92, 94, 95, 109, 110, 111, 112, 113, 115, 116, 117, 123, 128, 129, 132, 135, 136, 148], "explain": [2, 12], "page": [2, 19, 21, 148], "thei": [2, 12, 16, 54, 57, 60], "interact": [2, 110, 111], "wai": [2, 19, 54, 55, 130], "defin": [2, 15, 18, 23, 28, 31, 32, 35, 39, 40, 76, 95, 107, 110, 111, 117, 128, 129, 132, 135, 136, 140], "search": [2, 12, 23, 28, 31, 33, 35, 36, 39, 41, 42, 44, 46, 129], "tunabl": 2, "paramet": [2, 12, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 128, 129, 132, 135, 136, 143, 148], "legal": 2, "rang": [2, 86, 87, 88, 89, 128, 129, 132, 135, 136], "default": [2, 7, 12, 13, 14, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 74, 75, 76, 77, 78, 79, 80, 82, 84, 86, 88, 89, 90, 93, 94, 95, 96, 97, 98, 109, 110, 111, 113, 115, 116, 117, 119, 120, 121, 122, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "valu": [2, 12, 13, 14, 17, 18, 23, 24, 25, 26, 27, 28, 30, 31, 32, 38, 39, 40, 46, 61, 62, 63, 64, 66, 68, 69, 74, 76, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 119, 122, 127, 128, 129, 130, 131, 132, 135, 140, 143], "configspac": [2, 3, 31, 32, 33, 34, 35, 36, 37, 62, 63, 64, 65, 66, 74, 82, 84, 85, 95, 109, 117, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "import": [2, 3, 7, 12, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "c": [2, 3, 86, 89, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143, 148], "myfloat": 2, "1": [2, 3, 11, 12, 13, 18, 19, 23, 24, 25, 26, 29, 31, 33, 39, 43, 44, 45, 54, 56, 57, 58, 60, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 75, 77, 81, 82, 84, 86, 87, 88, 89, 97, 98, 100, 101, 103, 104, 105, 117, 119, 120, 122, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "5": [2, 3, 12, 17, 31, 35, 39, 41, 44, 68, 71, 82, 84, 97, 98, 100, 101, 103, 104, 105, 110, 113, 116, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 148], "uniform": [2, 31, 35, 132], "float": [2, 3, 17, 23, 25, 26, 27, 28, 29, 30, 31, 35, 39, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 61, 62, 63, 64, 65, 66, 74, 75, 76, 77, 78, 79, 80, 82, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 109, 110, 111, 113, 115, 116, 117, 119, 122, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140], "myint": 2, "2": [2, 6, 12, 23, 25, 31, 33, 34, 36, 39, 44, 54, 57, 82, 84, 90, 93, 97, 98, 100, 101, 103, 104, 105, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140], "integ": [2, 90, 92, 93, 94, 121, 128, 132, 135, 140], "speci": 2, "mous": 2, "cat": 2, "dog": 2, "see": [2, 6, 7, 8, 12, 13, 23, 27, 28, 47, 51, 53, 54, 56, 95, 109, 139], "take": [2, 7, 11, 12, 16, 39, 40, 62, 63, 82, 84, 110, 113, 135], "return": [2, 3, 6, 12, 14, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "For": [2, 6, 7, 12, 14, 15, 39, 40, 42, 44, 45, 47, 48, 54, 55, 58, 60, 68, 69, 110, 111, 112, 117, 135, 148], "exampl": [2, 6, 7, 9, 12, 13, 14, 15, 16, 17, 23, 24, 39, 40, 42, 44, 45, 47, 48, 54, 55, 58, 60, 110, 111, 116, 117, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "could": [2, 7, 12, 17, 110, 114, 117, 136], "neural": [2, 135], "network": [2, 132, 135], "predict": [2, 12, 31, 35, 62, 63, 81, 82, 84], "data": [2, 3, 6, 12, 13, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 39, 40, 41, 44, 47, 48, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 109, 110, 111, 115, 116, 117, 127, 128, 131, 132, 135, 136, 140, 143], "some": [2, 21, 54, 57, 68, 69, 97, 98, 130], "would": [2, 12], "tune": [2, 31, 36, 64, 74, 132], "learn": [2, 23, 27, 132, 135, 148], "rate": [2, 132, 135], "everi": [2, 12, 54, 55, 90, 92, 93], "chang": [2, 9, 12, 19, 54, 55, 58, 68, 69, 95, 109, 128, 132], "final": [2, 90, 92], "tri": 2, "best": [2, 3, 6, 12, 23, 25, 26, 31, 35, 39, 40, 43, 45, 46, 54, 58, 61, 127, 128, 129, 130, 131, 136, 140, 143], "try": [2, 7, 39, 44, 136], "differ": [2, 6, 7, 12, 15, 16, 17, 31, 35, 38, 39, 40, 54, 55, 82, 84, 86, 87, 110, 111, 117, 119, 120, 132, 135, 136, 140], "def": [2, 3, 12, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140], "train": [2, 3, 6, 12, 14, 15, 20, 38, 39, 40, 44, 54, 55, 60, 62, 63, 64, 65, 66, 74, 82, 84, 97, 98, 117, 127, 128, 129, 130, 131, 132, 135, 136, 140], "self": [2, 12, 31, 32, 54, 55, 62, 63, 64, 68, 69, 74, 75, 76, 80, 90, 92, 95, 109, 110, 111, 112, 113, 127, 128, 129, 130, 131, 132, 135, 136, 140], "seed": [2, 3, 6, 7, 9, 12, 17, 18, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 109, 110, 111, 113, 115, 116, 117, 123, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "int": [2, 3, 23, 25, 31, 32, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 109, 110, 111, 112, 113, 115, 116, 117, 119, 121, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140], "model": [2, 6, 7, 11, 14, 15, 20, 21, 23, 24, 27, 28, 31, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 60, 61, 97, 98, 110, 113, 117, 127, 128, 129, 130, 131, 132, 136, 148], "multilayerperceptron": 2, "learning_r": [2, 135, 136, 140], "fit": [2, 8, 23, 24, 62, 85], "alwai": [2, 7, 12, 54, 55, 58, 129], "minim": [2, 18, 31, 36, 90, 92], "smaller": [2, 39, 45, 82, 84, 119], "better": [2, 11, 12, 39, 46, 54, 55, 57, 127, 128, 129, 131, 132, 135, 136, 140, 143, 148], "In": [2, 6, 11, 12, 13, 14, 15, 17, 18, 21, 31, 32, 39, 40, 54, 55, 58, 61, 64, 66, 74, 75, 76, 80, 95, 96, 109, 110, 111, 112, 113, 115, 117, 130, 131, 135, 136, 139, 140, 148], "gener": [2, 6, 7, 9, 11, 12, 13, 34, 39, 40, 47, 51, 53, 54, 55, 86, 87, 110, 111, 112, 113, 117, 128, 147, 148], "argument": [2, 12, 13, 17, 23, 24, 39, 40, 42, 44, 45, 47, 48, 61, 68, 69, 110, 111, 115, 116, 117, 136, 140, 143], "intensifi": [2, 11, 13, 14, 19, 21, 38, 39, 40, 41, 42, 43, 44, 45, 46, 61, 110, 111, 112, 113, 117, 129, 130, 131, 132, 135, 139, 140], "howev": [2, 6, 7, 12, 14, 16, 17, 21, 39, 40, 54, 58, 60, 116, 139], "first": [2, 7, 12, 16, 17, 39, 40, 54, 55, 57, 58, 60, 68, 69, 95, 109, 110, 114, 115, 120, 128, 131, 139, 143], "name": [2, 9, 14, 15, 19, 23, 24, 25, 26, 27, 28, 29, 30, 39, 40, 61, 68, 69, 95, 97, 98, 109, 117, 121, 135], "here": [2, 7, 12, 18, 23, 30, 54, 55, 60, 127, 131, 132, 136, 143, 148], "specifi": [2, 3, 9, 14, 16, 19, 20, 31, 32, 35, 39, 40, 54, 55, 58, 61, 62, 63, 64, 66, 68, 69, 75, 79, 117, 119, 127, 130, 131, 135, 143], "requir": [2, 7, 12, 13, 23, 24, 28, 30, 31, 33, 54, 58, 60, 82, 84, 95, 109, 110, 111, 115, 116, 117, 136], "addition": [2, 15, 97, 98], "successivehalv": [2, 54, 56, 58, 135], "hyperband": [2, 5, 6, 13, 39, 43, 45, 54, 58, 135], "did": [2, 9], "pass": [2, 7, 12, 13, 14, 17, 19, 39, 40, 54, 55, 82, 84, 95, 97, 98, 109, 110, 111, 113, 115, 116, 117, 121, 122, 123, 127, 131, 132, 135, 136, 140, 143], "But": [2, 136], "don": [2, 7, 131], "worri": 2, "tell": [2, 12, 21, 39, 40, 54, 58, 61, 133, 134, 146], "someth": [2, 12, 17], "miss": [2, 54, 55], "never": [2, 34], "variabl": [2, 17, 54, 55, 56, 57, 58, 61, 117, 132, 135, 140], "want": [2, 6, 7, 9, 12, 14, 15, 19, 21, 23, 30, 39, 46, 128, 131, 132, 135, 136, 140, 144, 146, 148], "limit": [2, 7, 12, 17, 110, 111, 113, 115, 116], "time": [2, 7, 10, 11, 12, 16, 18, 34, 39, 46, 54, 55, 61, 90, 93, 94, 95, 96, 109, 110, 111, 113, 115, 116, 117, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "where": [2, 6, 7, 9, 12, 23, 24, 28, 31, 35, 39, 46, 136, 140], "save": [2, 12, 39, 40, 54, 55, 61, 95, 109, 117], "output_directori": [2, 9, 117], "path": [2, 17, 19, 39, 40, 61, 95, 109, 117, 121], "your_output_directori": 2, "walltime_limit": [2, 117, 135, 136, 140], "120": 2, "two": [2, 12, 31, 35, 60, 82, 84, 119, 136, 140, 148], "minut": [2, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "n_trial": [2, 3, 16, 23, 28, 39, 42, 44, 45, 47, 48, 117, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "500": [2, 135, 143], "max": [2, 13, 16, 23, 26, 39, 44, 46, 54, 55, 57, 122, 128, 135, 136, 140], "trial": [2, 6, 12, 16, 18, 20, 38, 39, 40, 54, 55, 57, 58, 60, 61, 95, 96, 97, 98, 109, 110, 111, 112, 113, 115, 116, 117, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "n_worker": [2, 11, 20, 110, 113, 117, 135, 140], "eight": 2, "worker": [2, 10, 11, 12, 20, 110, 111, 112, 113, 117, 135], "A": [2, 5, 6, 8, 23, 28, 31, 35, 60, 64, 66, 74, 76, 86, 87, 88, 89, 110, 111, 112, 113, 115, 116, 131, 139, 148], "construct": [2, 110, 113], "pipelin": [2, 39, 40], "variou": [2, 39, 40], "satisfi": [2, 12], "common": [2, 110, 111, 113, 132], "crucial": [2, 19, 39, 45, 54, 55, 135], "peak": 2, "idea": [2, 7, 12, 148], "behind": [2, 12], "simpl": [2, 6, 12, 19, 31, 33, 128, 131, 139, 143], "easi": 2, "understand": 2, "without": [2, 8, 23, 26, 34], "deep": [2, 68, 69, 135], "dive": [2, 12], "materi": 2, "expert": 2, "invit": 2, "specif": [2, 7, 11, 12, 14, 19, 23, 24, 39, 40, 54, 55, 68, 69, 82, 84, 97, 100, 136], "horizont": 2, "scrollabl": 2, "show": [2, 7, 12, 14, 17, 19, 116, 127, 129, 135, 139, 140, 143, 146], "what": [2, 7, 62, 63, 110, 111, 113], "reveal": 2, "medium": 2, "high": [2, 11, 12, 20], "initi": [2, 21, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 58, 60, 61, 90, 91, 92, 93, 94, 110, 113, 117, 127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "design": [2, 5, 6, 21, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 90, 91, 110, 113, 127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "sobol": [2, 12, 39, 42, 44, 47, 53], "surrog": [2, 14, 15, 20, 21, 23, 24, 28, 38, 39, 40, 41, 42, 44, 46, 60, 62, 63, 81, 97, 98, 117, 127, 128], "gaussian": [2, 5, 6, 12, 39, 42, 62, 63, 64, 65, 66, 68, 69, 74, 76, 127], "Not": 2, "acquisit": [2, 5, 14, 21, 38, 39, 40, 41, 42, 44, 46, 60, 61, 64, 74, 97, 100, 132], "expect": [2, 7, 12, 23, 26, 39, 40, 41, 42, 44, 82, 84, 97, 100, 110, 111], "log": [2, 12, 21, 23, 25, 26, 39, 40, 44, 64, 66, 75, 76, 79, 80, 82, 84, 97, 100, 103, 104, 128, 130, 132, 135, 136, 140], "maxim": [2, 14, 21, 23, 24, 25, 30, 39, 40, 41, 42, 44, 46, 60], "local": [2, 12, 31, 35, 36, 39, 41, 42, 44, 110, 113], "sort": [2, 12, 31, 35, 39, 41, 42, 44, 54, 55, 95, 109, 123, 140], "runhistori": [2, 21, 38, 39, 40, 41, 42, 44, 45, 46, 54, 55, 57, 58, 60, 61, 123, 127, 129, 130, 131, 139, 140], "encod": [2, 21, 39, 40, 41, 42, 44, 46], "probabl": [2, 12, 23, 29, 39, 41, 42, 44, 75, 76, 80, 90, 92, 94], "20": [2, 19, 39, 41, 42, 44, 64, 74, 82, 84, 129, 130], "50": [2, 12, 19, 39, 42, 44, 45, 47, 48, 64, 74, 127, 128, 129, 130, 131, 136, 139], "closest": [2, 7, 135], "bohb": [2, 6, 7, 135], "emphas": 2, "highli": 2, "modular": 2, "accept": [2, 39, 46, 135], "note": [2, 17, 18, 129], "contrast": 2, "previou": [2, 12, 31, 32, 35, 39, 40, 61, 95, 109, 127, 131, 132, 143], "instanti": [2, 6, 12, 39, 40, 42, 95, 96], "instead": [2, 6, 14, 17, 19, 60, 68, 69, 135], "kwarg": [2, 23, 24, 47, 53, 68, 69, 82, 83, 97, 102, 106], "modul": [2, 19, 121], "blackboxfacad": [2, 17, 39, 42, 143], "bbfacad": 2, "hyperparameteroptimizationfacad": [2, 3, 39, 44, 45, 127, 128, 129, 130, 131, 132, 139, 140], "hpofacad": [2, 12, 127, 130, 131, 139, 140], "multifidelityfacad": [2, 7, 12, 39, 45, 135, 136], "mffacad": [2, 135, 136], "algorithmconfigurationfacad": [2, 39, 41], "acfacad": 2, "randomfacad": [2, 39, 43, 46], "rfacad": 2, "hyperbandfacad": [2, 39, 43, 46], "hbfacad": 2, "target_funct": [2, 17, 39, 40, 41, 42, 43, 44, 45, 46, 110, 115, 116, 139], "code": [3, 7, 9, 12, 17, 18, 31, 35, 54, 55, 64, 66, 74, 75, 80, 110, 113, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143, 144, 146], "vector": [3, 31, 36, 97, 98, 133, 134, 146], "iri": [3, 128], "numpi": [3, 68, 69, 127, 128, 132, 135, 136, 139, 140], "np": [3, 18, 23, 24, 26, 62, 63, 64, 66, 68, 69, 76, 81, 82, 84, 90, 93, 97, 98, 100, 117, 119, 127, 128, 132, 135, 136, 139, 140], "scenario": [3, 9, 11, 13, 14, 15, 16, 17, 18, 20, 23, 28, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 86, 88, 89, 97, 98, 100, 101, 103, 104, 105, 110, 111, 112, 115, 116, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "sklearn": [3, 68, 69, 128, 132, 135, 136, 140], "svm": [3, 128], "svc": [3, 128], "model_select": [3, 128, 132, 135, 136, 140], "cross_val_scor": [3, 128, 132, 135, 136, 140], "load_iri": [3, 128], "classifi": [3, 128, 132, 135, 136, 140], "random_st": [3, 128, 132, 135, 136, 140], "score": [3, 128, 132, 135, 136, 140], "target": [3, 6, 7, 11, 13, 14, 20, 21, 61, 62, 63, 82, 84, 95, 109, 110, 111, 113, 114, 115, 116, 117, 127, 128, 131, 132, 135, 136, 140, 144, 145, 146], "cv": [3, 6, 128, 132, 135, 136, 140], "1000": [3, 39, 42, 127, 128, 143], "determinist": [3, 7, 117, 127, 129, 131, 139, 143], "true": [3, 39, 40, 41, 44, 45, 61, 64, 66, 68, 69, 74, 82, 84, 95, 109, 117, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "200": [3, 14, 130, 135, 140], "incumb": [3, 6, 12, 14, 17, 18, 23, 26, 27, 29, 31, 32, 39, 40, 41, 42, 43, 44, 45, 46, 54, 55, 57, 58, 61, 96, 119, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "ljdr18": [5, 39, 43], "l": 5, "li": [5, 54, 55], "k": [5, 12, 31, 33, 68, 69, 95, 109, 127, 148], "jamieson": 5, "desalvo": 5, "rostamizadeh": 5, "talwalkar": 5, "novel": [5, 6], "bandit": [5, 6], "base": [5, 6, 7, 12, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 128, 136, 148], "approach": [5, 39, 46], "jmlr": [5, 148], "org": [5, 8, 47, 51, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143, 148], "paper": [5, 23, 27, 148], "v18": 5, "16": [5, 39, 40, 54, 57, 60, 132], "558": 5, "html": [5, 47, 51, 53], "hssl22": [5, 23, 28], "carl": [5, 23, 28], "hvarfner": [5, 23, 28], "danni": 5, "stoll": 5, "artur": 5, "souza": 5, "mariu": [5, 148], "lindauer": [5, 148], "frank": [5, 148], "hutter": [5, 7, 64, 66, 74, 76, 148], "luigi": 5, "nardi": 5, "\u03c0bo": 5, "augment": [5, 6, 15, 23, 28], "user": [5, 11, 12, 16, 17, 18, 19, 23, 28, 31, 35, 39, 40, 43, 45, 54, 57, 58, 61, 110, 113, 133, 134, 146], "belief": [5, 23, 28, 132], "arxiv": [5, 148], "pdf": [5, 23, 27, 86, 89], "2204": 5, "11051": 5, "j": 5, "knowl": 5, "hybrid": 5, "landscap": 5, "approxim": [5, 12], "expens": [5, 6], "multiobject": 5, "ieeexplor": 5, "ieee": 5, "1583627": 5, "skks10": [5, 23, 25], "sriniva": 5, "m": [5, 135], "kakad": 5, "kraus": 5, "seeger": 5, "No": [5, 39, 43, 45, 54, 58], "regret": 5, "experiment": 5, "0912": 5, "3995": 5, "bb": 6, "bo": [6, 39, 40], "cli": 6, "gp": [6, 64, 74], "mcmc": [6, 39, 42, 64, 74], "markov": 6, "chain": [6, 64, 74], "mont": [6, 64, 74], "carlo": [6, 64, 74], "hb": 6, "hp": [6, 12, 132], "mf": 6, "rf": [6, 23, 28], "roar": [6, 39, 43, 46], "onlin": [6, 39, 43, 46], "adapt": [6, 76, 135, 136, 140], "race": [6, 39, 43, 46, 54, 55, 57, 135, 148], "sequenti": [6, 7, 148], "smbo": [6, 12, 38, 39, 40, 86, 87, 89, 90, 91, 92, 93, 94, 110, 111, 112, 113, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "mode": 6, "doe": [6, 7, 19, 23, 30, 31, 33, 34, 90, 93, 95, 109, 110, 113], "assum": [6, 7, 39, 40, 54, 55, 110, 114], "form": [6, 17, 75, 77, 116], "usual": [6, 110, 114], "emploi": 6, "weight": [6, 12, 23, 28, 31, 35, 39, 41, 42, 44, 46, 86, 88, 95, 109, 132, 141, 142, 146], "explor": [6, 12, 23, 25, 26, 29, 39, 40, 41, 42, 44], "exploit": [6, 12, 23, 25, 26, 29, 39, 40, 41, 42, 44], "minimum": [6, 31, 33, 39, 41, 44, 82, 84, 95, 109, 117, 127, 131], "its": [6, 12, 15, 18, 64, 68, 69, 74, 95, 109, 110, 111, 112, 113, 127, 128], "refer": [6, 7, 12, 13, 39, 45, 47, 51, 53, 54, 55, 148], "observ": [6, 12, 23, 26, 39, 45, 54, 55, 95, 109, 119], "anoth": [6, 12, 95, 109], "word": [6, 12, 18], "epoch": [6, 13, 117, 137, 138, 146], "size": [6, 117, 120, 132, 135], "subset": [6, 13, 15, 95, 109, 117, 136], "context": [6, 117], "let": [6, 12, 127, 128, 129, 130, 132, 135, 140, 143], "sai": 6, "them": [6, 12, 97, 102, 104, 105, 106, 110, 113, 135, 140], "extens": 6, "success": [6, 13, 16, 17, 39, 43, 45, 54, 58, 95, 96, 97, 98, 100, 101, 103, 104, 105, 109, 116, 135, 136], "halv": [6, 13, 16, 39, 43, 45, 54, 58, 135, 136], "work": [6, 7, 12, 13, 15, 21, 110, 113, 127, 140], "known": 6, "often": [6, 7, 11, 12, 14, 15, 31, 33, 39, 46, 54, 55, 60, 129], "even": [6, 8, 12, 15, 18], "transform": [6, 12, 39, 40, 76, 82, 84, 86, 87, 88, 89, 97, 98, 100, 102, 103, 104, 105, 106, 136], "each": [6, 12, 13, 15, 18, 23, 28, 31, 34, 36, 39, 40, 43, 45, 54, 55, 58, 60, 61, 64, 66, 74, 86, 87, 89, 90, 94, 95, 109, 110, 113, 117, 140], "call": [6, 12, 16, 21, 23, 24, 31, 32, 36, 38, 39, 40, 46, 47, 48, 54, 55, 61, 62, 63, 68, 69, 70, 75, 76, 80, 85, 110, 111, 112, 113, 115, 116, 120, 129, 131, 132, 144, 145, 146], "so": [6, 9, 12, 18, 23, 25, 26, 39, 40, 43, 45, 54, 58, 61, 96, 110, 111, 112, 113, 130, 132, 135], "found": [6, 7, 12, 23, 28, 39, 40, 54, 55, 57, 61, 90, 93, 127, 131, 143, 148], "superior": 6, "intensif": [6, 12, 16, 38, 54, 57, 135], "mechan": [6, 110, 111, 135, 148], "govern": 6, "how": [6, 7, 12, 13, 14, 17, 19, 21, 39, 40, 41, 42, 43, 44, 45, 46, 54, 55, 57, 58, 60, 61, 95, 96, 109, 110, 111, 113, 116, 120, 129, 135, 139, 140, 143, 146], "when": [6, 12, 13, 16, 20, 39, 40, 41, 43, 45, 46, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 74, 82, 84, 110, 113, 117, 121, 135], "trust": 6, "enough": [6, 39, 46, 110, 111], "make": [6, 7, 11, 12, 14, 17, 23, 30, 54, 55, 57, 58, 64, 74, 90, 93, 110, 111, 112, 113, 117, 131, 132, 135, 136, 140], "new": [6, 7, 9, 12, 34, 38, 39, 46, 54, 55, 57, 58, 60, 95, 109, 127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "therebi": [6, 13], "prematur": [6, 13], "than": [6, 11, 31, 33, 39, 45, 46, 54, 55, 57, 61, 75, 76, 77, 82, 84, 117, 127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "goal": 6, "solut": [6, 7, 31, 33, 37], "least": [6, 95, 109, 135], "good": [6, 135], "compromis": 6, "metric": 6, "qualiti": 6, "free": [6, 7, 8, 39, 43], "select": [6, 12, 39, 40, 43, 45, 46, 47, 48, 50, 54, 58, 60, 95, 109, 110, 111, 140], "uniformli": [6, 39, 46], "iter": [6, 12, 18, 31, 32, 34, 35, 36, 38, 39, 40, 42, 44, 54, 55, 57, 60, 86, 87, 89, 90, 91, 92, 93, 94, 95, 109, 110, 111, 112, 113, 120], "compar": [6, 12, 18, 39, 43, 46, 54, 55, 58, 119, 120, 123, 135], "against": [6, 7, 39, 45, 54, 55, 57], "extend": 6, "chapter": [6, 21], "cost": [6, 12, 14, 15, 17, 21, 39, 40, 44, 54, 55, 58, 61, 86, 87, 88, 89, 95, 96, 97, 98, 109, 110, 111, 113, 115, 116, 117, 122, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "given": [6, 17, 23, 24, 25, 39, 45, 54, 55, 58, 62, 63, 90, 92, 94, 95, 97, 98, 109, 110, 111, 115, 116, 122, 123, 136], "singl": [6, 11, 12, 14, 17, 39, 41, 44, 46, 54, 55, 62, 81, 82, 84, 86, 87, 88, 89, 95, 109, 110, 111, 112, 113, 116, 135], "combin": [6, 39, 40, 54, 55, 61, 86, 87, 88, 89, 95, 109, 110, 111, 113, 117, 128, 135, 136, 148], "should": [7, 8, 12, 17, 19, 23, 24, 34, 39, 40, 41, 42, 44, 46, 54, 55, 57, 60, 61, 62, 68, 69, 81, 90, 91, 92, 93, 94, 117, 123, 127, 129], "smac2": [7, 82, 84, 131], "reimplement": 7, "origin": [7, 14, 31, 35, 75, 76, 80, 122, 148], "et": [7, 23, 27, 28, 64, 74], "al": [7, 23, 27, 28, 64, 74], "2021": [7, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143, 148], "slightli": 7, "comparison": [7, 39, 45, 54, 55], "stabl": 7, "releas": 7, "java": 7, "sinc": [7, 12, 14, 17, 18, 21, 39, 46, 54, 55, 135, 139, 140], "maintain": 7, "applic": [7, 13], "cannot": 7, "root": [7, 19, 97, 106, 120], "directori": [7, 61, 117], "instal": [7, 135], "pyrfr": 7, "rais": [7, 97, 98, 132, 135, 140], "cryptic": 7, "error": [7, 19], "ensur": [7, 10, 23, 28, 117], "gcc": 7, "compil": 7, "same": [7, 12, 31, 35, 39, 41, 42, 43, 44, 45, 46, 54, 57, 58, 86, 88, 95, 109, 122, 131], "link": 7, "dure": [7, 12, 31, 35, 36, 39, 40, 46, 61, 82, 84], "happen": [7, 12], "anaconda": 7, "facad": [7, 12, 13, 14, 19, 61, 117, 127, 128, 132, 135, 139, 140], "discov": 7, "bug": 7, "behav": [7, 23, 28], "report": [7, 16], "open": 7, "issu": [7, 12, 31, 35, 39, 44, 148], "our": [7, 9, 13, 14, 16, 128, 132, 135, 136, 140, 143, 148], "list": [7, 11, 14, 17, 23, 24, 27, 31, 32, 34, 39, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 58, 61, 62, 63, 64, 65, 66, 68, 69, 74, 81, 82, 84, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 122, 123, 127, 135, 136, 140], "befor": [7, 12, 23, 24, 31, 35, 36, 38, 39, 40, 44, 60, 64, 74, 90, 93, 110, 111, 112, 113, 135, 140], "sure": [7, 12, 14, 17, 64, 74, 90, 93, 110, 111, 113, 114, 131], "hasn": 7, "alreadi": [7, 12, 23, 24, 54, 57, 60, 61, 95, 109, 129, 135], "tracker": [7, 12, 54, 56, 58], "latest": [7, 54, 55], "u": 7, "inform": [7, 12, 39, 40, 47, 51, 53, 54, 55, 58, 61, 95, 96, 109, 110, 111, 113, 115, 116, 128], "descript": 7, "reproduc": [7, 20, 21, 117], "about": [7, 11, 12, 54, 57, 61, 68, 69, 95, 96, 110, 111, 128, 132], "setup": [7, 39, 40, 46, 61], "help": [7, 11], "resolv": 7, "packag": [7, 135, 148], "feel": 7, "screenshot": 7, "contribut": [7, 148], "discuss": [7, 21], "care": [7, 12, 39, 40], "question": 7, "feedback": 7, "prefer": 7, "locat": [7, 23, 26], "featur": [7, 12, 15, 17, 39, 41, 44, 62, 63, 64, 65, 66, 74, 81, 82, 84, 97, 98, 116, 117, 119, 136], "ongo": 7, "look": [7, 9, 13, 16, 34, 39, 46], "guid": [7, 12], "flag": [7, 131], "fals": [7, 19, 23, 26, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 54, 55, 58, 61, 64, 68, 69, 70, 71, 72, 73, 74, 82, 84, 95, 109, 110, 113, 117, 128, 129, 130, 131], "non": [7, 17, 23, 28, 68, 69, 144, 146], "thu": [7, 15, 31, 32, 132], "nevertheless": [7, 110, 113], "still": [7, 9, 12, 14, 17, 20, 95, 109, 110, 111, 112, 113, 129], "why": [7, 13], "colab": 7, "crash": [7, 97, 98, 100, 101, 103, 104, 105, 110, 114], "child": [7, 47, 48, 110, 111, 128, 135, 140], "pynish": [7, 110, 115, 117], "enforc": [7, 117], "memori": [7, 110, 115, 117, 135], "runner": [7, 12, 61], "mai": [7, 54, 55], "overcom": 7, "remov": [7, 23, 28, 31, 35, 54, 57, 116, 139, 140], "program": [8, 34, 60], "softwar": 8, "redistribut": 8, "modifi": 8, "under": 8, "term": 8, "claus": [8, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "bsd": [8, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "distribut": [8, 12, 75, 77, 79, 82, 84, 110, 113, 135], "hope": 8, "warranti": 8, "impli": [8, 135], "merchant": 8, "FOR": 8, "particular": 8, "purpos": [8, 15], "receiv": [8, 12, 14, 17, 60, 95, 109, 110, 113, 135], "copi": [8, 23, 27, 54, 55], "along": [8, 62, 63], "opensourc": 8, "automat": [9, 21, 110, 113], "restor": [9, 54, 55, 56, 57, 58], "state": [9, 12, 54, 55, 56, 57, 58, 86, 87, 89, 90, 92, 93, 94, 95, 97, 98, 109, 128, 135], "left": [9, 23, 26, 68, 69], "off": [9, 12, 23, 25, 26, 39, 40], "wa": [9, 12, 18, 23, 24, 54, 58, 60, 61, 95, 109, 110, 113, 131], "interrupt": 9, "finish": [9, 12, 38, 95, 109, 110, 111, 112, 113, 127, 128, 129, 130, 131, 135, 136, 139], "do": [9, 12, 14, 15, 17, 19, 23, 30, 39, 46, 110, 113, 132, 143], "old": [9, 39, 40, 61], "deriv": [9, 132], "ask": [9, 12, 21, 38, 39, 40, 61, 133, 134, 146], "whether": [9, 12, 23, 26, 28, 39, 40, 54, 55, 61, 68, 69, 90, 91, 92, 93, 94, 95, 109, 110, 111, 112, 113, 117, 131], "resum": 9, "delet": [9, 110, 113], "complet": [9, 12, 18, 39, 40, 61, 110, 111, 112, 113], "affect": [9, 39, 42, 44, 45, 47, 48, 54, 55], "wallclock": [10, 12, 16, 18, 54, 55, 61, 127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "cpu": [10, 117, 127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "involv": [10, 12, 60], "might": [11, 12, 16, 20, 54, 55, 57, 68, 69, 95, 109, 110, 111, 112, 113], "faster": 11, "slower": 11, "appli": [11, 62, 63, 76, 127], "know": [11, 68, 69, 127, 129], "underli": [11, 15], "max_config_cal": [11, 12, 39, 41, 42, 44, 46, 54, 55, 57, 129, 132, 140], "higher": [11, 12, 128], "lead": [11, 12], "less": 11, "configselector": [11, 12, 39, 40, 54, 55, 60], "retrain_aft": [11, 12, 39, 40, 60], "lower": [11, 12, 23, 25, 54, 58, 60, 75, 80, 95, 97, 98, 109, 132], "retrain": [11, 60], "As": [11, 23, 24, 112, 132], "becaus": [11, 12, 68, 69, 95, 109, 110, 111, 114, 127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "commun": [11, 129], "longer": [11, 136], "thread": [11, 12, 20, 54, 55], "addit": [12, 18, 20, 23, 24, 39, 41, 42, 44, 45, 46, 47, 48, 54, 55, 95, 109, 110, 111, 113, 115, 116, 127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "basic": [12, 14, 39, 41, 42, 44, 46, 54, 55, 57, 129], "mention": [12, 148], "start": [12, 16, 21, 38, 39, 40, 54, 55, 64, 74, 86, 87, 89, 110, 113, 130, 135, 136, 140], "paragraph": 12, "give": [12, 16, 19, 21, 60, 117], "pictur": 12, "These": [12, 132], "influenc": [12, 14], "drastic": 12, "shortli": 12, "main": [12, 20, 31, 35, 39, 46, 54, 55, 110, 113, 130, 131, 148], "loop": [12, 39, 40, 46, 54, 55, 57, 58, 61, 110, 111, 130], "logic": [12, 54, 57], "while": [12, 54, 55, 57, 58], "next": [12, 14, 16, 18, 31, 32, 38, 39, 40, 54, 55, 56, 60, 61, 90, 91, 92, 93, 94, 110, 111, 113, 128, 129], "submit": [12, 95, 109, 110, 111, 112, 113], "wait": [12, 54, 55, 110, 111, 112, 113], "decoupl": 12, "occupi": 12, "until": [12, 110, 111, 112, 113], "avail": [12, 17, 39, 45, 54, 55, 110, 111, 112, 113, 139], "again": [12, 18, 39, 45, 54, 55, 60], "moreov": [12, 54, 55, 132], "like": [12, 17, 18, 39, 40, 46, 54, 55, 57, 58, 132], "remain": [12, 61, 127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "empir": [12, 23, 28, 95, 109], "epm": 12, "mostli": 12, "associ": [12, 18, 61, 117], "incorpor": [12, 39, 40, 46, 54, 55, 62, 63, 64, 65, 66, 74, 82, 84, 95, 109, 117, 132], "collect": [12, 68, 69, 70, 110, 111, 113], "highest": [12, 18, 39, 40, 43, 45, 54, 55, 58, 60, 61, 95, 109], "min_trial": [12, 60], "config_selector": [12, 38, 39, 40, 41, 42, 43, 44, 45, 46, 54, 55], "imagin": 12, "75": 12, "505": 12, "7": [12, 62, 63, 64, 65, 66, 74, 82, 84, 85, 135, 139, 143], "end": [12, 31, 32, 38, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "step": [12, 31, 35, 36, 54, 58, 64, 74, 112, 140], "request": [12, 131], "config_gener": [12, 54, 55], "over": [12, 23, 25, 27, 28, 31, 33, 54, 57, 62, 63, 64, 74, 81, 82, 84, 90, 93, 94, 95, 109, 112, 133, 134, 139, 146], "considered_st": [12, 97, 98, 100, 101, 103, 104, 105], "timeout": 12, "consid": [12, 16, 18, 20, 39, 41, 44, 46, 54, 55, 82, 84, 95, 97, 98, 109, 112, 135, 136, 140], "normalize_cost": [12, 122], "objective_bound": [12, 95, 109], "inact": [12, 39, 40, 119], "after": [12, 14, 18, 23, 24, 38, 39, 46, 54, 58, 60, 90, 93, 129, 130, 131, 135, 140], "mathemat": 12, "techniqu": [12, 31, 33], "varianc": [12, 62, 63, 64, 66, 74, 81, 82, 84, 136], "section": 12, "otherwis": [12, 54, 55, 110, 113, 115, 117], "bunch": 12, "confid": [12, 23, 25, 39, 46], "bound": [12, 23, 25, 75, 80, 95, 109, 119, 122, 140], "thompson": [12, 23], "prior": [12, 23, 28, 31, 35, 68, 69, 70, 71, 72, 73, 133, 134, 146], "literatur": 12, "calcul": [12, 16, 23, 24, 95, 109, 127, 128, 129, 132, 135, 143], "respons": [12, 39, 40, 97, 98, 100, 102, 103, 104, 105, 106], "wrapper": [12, 62, 81, 110, 111, 112, 113], "differenti": [12, 31, 33], "evolut": [12, 31, 33], "neighbour": 12, "pai": 12, "attent": 12, "challeng": [12, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 44, 54, 55, 57, 90, 91, 110, 111, 119], "experi": [12, 19, 39, 44], "ram": [12, 39, 44], "long": 12, "comput": [12, 23, 24, 25, 27, 75, 76, 80, 95, 109, 123, 135], "challengerlist": [12, 31, 32, 34], "latin": [12, 47, 51], "hypercub": [12, 47, 51], "factori": [12, 47, 50, 95, 96], "corner": [12, 47, 50], "sequenc": [12, 47, 53], "quasi": 12, "discrep": 12, "statist": [12, 61], "method": [12, 14, 18, 23, 24, 31, 32, 33, 38, 39, 40, 54, 55, 57, 58, 60, 62, 63, 68, 69, 70, 75, 76, 80, 82, 84, 110, 111, 112, 113, 115, 116, 132, 135, 136, 140], "multidimension": 12, "yield": [12, 54, 58, 60], "keep": [12, 14, 19, 20, 39, 40, 41, 42, 43, 44, 45, 46, 54, 55, 57, 58, 62, 63, 64, 65, 66, 74, 82, 84, 110, 111, 112, 113], "track": [12, 39, 40, 41, 42, 43, 44, 45, 46, 54, 55, 57, 58], "twice": [12, 139], "chanc": 12, "although": [12, 54, 55], "includ": [12, 20, 54, 55, 56, 57, 58, 61, 62, 63, 81, 132, 136, 148], "trade": [12, 23, 25, 26, 39, 40], "stuck": 12, "optimum": [12, 23, 28, 97, 98, 133, 134, 146], "guarante": [12, 21, 95, 109], "anneal": [12, 90, 92], "modulu": [12, 34, 90, 93], "far": [12, 18, 23, 25, 26, 39, 43, 45, 54, 58, 61, 96, 130], "decid": [12, 39, 40, 61, 110, 111, 148], "worth": 12, "spend": [12, 61], "pair": [12, 39, 43, 45, 54, 58, 95, 109, 140], "n_seed": [12, 39, 43, 45, 54, 55, 56, 58, 117], "lot": [12, 21, 136], "throughout": 12, "uses_se": [12, 54, 55, 57, 58], "uses_budget": [12, 54, 55, 57, 58], "uses_inst": [12, 54, 55, 57, 58], "callabl": [12, 34, 39, 40, 110, 115, 116], "saniti": 12, "fact": [12, 54, 57], "repeat": 12, "taken": [12, 31, 35, 97, 98, 123], "recogn": 12, "beforehand": [12, 132], "queue": [12, 54, 57], "That": [12, 13, 39, 44], "nativ": [12, 20, 54, 58], "everytim": [12, 17, 54, 55, 57, 116], "straight": 12, "forward": 12, "were": [12, 54, 55, 146], "go": [12, 20, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "stop": [12, 21, 38, 60, 117, 130, 131, 135, 140], "update_on_iteration_start": [12, 86, 87, 89], "normal": [12, 17, 23, 29, 64, 66, 74, 75, 79, 86, 87, 88, 89, 95, 109, 122, 132], "hold": [12, 21, 23, 27, 39, 40, 54, 57, 61, 128], "un": 12, "trial_info": [12, 110, 111, 112, 113], "trial_valu": 12, "item": [12, 96, 127, 135], "info": [12, 19, 38, 39, 40, 61, 95, 109, 110, 111, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "statu": [12, 17, 39, 40, 54, 55, 95, 96, 107, 109, 110, 111, 113, 115, 116, 135], "starttim": [12, 95, 96, 109], "endtim": [12, 95, 96, 109], "additional_info": [12, 17, 95, 96, 109, 110, 111, 113, 115, 116], "get_config": [12, 95, 109, 127, 139, 140], "average_cost": [12, 18, 95, 109, 140], "format": [12, 19, 120], "afterward": [12, 54, 57], "abil": 12, "easili": [12, 117], "inherit": [12, 68, 69], "overwrit": [12, 39, 40, 41, 42, 43, 44, 45, 46, 61, 95, 109, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "class": [12, 14, 19, 23, 31, 39, 47, 54, 62, 64, 68, 75, 82, 86, 90, 95, 97, 110, 127, 128, 129, 130, 131, 132, 135, 136, 140], "customcallback": [12, 130], "on_start": [12, 38, 130], "none": [12, 23, 24, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 121, 122, 127, 128, 129, 130, 131, 135, 136, 139, 140], "on_end": [12, 38], "on_iteration_start": [12, 38], "on_iteration_end": [12, 38], "runinfo": [12, 110, 111, 113], "runvalu": 12, "bool": [12, 23, 26, 28, 38, 39, 40, 41, 44, 54, 55, 57, 58, 61, 64, 66, 68, 69, 74, 82, 84, 90, 91, 92, 93, 94, 95, 109, 110, 111, 112, 113, 117, 130, 131], "just": [12, 14, 20, 39, 46, 130], "print": [12, 17, 54, 58, 61, 119, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "min_budget": [13, 117, 135, 136], "max_budget": [13, 117, 135, 136], "real": [13, 39, 40, 61, 110, 111, 113, 115, 116], "stage": [13, 38, 54, 58, 130, 135, 136], "reason": [13, 68, 69], "simpli": [13, 14, 39, 46, 54, 58, 143], "wherea": 13, "world": 13, "exactli": [14, 54, 57], "right": [14, 17, 23, 26, 68, 69], "histori": [14, 18, 61], "recip": 14, "obj1": 14, "obj2": 14, "dictionari": [14, 95, 109, 120], "contain": [14, 39, 40, 61, 68, 69, 95, 109, 110, 111, 112, 113, 123], "kei": [14, 17, 39, 41, 42, 43, 44, 45, 46, 54, 55, 57, 58, 95, 96, 109, 123, 143], "option": [14, 15, 17, 38, 39, 40, 54, 55, 61, 62, 63, 68, 69, 95, 109, 110, 114, 116, 122, 130, 131], "custom": [14, 21, 121, 131, 133, 134, 146], "multi_objective_algorithm": [14, 39, 40, 41, 42, 43, 44, 45, 46, 95, 97, 98, 109, 139, 140], "pareto": [14, 54, 55, 123, 139, 140], "front": [14, 54, 55, 123, 139, 140], "get_incumb": [14, 54, 55, 130, 131, 139], "plot": [14, 127, 135, 139, 140], "five": [15, 39, 42, 44, 45, 47, 48, 135, 140], "identifi": [15, 117], "id": [15, 95, 96, 109], "d0": 15, "d1": [15, 120], "d2": [15, 120], "d3": 15, "d4": 15, "instance_featur": [15, 17, 62, 63, 64, 65, 66, 74, 82, 84, 85, 116, 117, 119, 136], "those": 15, "expand": [15, 54, 55, 58, 117], "x": [15, 23, 24, 25, 26, 29, 30, 62, 63, 64, 65, 66, 68, 69, 74, 75, 77, 81, 82, 84, 97, 98, 119, 127, 129, 131, 135, 139, 140], "matrix": [15, 62, 63], "plai": 15, "role": 15, "121": 15, "6": [15, 39, 41, 44, 82, 84, 119, 127, 135, 139], "140": 15, "65": 15, "99": 15, "45": [15, 136], "102": 15, "59": 15, "132": 15, "48": [15, 132, 135], "opportun": 16, "regist": [16, 135], "count": [16, 117], "min": [16, 122, 135, 136, 140], "intermedi": 16, "obvious": 16, "flow": 16, "further": [17, 23, 27, 28, 47, 51, 53, 90, 93, 110, 111, 113, 114, 115, 116, 117], "script": [17, 39, 40, 116, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 144, 145, 146], "popen": [17, 116], "standard": [17, 18, 23, 29, 62, 63, 75, 79, 132], "interpret": [17, 39, 40], "filenam": [17, 19, 54, 55, 61, 95, 109, 143], "hyperparameter1": [17, 116], "5323": [17, 116], "sh": [17, 143], "bash": [17, 143], "anyth": [17, 68, 69], "els": [17, 19, 128, 135, 140], "wih": 17, "mark": [17, 54, 55], "type": [17, 23, 24, 25, 26, 27, 31, 32, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 75, 76, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 127, 128, 132, 135, 136, 139], "bin": [17, 23, 28, 143], "usr": 17, "env": 17, "comma": [17, 116], "separ": [17, 39, 40, 116], "empti": [17, 54, 57, 60, 95, 109, 110, 111, 112, 113, 116], "echo": [17, 116, 143], "cut": [17, 54, 55, 143], "f1": [17, 139, 143], "d": [17, 19, 23, 25, 143], "f2": [17, 139, 143], "v": [17, 95, 109, 110, 113, 127, 136, 143], "declar": [17, 68, 69, 143], "fi": [17, 143], "done": [17, 39, 40, 54, 57, 110, 111, 112, 113, 143], "stdout": [17, 19], "white": [17, 39, 42, 68, 73, 116], "ignor": [17, 18, 39, 40, 54, 57, 60, 61, 68, 69, 127, 132, 135, 136, 140], "01": [17, 116, 134, 142], "except": [17, 39, 40, 110, 112, 113, 132], "semicolon": 17, "string": [17, 39, 40, 116, 120], "match": 17, "statustyp": [17, 95, 96, 97, 98, 100, 101, 103, 104, 105, 107, 109, 110, 111, 113, 115, 116], "chmod": 17, "advanc": 18, "reach": [18, 60, 90, 93], "averag": [18, 39, 40, 41, 42, 44, 46, 61, 86, 88, 95, 109, 135, 140], "below": 18, "termination_cost_threshold": [18, 117], "inf": [18, 90, 93, 117, 127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "abov": 18, "infin": 18, "come": [18, 110, 113], "part": [19, 31, 32, 54, 55], "customiz": 19, "overview": 19, "easiest": 19, "behaviour": [19, 39, 40, 54, 55, 57, 58, 61], "logger": [19, 119, 121], "logging_level": [19, 39, 40, 41, 42, 43, 44, 45, 46, 130], "debug": [19, 39, 40], "30": [19, 130, 135, 136, 140, 143], "warn": [19, 95, 109, 132, 135, 136, 140], "40": [19, 130, 132, 136], "critic": 19, "sometim": 19, "highlight": [19, 140], "yaml": [19, 39, 40], "displai": 19, "messag": 19, "everyth": [19, 143], "disable_existing_logg": 19, "formatt": 19, "levelnam": 19, "lineno": 19, "handler": 19, "consol": 19, "streamhandl": 19, "stream": [19, 135], "ext": 19, "sy": 19, "readi": 20, "mind": 20, "orchestr": 20, "fast": 20, "counterproduct": 20, "due": [20, 31, 33, 136], "overhead": [20, 31, 36], "communc": 20, "anymor": 20, "librari": 21, "strongli": 21, "hint": 21, "react": 21, "certain": 21, "thing": 21, "selector": [21, 39, 40, 54, 55, 60], "callback": [21, 34, 39, 40, 41, 42, 43, 44, 45, 46, 54, 55, 131, 133, 134, 146], "criteria": 21, "termin": [21, 31, 35, 36, 110, 113], "threshold": [21, 117], "level": [21, 39, 40, 120, 121], "abstractacquisitionfunct": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 46], "sourc": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143, 146], "abstract": [23, 24, 31, 32, 39, 40, 54, 55, 62, 63, 64, 65, 76, 82, 83, 86, 87, 90, 91, 97, 98, 110, 111, 113], "__call__": [23, 24, 68, 69, 86, 87, 88, 89, 110, 115, 116], "ndarrai": [23, 24, 62, 63, 64, 66, 68, 69, 76, 81, 82, 84, 97, 98, 100, 101, 102, 103, 104, 105, 106, 119, 136], "properti": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 47, 48, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 109, 110, 111, 115, 116, 117, 127, 128, 129, 130, 131, 132, 135, 136, 140], "meta": [23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 39, 40, 47, 48, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 74, 75, 76, 77, 78, 79, 80, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 110, 111, 115, 116, 117, 127, 131, 143], "dict": [23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 39, 40, 47, 48, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 68, 69, 70, 74, 75, 76, 77, 78, 79, 80, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 109, 110, 111, 113, 115, 116, 117, 120, 136, 139, 140], "str": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 42, 43, 45, 47, 48, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 109, 110, 111, 113, 115, 116, 117, 119, 120, 136, 139, 140], "abstractmodel": [23, 24, 28, 39, 40, 62, 63, 64, 65, 81, 82, 83, 85], "full": [23, 24, 25, 26, 27, 28, 29, 30, 62, 63, 95, 109, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "attribut": [23, 24], "ei": [23, 24, 26, 39, 41, 42, 44], "fmin": [23, 24], "acqusit": [23, 24], "present": [23, 24], "_updat": [23, 24], "xi": [23, 26, 29, 30, 39, 41, 42, 44, 127], "mathbb": [23, 26], "f": [23, 26, 29, 64, 66, 74, 75, 76, 77, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143, 148], "mathbf": [23, 25, 26, 29, 30], "f_": [23, 26, 29], "control": [23, 25, 26, 29, 39, 41, 42, 43, 44, 45, 54, 55, 58], "balanc": [23, 25, 26, 29, 39, 41, 42, 44], "between": [23, 25, 26, 29, 39, 41, 42, 44, 62, 63, 82, 84, 97, 102, 104, 105, 106], "_xi": [23, 26], "exloit": [23, 26], "_log": [23, 26], "_eta": [23, 26, 27], "eip": [23, 26, 97, 100], "per": [23, 26, 39, 42, 44, 45, 47, 48, 82, 84, 95, 97, 100, 109, 129, 132], "second": [23, 26, 34, 97, 100, 110, 113, 115, 117, 120, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "frac": [23, 26, 29], "r": [23, 26, 31, 33, 140], "integratedacquisitionfunct": [23, 27], "acquisition_funct": [23, 25, 27, 28, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 61, 132], "margin": [23, 27, 62, 63, 64, 66, 81, 82, 84], "practic": [23, 27, 146], "jasper": [23, 27], "snoek": [23, 27, 64, 74], "nip": [23, 27, 64, 66, 74, 76], "cc": [23, 27], "4522": [23, 27], "_acquisition_funct": [23, 27], "_function": [23, 27], "lcb": [23, 25], "beta": [23, 25, 132], "mu": [23, 25, 29, 30, 132], "sqrt": [23, 25, 139], "beta_t": [23, 25], "sigma": [23, 25, 29, 30, 75, 79, 132], "text": [23, 25], "dimens": [23, 25, 62, 63, 128, 129], "tradeoff": [23, 25], "_beta": [23, 25], "_num_data": [23, 25], "seen": [23, 25], "pi": [23, 29], "p": [23, 29, 75, 77], "geq": [23, 29], "phi": [23, 29], "cdf": [23, 29], "prioracquisitionfunct": [23, 28, 132], "decay_beta": [23, 28, 132], "prior_floor": [23, 28], "1e": [23, 28, 68, 69, 70, 71, 72, 73, 82, 84, 132], "12": [23, 28], "discret": [23, 28, 132], "discrete_bins_factor": [23, 28], "pibo": [23, 28], "decai": [23, 28], "factor": [23, 28, 90, 94], "solid": [23, 28, 132], "lowest": [23, 28, 39, 40, 54, 55, 57, 95, 109], "neg": [23, 28], "densiti": [23, 28], "contin": [23, 28], "trigger": [23, 28, 110, 114, 130], "avoid": [23, 28], "patholog": [23, 28], "piecewis": [23, 28], "constant": [23, 28, 31, 35, 90, 93, 135, 136, 140], "allow": [23, 28, 54, 55, 117], "togeth": [23, 30, 39, 46, 54, 58], "randomsearch": [23, 30, 31, 37, 39, 46], "localandsortedrandomsearch": [23, 30, 31, 35, 39, 41, 42, 44], "math": [23, 30, 76], "mathcal": [23, 30], "consist": [23, 30, 31, 32, 132, 135, 136, 140, 148], "abstractacquisitionmaxim": [31, 32, 33, 35, 36, 37, 39, 40], "5000": [31, 32, 33, 35, 36, 37, 136], "order": [31, 32, 39, 43, 45, 54, 58, 97, 98], "subclass": [31, 32, 39, 40, 68, 69], "_maxim": [31, 32], "becom": [31, 32], "candid": [31, 32, 33, 37], "previous_config": [31, 32], "n_point": [31, 32], "random_design": [31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 46], "_challeng": [31, 32], "abstractrandomdesign": [31, 32, 34, 39, 40, 46, 90, 91, 92, 93, 94], "interleav": [31, 32, 34, 35, 39, 40, 41, 42, 44, 90, 91, 92, 93, 94], "scheme": [31, 32, 110, 111], "next_iter": [31, 32, 90, 91, 92, 93, 94], "differentialevolut": [31, 33], "differentialevolutionsolv": [31, 33], "scipi": [31, 33, 47, 51, 53], "accord": [31, 33, 35, 90, 92, 94], "multivari": [31, 33], "stochast": [31, 33, 137, 138, 146], "natur": [31, 33], "gradient": [31, 33, 68, 69, 75, 76, 80, 137, 138, 146], "larg": [31, 33, 127], "area": [31, 33], "larger": [31, 33], "convent": [31, 33], "storn": [31, 33], "price": [31, 33], "heurist": [31, 33], "journal": [31, 33], "1997": [31, 33], "11": [31, 33, 139], "341": [31, 33], "359": [31, 33], "localandsortedpriorrandomsearch": [31, 35], "uniform_configspac": [31, 35], "max_step": [31, 35, 36], "n_steps_plateau_walk": [31, 35, 36], "local_search_iter": [31, 35, 39, 42, 44], "prior_sampling_fract": [31, 35], "randomli": [31, 35, 39, 40, 46], "retriev": [31, 35, 54, 55, 136], "normalfloathp": [31, 35], "localsearch": [31, 35, 36], "maximum": [31, 35, 36, 39, 41, 42, 44, 46, 54, 55, 57, 82, 84, 90, 92, 93, 117], "plateau": [31, 35, 36], "walk": [31, 35, 36], "ratio": [31, 35, 39, 41, 44, 82, 84], "oppos": [31, 35], "circumv": [31, 35], "begin": [31, 35, 90, 91, 93], "defaut": [31, 35], "vectorization_min_obtain": [31, 36], "vectorization_max_obtain": [31, 36], "neighbor": [31, 36], "obtain": [31, 36, 54, 55, 64, 66, 76], "reduc": [31, 34, 36, 39, 41, 44, 62, 63, 64, 65, 66, 74, 82, 84, 110, 113, 135, 143], "challenger_callback": 34, "modulus_design": 34, "modulusrandomdesign": [34, 90, 93], "necessari": 34, "hundr": 34, "closur": 34, "www": [34, 86, 89], "programiz": 34, "on_ask_end": 38, "on_ask_start": 38, "on_next_configurations_end": 38, "essenti": 38, "on_next_configurations_start": 38, "on_tell_end": [38, 130, 131], "stat": [38, 47, 51, 53, 61, 131], "gracefulli": [38, 131], "on_tell_start": 38, "abstractfacad": [39, 40, 41, 42, 44, 46, 135, 139, 140], "acquisition_maxim": [39, 40, 41, 42, 43, 44, 45, 46], "initial_design": [39, 40, 41, 42, 43, 44, 45, 46, 128, 132, 135, 140], "runhistory_encod": [39, 40, 41, 42, 43, 44, 45, 46], "top": [39, 40], "backend": [39, 40], "organ": [39, 40], "manner": [39, 40, 41, 42, 44, 46], "suit": [39, 40], "With": [39, 40], "explicitli": [39, 40, 110, 113], "get_": [39, 40], "environment": [39, 40, 61], "abstractrunn": [39, 40, 61, 110, 111, 112, 113], "targetfunctionscriptrunn": [39, 40, 116], "most": [39, 40, 42, 44, 45, 47, 48, 95, 109, 132, 135], "promis": [39, 40, 46], "initialdesign": [39, 40], "randomdesign": [39, 40], "drawn": [39, 40, 41, 42, 44, 64, 66, 76, 90, 94], "abstractintensifi": [39, 40, 54, 55, 57, 58, 61], "abstractmultiobjectivealgorithm": [39, 40, 86, 87, 88, 89, 95, 97, 98, 109], "runhistoryencod": [39, 40, 41, 42, 46, 97, 101, 102, 103, 104, 105, 106], "indic": [39, 40, 90, 91, 93, 110, 114, 136, 140], "noth": [39, 40], "yml": [39, 40], "inconsist": [39, 40, 61, 127, 131, 143], "exact": [39, 40, 61], "trialinfo": [39, 40, 54, 55, 57, 58, 61, 95, 96, 109, 110, 111, 112, 113, 130, 131], "static": [39, 40, 41, 42, 43, 44, 45, 46, 117], "get_acquisition_funct": [39, 40, 41, 42, 44, 46, 132], "get_acquisition_maxim": [39, 40, 41, 42, 44, 46], "get_config_selector": [39, 40], "retri": [39, 40, 54, 57, 60], "get_initial_design": [39, 40, 41, 42, 44, 45, 46, 128, 132, 135, 140], "warm": [39, 40], "abstractinitialdesign": [39, 40, 47, 48, 49, 50, 51, 52, 53], "get_intensifi": [39, 40, 41, 42, 43, 44, 45, 46, 129, 132, 140], "get_model": [39, 40, 41, 42, 44, 46], "get_multi_objective_algorithm": [39, 40, 41, 42, 44, 46, 139], "get_random_design": [39, 40, 41, 42, 44, 46], "get_runhistory_encod": [39, 40, 41, 42, 44, 46], "prepar": [39, 40, 97, 98], "abstractrunhistoryencod": [39, 40, 97, 98, 100, 101], "hash": [39, 40, 117, 119], "fill": [39, 40, 54, 55, 58, 61, 112], "describ": [39, 40, 61], "trialvalu": [39, 40, 61, 95, 96, 109, 110, 111, 112, 113, 129, 130, 131], "relev": [39, 40, 61], "regard": [39, 40, 61], "ones": [39, 40, 61, 123, 140], "additional_config": [39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 132], "defaultinitialdesign": [39, 41, 46, 47, 49], "2000": [39, 41], "max_incumb": [39, 41, 42, 43, 44, 45, 46, 54, 55, 56, 57, 58], "n_tree": [39, 41, 44, 82, 84], "ratio_featur": [39, 41, 44, 82, 84], "8333333333333334": [39, 41, 82, 84], "min_samples_split": [39, 41, 44, 82, 84], "min_samples_leaf": [39, 41, 44, 82, 84], "max_depth": [39, 41, 44, 82, 84], "bootstrap": [39, 41, 44, 82, 84], "pca_compon": [39, 41, 62, 63, 64, 65, 66, 74, 82, 84, 85], "tree": [39, 41, 44, 82, 84], "split": [39, 41, 44, 82, 84, 132, 135, 136, 140], "leaf": [39, 41, 44, 82, 84], "depth": [39, 41, 44, 82, 84], "pca": [39, 41, 62, 63, 64, 65, 66, 74, 82, 84], "randomforest": [39, 41, 44, 82, 84], "objective_weight": [39, 41, 42, 44, 46, 86, 88, 139], "length": [39, 41, 42, 44, 46, 64, 68, 70, 74, 86, 88], "meanaggregationstrategi": [39, 41, 42, 44, 46, 86, 88], "probabilityrandomdesign": [39, 41, 42, 44, 90, 94], "n_config": [39, 42, 44, 45, 47, 48, 49, 50, 51, 52, 128, 135, 140], "n_configs_per_hyperparamt": [39, 42, 44, 45], "max_ratio": [39, 42, 44, 45, 47, 48, 49, 50, 51, 52, 143], "25": [39, 42, 44, 45, 47, 48, 49, 50, 51, 52, 127, 131, 135, 143], "n_configs_per_hyperparamet": [39, 42, 44, 45, 47, 48, 49, 50, 51, 52, 135], "my": [39, 42, 44, 45, 47, 48], "cover": [39, 42, 44, 45, 47, 48], "sobolinitialdesign": [39, 42, 44, 47, 53], "race_against": [39, 42, 44], "get_kernel": [39, 42], "kernel": [39, 42, 64, 65, 66, 74, 128], "composit": [39, 42], "hammingkernel": [39, 42, 68, 70], "matern": [39, 42, 68, 71], "nois": [39, 42], "model_typ": [39, 42], "chosen": [39, 42, 135, 146], "choos": [39, 42, 64, 74, 135], "vanilla": [39, 42], "gaussianprocess": [39, 42, 64, 66, 74], "mcmcgaussianprocess": [39, 42, 64, 74], "08447232371720552": [39, 42], "aggress": [39, 43, 46, 135, 148], "eta": [39, 43, 45, 54, 56, 58, 135, 136], "instance_seed_ord": [39, 43, 45, 54, 56, 58], "shuffle_onc": [39, 43, 45, 54, 56, 58], "incumbent_select": [39, 43, 45, 54, 56, 58, 135], "highest_observed_budget": [39, 43, 45, 54, 56, 58], "proport": [39, 43, 45, 54, 58], "round": [39, 43, 45, 54, 58], "shuffl": [39, 43, 45, 54, 55, 57, 58, 132, 135, 136, 140], "bracket": [39, 43, 45, 54, 56, 58, 135, 136], "individu": [39, 43, 45, 54, 58, 95, 109], "any_budget": [39, 43, 45, 54, 58], "regardless": [39, 43, 45, 54, 58], "highest_budget": [39, 43, 45, 54, 58, 135], "10000": [39, 44, 127], "1048576": [39, 44, 82, 84], "scale": [39, 44, 68, 70, 75, 76, 77, 78, 80, 97, 98, 102, 104, 105, 106, 128], "runhistorylogscaledencod": [39, 44, 97, 104], "randominitialdesign": [39, 45, 47, 52], "get_trial": [39, 45, 95, 109], "notic": [39, 45, 139], "queu": [39, 45], "absolut": [39, 45], "\u03b8": [39, 46], "unpromis": [39, 46], "reject": [39, 46, 54, 55, 57, 127, 128, 129, 131, 132, 135, 136, 140, 143], "veri": [39, 46, 54, 55], "replac": [39, 46, 54, 55, 110, 115, 135], "dummi": [39, 46], "neither": [39, 46, 95, 109], "nor": [39, 46, 95, 109], "increas": [39, 46, 90, 93], "randommodel": [39, 46, 62, 85], "select_configur": [47, 48], "_select_configur": [47, 48], "factorialinitialdesign": [47, 50], "middl": [47, 50], "latinhypercubeinitialdesign": [47, 51], "doc": [47, 51], "qmc": [47, 51, 53], "latinhypercub": [47, 51], "arg": [47, 53, 82, 83, 97, 102, 106], "scrambl": [47, 53], "io": [47, 53], "devdoc": [47, 53], "event": [54, 55, 57, 58], "__iter__": [54, 55, 57, 60, 95, 109], "__post_init__": [54, 55, 58, 117], "_tf_seed": [54, 55], "_tf_instanc": [54, 55], "get_callback": [54, 55], "develop": [54, 55, 148], "futur": [54, 55, 110, 113], "get_incumbent_instance_seed_budget_key_differ": [54, 55], "There": [54, 55], "situat": [54, 55], "intersect": [54, 55], "instanceseedbudgetkei": [54, 55, 58, 95, 96, 109, 123], "get_incumbent_instance_seed_budget_kei": [54, 55], "sort_bi": [54, 55, 95, 109], "num_trial": [54, 55, 95, 109], "get_instance_seed_budget_kei": [54, 55, 58, 95, 96, 109], "get_instance_seed_keys_of_interest": [54, 55, 58], "instance_seed_kei": [54, 55], "interest": [54, 55, 58], "instanceseedkei": [54, 55, 95, 96], "get_rejected_config": [54, 55], "fail": [54, 55, 110, 113, 114, 117], "get_stat": [54, 55, 56, 57, 58], "get_trials_of_interest": [54, 55, 58], "incumbents_chang": [54, 55], "load": [54, 55, 61, 95, 109, 117, 128], "trajectori": [54, 55, 96, 135], "reset": [54, 55, 56, 57, 58, 61, 95, 109], "set_stat": [54, 55, 56, 57, 58], "dataclass": [54, 55, 129], "trajectoryitem": [54, 55, 96], "update_incumb": [54, 55, 58], "requeu": [54, 55], "b": [54, 55], "inferior": [54, 55], "notabl": [54, 55], "calculate_pareto_front": [54, 55, 123], "hard": [54, 55], "special": [54, 55], "mo": [54, 55], "amend": [54, 55], "suffici": [54, 55], "overlap": [54, 55], "lastli": [54, 55], "_max_incumb": [54, 55], "amount": [54, 55, 57, 90, 93, 110, 113], "crowd": [54, 55, 123, 139], "distanc": [54, 55, 97, 98, 123, 139], "used_walltim": [54, 55, 61], "forev": [54, 57], "exist": [54, 57, 61, 95, 109, 128, 131], "succes": [54, 58], "group": [54, 58], "out": [54, 58, 64, 74], "batch": [54, 58, 120, 132, 135], "post": [54, 58, 140], "queri": [54, 58, 95, 109], "rid": [54, 58], "print_track": [54, 58], "handl": [60, 95, 109, 110, 111, 113, 115, 116], "three": 60, "etc": [60, 68, 69, 117], "intiti": 60, "next_config": 60, "store": [61, 95, 109, 135], "budget_exhaust": 61, "walltim": [61, 96, 135], "cputim": 61, "exceed": 61, "folder": 61, "print_stat": 61, "remaining_cputim": 61, "subtract": 61, "remaining_tri": 61, "ta": 61, "remaining_walltim": 61, "update_acquisition_funct": 61, "update_model": 61, "used_target_function_walltim": 61, "much": [61, 95, 96, 109, 110, 113, 135, 139], "y": [62, 63, 68, 69, 82, 84, 97, 98, 119, 127, 131, 135], "concret": [62, 63], "covariance_typ": [62, 63], "diagon": [62, 63], "_predict": [62, 63], "std": [62, 63], "deviat": [62, 63, 75, 79, 132], "covari": [62, 63], "whole": [62, 63], "tupl": [62, 63, 68, 69, 81, 82, 84, 95, 97, 98, 109, 110, 111, 112, 113, 115, 116, 119, 122, 136, 139], "var": [62, 63, 81, 82, 84, 117, 136], "predict_margin": [62, 63, 81, 82, 84], "_train": [62, 63], "correspond": [62, 63, 75, 77, 122], "multiobjectivemodel": [62, 81], "abstract_model": [62, 81], "abstractgaussianprocess": [64, 65, 66, 74], "n_restart": [64, 66], "normalize_i": [64, 66, 74], "likelihood": [64, 66], "robo": [64, 66, 74, 76], "klein": [64, 66, 74, 76], "falkner": [64, 66, 74, 76], "mansur": [64, 66, 74, 76], "2017": [64, 66, 74, 76], "workshop": [64, 66, 74, 76], "restart": [64, 66, 90, 92], "zero": [64, 66, 74, 97, 102, 104, 105, 106, 129], "unit": [64, 66, 74, 132], "sample_funct": [64, 66], "x_test": [64, 66], "n_func": [64, 66], "posterior": [64, 66], "function_sampl": [64, 66], "n_mcmc_walker": [64, 74], "chain_length": [64, 74], "burning_step": [64, 74], "mcmc_sampler": [64, 74], "emce": [64, 74], "average_sampl": [64, 74], "markow": [64, 74], "propos": [64, 74], "walker": [64, 74], "last": [64, 74, 128, 131], "burn": [64, 74], "actual": [64, 74, 110, 111], "sampler": [64, 74], "nut": [64, 74], "abstractkernel": [68, 69, 70, 71, 72, 73], "operate_on": [68, 69, 70, 71, 72, 73], "has_condit": [68, 69, 70, 71, 72, 73], "mixin": [68, 69], "overrid": [68, 69, 127, 131, 143], "place": [68, 69, 132], "hierarchi": [68, 69], "prevent": [68, 69], "instantiat": [68, 69], "mypi": [68, 69], "won": [68, 69], "relat": [68, 69], "superclass": [68, 69], "statement": [68, 69], "access": [68, 69], "member": [68, 69], "_call": [68, 69], "super": [68, 69], "get_param": [68, 69, 70], "On": [68, 69, 110, 111, 112, 113, 137, 138, 146], "arrai": [68, 69, 140], "oper": [68, 69], "abstractprior": [68, 69, 75, 76, 77, 78, 79, 80], "primarili": [68, 69], "eval_gradi": [68, 69], "estim": [68, 69, 82, 84, 97, 98], "subobject": [68, 69], "param": [68, 69], "map": [68, 69, 95, 109], "n_dim": [68, 69], "fix": [68, 69], "constantkernel": [68, 69], "constant_valu": [68, 69], "constant_value_bound": [68, 69], "05": [68, 69, 70, 71, 72, 73, 86, 89, 127, 139], "100000": [68, 69, 70, 71, 72, 73], "shape": [68, 69, 75, 77], "n_samples_x": [68, 69], "n_featur": [68, 69], "n_samples_i": [68, 69], "respect": [68, 69, 75, 76, 80], "boolean": [68, 69], "k_gradient": [68, 69], "opt": [68, 69, 135], "length_scal": [68, 70, 71, 72], "length_scale_bound": [68, 70, 71, 72], "stationarykernelmixin": [68, 70], "normalizedkernelmixin": [68, 70], "ham": [68, 70], "hyperparameter_length_scal": [68, 70], "maternkernel": [68, 71], "nu": [68, 71], "productkernel": [68, 69], "k1": [68, 69], "k2": [68, 69], "product": [68, 69], "rbfkernel": [68, 72], "rbf": [68, 72, 128], "sumkernel": [68, 69], "sum": [68, 69, 95, 109], "whitekernel": [68, 73], "noise_level": [68, 73], "noise_level_bound": [68, 73], "gammaprior": [75, 77], "loc": [75, 77], "gamma": [75, 77, 128], "greater": [75, 77, 117], "canon": [75, 77], "greather": [75, 77, 117], "horseshoeprior": [75, 78], "horsesho": [75, 78], "spearmint": [75, 78, 80], "lognormalprior": [75, 79], "softtophatprior": [75, 80], "lower_bound": [75, 80], "upper_bound": [75, 80], "expon": [75, 80], "soft": [75, 80], "tophat": [75, 80], "upper": [75, 80, 95, 109, 132], "get_gradi": [75, 76, 80], "theta": [75, 76, 80], "hi": [75, 76, 80], "_get_gradi": [75, 76, 80], "get_log_prob": [75, 76, 80], "exponenti": [75, 76, 80], "_get_log_prob": [75, 76, 80], "tophatprior": [75, 80], "whenev": 76, "lnprob": 76, "rather": 76, "sample_from_prior": 76, "n_sampl": 76, "_sample_from_prior": 76, "abstractrandomforest": [82, 83, 84], "n_points_per_tre": [82, 84], "eps_pur": [82, 84], "08": [82, 84, 145], "max_nod": [82, 84], "log_i": [82, 84], "account": [82, 84, 97, 98, 135], "total": [82, 84, 110, 113, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 142, 143, 145], "node": [82, 84, 110, 113, 135], "assumpt": [82, 84], "uncertainti": [82, 84], "abc": [86, 87, 110, 111], "loss": [86, 87, 88, 89, 110, 115, 136], "rho": [86, 89], "bham": [86, 89], "ac": [86, 89], "uk": [86, 89], "jdk": [86, 89], "ukci": [86, 89], "2015": [86, 89], "small": [86, 89], "posit": [86, 89, 110, 111, 113, 115, 116], "helper": [90, 91], "th": [90, 91, 92, 93, 94], "cosineannealingrandomdesign": [90, 92], "min_prob": [90, 92], "max_prob": [90, 92], "restart_iter": [90, 92], "decreas": [90, 92, 93, 94], "cosin": [90, 92], "schedul": [90, 92, 135], "move": [90, 92, 95, 109], "_probabl": [90, 92], "dynamicmodulusrandomdesign": [90, 93], "start_modulu": [90, 93], "modulus_incr": [90, 93], "end_modulu": [90, 93], "fraction": [90, 93], "ever": [90, 93], "adjust": [90, 93], "dynamicprobabilityrandomdesign": [90, 94], "multipli": [90, 94], "get_instance_seed_kei": [95, 96], "omit": [95, 96], "overwrite_existing_tri": [95, 109], "trialkei": [95, 96, 109], "importantli": [95, 109], "theoret": [95, 109], "picklabl": [95, 109], "__contains__": [95, 109], "semant": [95, 109], "__eq__": [95, 109], "equal": [95, 109], "__getitem__": [95, 109], "__len__": [95, 109], "len": [95, 109, 135], "force_upd": [95, 109], "add_running_tri": [95, 109], "add_trial": [95, 109], "instance_seed_budget_kei": [95, 109], "wrt": [95, 109], "config_id": [95, 96, 109, 127, 135], "configuration_spac": [95, 109], "get_config_id": [95, 109], "get_configs_per_budget": [95, 109], "budget_subset": [95, 97, 98, 109], "get_cost": [95, 109, 130], "docstr": [95, 109], "re": [95, 109], "cach": [95, 109], "highest_observed_budget_onli": [95, 109], "get_min_cost": [95, 109], "min_cost": [95, 109], "get_running_config": [95, 109], "get_running_tri": [95, 109], "ids_config": [95, 109], "incremental_update_cost": [95, 109], "increment": [95, 109], "disk": [95, 109], "scaral": [95, 109], "json": [95, 109], "sum_cost": [95, 109], "update_cost": [95, 109], "_cost_per_config": [95, 109], "_num_trials_per_config": [95, 109], "scratch": [95, 109], "accordingli": [95, 109, 132], "update_from_json": [95, 109], "intenum": [95, 107], "memoryout": [97, 98, 100, 101, 103, 104, 105], "lower_budget_st": [97, 98, 100, 101, 103, 104, 105], "scale_percentag": [97, 98, 100, 101, 103, 104, 105], "noqa": [97, 98], "e501": [97, 98], "percentil": [97, 98], "sub": [97, 98], "typeerror": [97, 98], "get_configur": [97, 98], "represent": [97, 98], "append": [97, 98, 135], "configs_arrai": [97, 98], "transform_response_valu": [97, 98, 100, 101, 102, 103, 104, 105, 106], "transformed_valu": [97, 98], "runhistoryeipsencod": [97, 100], "runhistoryinversescaledencod": [97, 102], "linearli": [97, 102, 104, 105, 106], "invers": [97, 102], "runhistorylogencod": [97, 103], "runhistoryscaledencod": [97, 105], "runhistorysqrtscaledencod": [97, 106], "squar": [97, 106, 139], "notevaluatederror": 108, "runtimeerror": 108, "required_argu": [110, 111, 112, 115, 116], "perspect": [110, 111], "launch": [110, 111, 112, 113], "submit_run": [110, 111, 113], "run_wrapp": [110, 111, 113], "among": [110, 111], "realli": [110, 111], "translat": [110, 111], "iter_result": [110, 111, 112, 113], "consum": [110, 111], "decis": [110, 111, 112, 113], "abl": [110, 111, 128], "count_available_work": [110, 111, 112, 113], "is_run": [110, 111, 112, 113], "serial": [110, 111, 112, 113], "instantli": [110, 111, 112, 113], "pend": [110, 111, 112, 113], "popul": [110, 111, 112, 113], "_results_queu": [110, 111, 112, 113], "get_finish": [110, 111, 112, 113], "produc": [110, 111, 112, 113], "aka": [110, 111, 113], "repres": [110, 111, 113, 115, 116, 121, 136, 148], "took": [110, 111, 113, 115, 116], "around": [110, 111], "encapsul": [110, 111], "simplifi": [110, 111], "isol": [110, 111], "submit_tri": [110, 111, 112, 113], "embed": [110, 111, 113], "eventu": [110, 111], "fifo": [110, 111], "dictat": [110, 111, 113], "submiss": [110, 111], "endeavor": [110, 111], "daskparallelrunn": [110, 113], "single_work": [110, 113], "patienc": [110, 113], "dask_client": [110, 113], "job": [110, 113], "fashion": [110, 112, 113], "intend": [110, 113], "compli": [110, 113], "bridg": [110, 113], "pattern": [110, 113], "wrap": [110, 113], "baserunn": [110, 113], "dask": [110, 113, 117], "precis": [110, 113], "task": [110, 112, 113, 117, 132], "pickl": [110, 113], "manag": [110, 113, 117], "client": [110, 113, 135], "Will": [110, 113], "cluster": [110, 113, 135], "attach": [110, 113], "close": [110, 113], "manual": [110, 113, 132], "upon": [110, 113], "__del__": [110, 113], "forc": [110, 113], "dynam": [110, 113], "resourc": [110, 113, 115], "alloc": [110, 113, 135], "procedur": [110, 113], "firstruncrashedexcept": [110, 114], "targetalgorithmabortexcept": [110, 114], "abort": [110, 114, 131], "suggest": [110, 114], "targetfunctionrunn": [110, 115], "abstractserialrunn": [110, 112, 115, 116], "element": [110, 115], "algorithm_kwarg": [110, 115, 116], "wall": [110, 115], "properli": 112, "immedi": 112, "subprocess": 116, "posixpath": 117, "smac3_output": 117, "crash_cost": 117, "cputime_limit": 117, "trial_walltime_limit": 117, "trial_memory_limit": 117, "frame": 117, "constraint": [117, 136], "spawn": 117, "mb": [117, 134, 138, 142, 145], "count_instance_featur": 117, "count_object": 117, "make_serializ": 117, "serializ": 117, "convert_configurations_to_arrai": 119, "imput": 119, "get_conditional_hyperparamet": 119, "get_config_hash": 119, "char": 119, "get_typ": 119, "rtype": 119, "print_config_chang": 119, "chunk": 120, "recursively_compare_dict": 120, "diff": 120, "recurs": 120, "get_logg": 121, "logger_nam": 121, "setup_log": 121, "normalized_cost": 122, "config_instance_seed_budget_kei": 123, "basi": 123, "sort_by_crowding_dist": 123, "anyoptim": 123, "pymoo": 123, "blob": 123, "20abef1ade71915352217400c11ece4c2f35163": 123, "nsga2": 123, "py": [123, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 142, 143, 145], "sorted_list": 123, "download": [127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143, 146], "numer": 127, "abstract_initial_design": [127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "134": [127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "abstract_intensifi": [127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "306": [127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "513": [127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "3ce33d": [127, 131], "588": [127, 128, 129, 131, 132, 135, 136, 140, 143], "c53710": [127, 131], "175": [127, 128, 129, 131, 132, 135, 136, 140, 143], "331214789301157": [127, 131], "1608731895685196": [127, 131], "50b580": [127, 131], "4316552169620991": [127, 131], "d16e41": [127, 131], "3100988641381264": [127, 131], "4dcc97": [127, 131], "22015188896172422": [127, 131], "4d21be": [127, 131], "1481212818284119": [127, 131], "348898": [127, 131], "13225703373856135": [127, 131], "c56201": [127, 131], "008886632260822758": [127, 131], "b6eee0": [127, 131], "00353744136744627": [127, 131], "06e28a": [127, 131], "0029625967410442655": [127, 131], "4026d1": [127, 131], "0009114180407276962": [127, 131], "025ea5": [127, 131], "00032238773647641494": [127, 131], "298": [127, 128, 129, 131, 135, 136, 139], "342683": 127, "0002551446012351022": 127, "860384": 127, "682757473086554e": 127, "exhaust": [127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "307": [127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "308": [127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "309": [127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "465924744409418e": 127, "09": 127, "matplotlib": [127, 135, 139, 140], "pyplot": [127, 135, 139, 140], "plt": [127, 135, 139, 140], "__copyright__": [127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "copyright": [127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "freiburg": [127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "hannov": [127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "__license__": [127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "quadraticfunct": [127, 131], "add_hyperparamet": [127, 128, 129, 130, 131, 132, 135, 136, 140], "figur": [127, 135, 139], "ground": 127, "truth": 127, "linspac": 127, "scatter": [127, 135, 139, 140], "blue": [127, 139], "alpha": [127, 132, 136, 139], "zorder": [127, 139], "9999": 127, "marker": [127, 135, 139, 140], "o": [127, 139], "red": [127, 139, 140], "__name__": [127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "__main__": [127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "default_cost": [127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "get_default_configur": [127, 128, 129, 131, 132, 135, 136, 139, 140, 143], "incumbent_cost": [127, 128, 129, 131, 132, 135, 136, 143], "too": 127, "074": [127, 134], "1_quadratic_funct": [127, 134], "jupyt": [127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143, 146], "notebook": [127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143, 146], "ipynb": [127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 143], "mix": 128, "eb23b4": 128, "60c7ff": 128, "03992740880515713": 128, "2760639488343621": 128, "linear": 128, "shrink": 128, "03333333333333344": 128, "013333333333333308": 128, "incondit": [128, 135, 140], "wide": [128, 132], "benchmark": 128, "poli": 128, "sigmoid": 128, "001": [128, 135, 140], "degre": 128, "coef": 128, "coef0": 128, "auto": 128, "gamma_valu": 128, "0001": [128, 135, 140], "Then": 128, "use_degre": 128, "parent": [128, 135, 140], "use_coef": 128, "use_gamma": 128, "use_gamma_valu": 128, "add_condit": [128, 135, 140], "config_dict": 128, "get_dictionari": [128, 130], "pop": 128, "874": [128, 134, 135], "2_svm_cv": [128, 134], "98ccec": 129, "94dccd": 129, "x0": [129, 130, 143], "9968221839517355": [129, 130], "03135360777378082": [129, 130], "x1": [129, 130], "30847043171525": [129, 130], "21179260686039925": [129, 130], "94b2fe": 129, "8422549832482282": 129, "526509233029728": 129, "a4c09f": 129, "980770819590341": 129, "03432249924802": 129, "3cde7a": 129, "05576260053446": 129, "189734587316279": 129, "e7c1a8": 129, "056514790777225": 129, "2444281430933675": 129, "7ab1b1": 129, "057439307959182": 129, "219978780196948": 129, "75934b": 129, "0561106976838825": 129, "233093984919787": 129, "16916": 129, "1183978687059386": 129, "rosenbrock2d": [129, 130], "rosenbrock": 129, "toi": 129, "serv": 129, "minimium": 129, "x_i": 129, "domain": 129, "interv": 129, "x2": [129, 130], "_": [129, 136], "assert": [129, 130, 131, 135], "90": [129, 140], "510": [129, 134], "3_ask_and_tel": [129, 134], "easieast": 130, "1102": 130, "7877872130716": 130, "465623793958126": 130, "__future__": [130, 131, 136, 139, 140], "annot": [130, 131, 136, 139, 140], "__init__": [130, 131, 136], "trials_count": 130, "999999": 130, "208": [130, 134], "4_callback": [130, 134], "quadrat": [131, 133, 134, 146], "222": 131, "311": [131, 135, 136], "shut": 131, "down": 131, "462": 131, "288": 131, "209652396": 131, "09616130553975616": 131, "0393385263038637e": 131, "07": 131, "stopcallback": 131, "stop_aft": 131, "_stop_aft": 131, "And": [131, 132], "incumbent2": 131, "375": [131, 134], "5_continu": [131, 134], "layer": [132, 136, 137, 138, 146], "perceptron": [132, 136, 137, 138, 146], "mlp": [132, 135, 136, 140], "knowledg": 132, "similar": 132, "intuit": 132, "gain": 132, "categoricalhyperparamet": 132, "optimizt": 132, "stick": 132, "prior_acqusition_funct": 132, "107": 132, "fec0cb": 132, "34b1eb": 132, "logist": [132, 135, 140], "relu": [132, 135, 140], "batch_siz": [132, 135, 140], "324": 132, "128": 132, "learning_rate_init": [132, 135, 140], "1134996369914405": 132, "0010000000000000002": 132, "n_layer": [132, 135, 140], "n_neuron": [132, 135, 140], "157": 132, "108": 132, "sgd": [132, 135, 136, 140], "adam": [132, 135, 140], "9d6edf": 132, "0008561309336666343": 132, "f444e1": 132, "78": 132, "006128780165374783": 132, "c0b873": 132, "77": [132, 140], "038952336737852145": 132, "02727174249458364": 132, "betaintegerhyperparamet": 132, "normalfloathyperparamet": 132, "uniformintegerhyperparamet": 132, "load_digit": [132, 135, 136, 140], "convergencewarn": 132, "stratifiedkfold": [132, 135, 136, 140], "neural_network": [132, 135, 140], "mlpclassifi": [132, 135, 140], "digit": [132, 135, 136, 140], "illustr": [132, 135], "educ": 132, "believ": 132, "rel": 132, "skew": 132, "toward": 132, "wider": 132, "256": [132, 135, 140], "60": [132, 135], "tanh": [132, 135, 140], "default_valu": 132, "opinion": 132, "leav": 132, "512": 132, "center": 132, "catch_warn": [132, 135, 136, 140], "filterwarn": [132, 135, 136, 140], "categori": 132, "hidden_layer_s": [132, 135, 140], "solver": [132, 135, 140], "max_it": [132, 135, 136, 140], "fold": [132, 135, 140], "n_split": [132, 135, 136, 140], "error_scor": [132, 135, 140], "default_config": 132, "conduct": 132, "proven": 132, "42": [132, 134, 140, 142], "591": [132, 134], "6_prior": [132, 134], "00": [134, 138, 139, 142, 145], "54": 134, "631": 134, "examples_1_bas": 134, "04": 134, "advantag": 135, "choic": 135, "abstract_facad": [135, 140], "184": 135, "proxi": 135, "71": [135, 140], "rout": 135, "diagnost": 135, "web": 135, "server": 135, "1616": 135, "3862": 135, "tcp": 135, "127": 135, "46741": 135, "3864": 135, "dashboard": 135, "8787": 135, "nanni": 135, "367": 135, "39037": 135, "43813": 135, "45145": 135, "41667": 135, "38733": 135, "46385": 135, "46677": 135, "44581": 135, "4214": 135, "workerst": 135, "46263": 135, "init": 135, "5459": 135, "establish": 135, "connect": 135, "48312": 135, "43659": 135, "48296": 135, "43795": 135, "48290": 135, "42295": 135, "48286": 135, "44693": 135, "48298": 135, "33285": 135, "48320": 135, "44847": 135, "48304": 135, "39475": 135, "48332": 135, "5219": 135, "6e6c6d86": 135, "c5bc": 135, "11ed": 135, "8816": 135, "bb5b2390e090": 135, "48340": 135, "successive_halv": [135, 136], "163": [135, 136], "313": [135, 136], "7777777777777777": 135, "333333333333332": 135, "8ea495": 135, "0988080501556396": 135, "429": 135, "704d44": 135, "214": 135, "31": 135, "005599223654063347": 135, "0038549874043245355": 135, "66": 135, "87": 135, "36672856700711853": 135, "0178087279480037": 135, "69": 135, "hostedtoolcach": 135, "x64": 135, "lib": 135, "site": 135, "182": 135, "userwarn": 135, "port": 135, "perhap": 135, "host": 135, "33385": 135, "38237": 135, "34713": 135, "44159": 135, "34417": 135, "36541": 135, "41227": 135, "39761": 135, "42637": 135, "41545": 135, "39793": 135, "45292": 135, "33803": 135, "45306": 135, "46265": 135, "45330": 135, "34839": 135, "45316": 135, "42305": 135, "45334": 135, "42525": 135, "45348": 135, "39679": 135, "45336": 135, "40633": 135, "45350": 135, "9e0e15b": 135, "45366": 135, "06bb76": 135, "ebb6b": 135, "35": [135, 138], "001547917475869209": 135, "32": 135, "lbfg": [135, 140], "314776659011841": 135, "451": 135, "030055710306406747": 135, "equalscondit": [135, 140], "300": [135, 140], "invscal": [135, 136, 140], "restrict": 135, "use_lr": [135, 140], "use_lr_init": [135, 140], "use_batch_s": [135, 140], "deactiv": 135, "virtu": 135, "placehold": 135, "lr": [135, 140], "lr_init": [135, 140], "ceil": [135, 140], "plot_trajectori": 135, "titl": [135, 139, 140, 148], "xlabel": [135, 139, 140], "ylabel": [135, 139, 140], "ylim": 135, "label": [135, 139, 140], "__class__": 135, "legend": [135, 139, 140], "intensifier_object": 135, "46": [135, 138], "332": [135, 138], "1_mlp_epoch": [135, 138], "wlog": 136, "had": 136, "binari": 136, "27": 136, "6666666666666665": 136, "15": 136, "588a4c": 136, "d431b1": 136, "5488135039273248": 136, "6027633760716439": 136, "eta0": 136, "0006273927602293597": 136, "03077201812975574": 136, "l1_ratio": 136, "317983179393976": 136, "06414749634878436": 136, "d7ee7": 136, "02021839744032572": 136, "018430691395340162": 136, "5865129348100832": 136, "013602256774902344": 136, "4863": 136, "15489347419148672": 136, "006249006102246613": 136, "itertool": 136, "linear_model": 136, "sgdclassifi": 136, "digitsdataset": 136, "_data": 136, "get_inst": 136, "classa": 136, "classb": 136, "target_nam": 136, "get_instance_featur": 136, "get_instance_data": 136, "logical_or": 136, "00001": 136, "clf": 136, "penalti": 136, "elasticnet": 136, "early_stop": 136, "49": [136, 138], "269": [136, 138], "2_sgd_dataset": [136, 138], "descent": [137, 138, 146], "03": 138, "602": 138, "examples_2_multi_fidel": 138, "02": 138, "shown": [139, 140], "priorit": 139, "8a8909": 139, "596": [139, 140], "3a64dd": 139, "c865cf": 139, "9c7523": 139, "1c02c1": 139, "555ee4": 139, "a21a9d": 139, "726247": 139, "15d504": 139, "2b6ad4": 139, "914391": 139, "621": 139, "bf8bea": 139, "d05e80": 139, "df4cbd": 139, "8ba166": 139, "a50db0": 139, "346c91": 139, "c40dc1": 139, "003ffb": 139, "54cbf0": 139, "478ad0": 139, "74f0dd": 139, "ab860b": 139, "460755": 139, "d94cdf": 139, "178c1b": 139, "e7e8b7": 139, "85de3f": 139, "e837bf": 139, "2c9ff3": 139, "df9292": 139, "b3f2de": 139, "7d5595": 139, "b9185b": 139, "b90a99": 139, "e4a69b": 139, "4816bf": 139, "4558f3": 139, "b50fcc": 139, "1dc67b": 139, "74d2ac": 139, "6955fb": 139, "977060": 139, "b0a618": 139, "4e6b25": 139, "ce64ab": 139, "85f2cf": 139, "003f9a": 139, "af0c3f": 139, "36e58": 139, "993356": 139, "094fd4": 139, "3ff59b": 139, "36ae0d": 139, "ecb618": 139, "0f8a3a": 139, "6962d0": 139, "782459": 139, "80e42c": 139, "1869d6": 139, "456310": 139, "0021ff": 139, "ea381b": 139, "41b92b": 139, "57f079": 139, "25cbd8": 139, "95052f": 139, "70707c": 139, "f6e131": 139, "e1cf58": 139, "584c42": 139, "047685": 139, "b67a4d": 139, "1e8dd4": 139, "65dda4": 139, "7a4361": 139, "34e57d": 139, "f8de06": 139, "27cdd9": 139, "71481f": 139, "63da18": 139, "8ffcf3": 139, "6e86f8": 139, "364812": 139, "849b6c": 139, "ce7af0": 139, "733cad": 139, "b93e66": 139, "b7286a": 139, "006028": 139, "191e0a": 139, "4dc9a6": 139, "302da4": 139, "1bf099": 139, "4925ae": 139, "da64bb": 139, "1eeb25": 139, "319aac": 139, "be79c5": 139, "2cde21": 139, "e97e2f": 139, "626263": 139, "1a5612": 139, "6d2c9d": 139, "20661c": 139, "37bc3d": 139, "52e1ac": 139, "efbc00": 139, "81b9ac": 139, "e59947": 139, "c81c9a": 139, "b0fe9d": 139, "f003e3": 139, "f4da54": 139, "945e7c": 139, "b66458": 139, "dc7e51": 139, "086a94": 139, "8f46ab": 139, "cbcc66": 139, "262a13": 139, "f443b5": 139, "8b16d8": 139, "864341": 139, "1818cb": 139, "6ce7a9": 139, "03dcbe": 139, "bd5424": 139, "4df99e": 139, "6558ce": 139, "33ceb0": 139, "34c5dd": 139, "f24959": 139, "508267": 139, "3d53cc": 139, "f46040": 139, "1b6c3c": 139, "b11dc7": 139, "b2d4a3": 139, "5240ea": 139, "a3f245": 139, "835dfe": 139, "2dfd60": 139, "8b2962": 139, "08ec04": 139, "f55919": 139, "ddecf0": 139, "27e7fd": 139, "c85078": 139, "8f09b4": 139, "150": 139, "01538581": 139, "51922763": 139, "98157338e": 139, "12703017e": 139, "66494111": 139, "40318427": 139, "27572929": 139, "17533202": 139, "23793885": 139, "78743083": 139, "09228592": 139, "87714199": 139, "16368713": 139, "04898446": 139, "5425014": 139, "16441216": 139, "56462636": 139, "56122534": 139, "01575389": 139, "33666398": 139, "metric1": 139, "metric2": 139, "plot_from_smac": 139, "enumer": 139, "3000": 139, "19": [139, 142], "032": [139, 142], "1_schaffer": [139, 142], "target_function_runn": 140, "97ef22": 140, "f88a6b": 140, "d77b40": 140, "000534923804864797": 140, "004156370184967407": 140, "146": 140, "600880861282349": 140, "190": 140, "60155834": 140, "60871708": 140, "88924791": 140, "62568462": 140, "03561281": 140, "37195981": 140, "multi_object": 140, "start_tim": 140, "plot_pareto": 140, "average_pareto_cost": 140, "vstack": 140, "pareto_cost": 140, "argsort": 140, "costs_x": 140, "costs_i": 140, "pareto_costs_x": 140, "pareto_costs_i": 140, "tolist": 140, "linestyl": 140, "189": [140, 142], "2_parego": [140, 142], "2d": [141, 142, 146], "schaffer": [141, 142, 146], "221": 142, "examples_3_multi_object": 142, "content": 143, "82": 143, "33ba44": 143, "249a5c": 143, "267": 143, "144": 143, "17babd": 143, "98": 143, "6bd331": 143, "263": [143, 145], "1_call_target_function_script": [143, 145], "examples_5_commandlin": 145, "varieti": 146, "examples_python": 146, "zip": 146, "examples_jupyt": 146, "miro": 147, "Its": 148, "cite": 148, "inproceed": 148, "arxiv21a": 148, "author": 148, "katharina": 148, "eggensperg": 148, "matthia": 148, "feurer": 148, "andr\u00e9": 148, "biedenkapp": 148, "difan": 148, "deng": 148, "carolin": 148, "benjamin": 148, "tim": 148, "ruhkopf": 148, "ren\u00e9": 148, "sass": 148, "versatil": 148, "booktitl": 148, "2109": 148, "09831": 148, "year": 148, "url": 148, "ab": 148, "hoo": 148, "h": 148, "leyton": 148, "brown": 148, "proceed": 148, "confer": 148, "intellig": 148, "lion": 148, "visit": 148, "guidelin": 148}, "objects": {"smac": [[22, 0, 0, "-", "acquisition"], [38, 0, 0, "-", "callback"], [39, 0, 0, "-", "facade"], [47, 0, 0, "-", "initial_design"], [54, 0, 0, "-", "intensifier"], [59, 0, 0, "-", "main"], [62, 0, 0, "-", "model"], [86, 0, 0, "-", "multi_objective"], [90, 0, 0, "-", "random_design"], [95, 0, 0, "-", "runhistory"], [110, 0, 0, "-", "runner"], [117, 0, 0, "-", "scenario"], [118, 0, 0, "-", "utils"]], "smac.acquisition": [[23, 0, 0, "-", "function"], [31, 0, 0, "-", "maximizer"]], "smac.acquisition.function": [[23, 1, 1, "", "AbstractAcquisitionFunction"], [23, 1, 1, "", "EI"], [23, 1, 1, "", "EIPS"], [23, 1, 1, "", "IntegratedAcquisitionFunction"], [23, 1, 1, "", "LCB"], [23, 1, 1, "", "PI"], [23, 1, 1, "", "PriorAcquisitionFunction"], [23, 1, 1, "", "TS"], [24, 0, 0, "-", "abstract_acquisition_function"], [25, 0, 0, "-", "confidence_bound"], [26, 0, 0, "-", "expected_improvement"], [27, 0, 0, "-", "integrated_acquisition_function"], [28, 0, 0, "-", "prior_acqusition_function"], [29, 0, 0, "-", "probability_improvement"], [30, 0, 0, "-", "thompson"]], "smac.acquisition.function.AbstractAcquisitionFunction": [[23, 2, 1, "", "__call__"], [23, 3, 1, "", "meta"], [23, 3, 1, "", "model"], [23, 3, 1, "", "name"], [23, 2, 1, "", "update"]], "smac.acquisition.function.EI": [[23, 4, 1, "", "_eta"], [23, 4, 1, "", "_log"], [23, 4, 1, "", "_xi"], [23, 3, 1, "", "meta"], [23, 3, 1, "", "name"]], "smac.acquisition.function.EIPS": [[23, 3, 1, "", "name"]], "smac.acquisition.function.IntegratedAcquisitionFunction": [[23, 4, 1, "", "_acquisition_function"], [23, 4, 1, "", "_eta"], [23, 4, 1, "", "_functions"], [23, 3, 1, "", "meta"], [23, 3, 1, "", "name"]], "smac.acquisition.function.LCB": [[23, 4, 1, "", "_beta"], [23, 4, 1, "", "_num_data"], [23, 3, 1, "", "meta"], [23, 3, 1, "", "name"]], "smac.acquisition.function.PI": [[23, 3, 1, "", "meta"], [23, 3, 1, "", "name"]], "smac.acquisition.function.PriorAcquisitionFunction": [[23, 3, 1, "", "meta"], [23, 3, 1, "", "model"], [23, 3, 1, "", "name"]], "smac.acquisition.function.TS": [[23, 3, 1, "", "name"]], "smac.acquisition.function.abstract_acquisition_function": [[24, 1, 1, "", "AbstractAcquisitionFunction"]], "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction": [[24, 2, 1, "", "__call__"], [24, 3, 1, "", "meta"], [24, 3, 1, "", "model"], [24, 3, 1, "", "name"], [24, 2, 1, "", "update"]], "smac.acquisition.function.confidence_bound": [[25, 1, 1, "", "LCB"]], "smac.acquisition.function.confidence_bound.LCB": [[25, 4, 1, "", "_beta"], [25, 4, 1, "", "_num_data"], [25, 3, 1, "", "meta"], [25, 3, 1, "", "name"]], "smac.acquisition.function.expected_improvement": [[26, 1, 1, "", "EI"], [26, 1, 1, "", "EIPS"]], "smac.acquisition.function.expected_improvement.EI": [[26, 4, 1, "", "_eta"], [26, 4, 1, "", "_log"], [26, 4, 1, "", "_xi"], [26, 3, 1, "", "meta"], [26, 3, 1, "", "name"]], "smac.acquisition.function.expected_improvement.EIPS": [[26, 3, 1, "", "name"]], "smac.acquisition.function.integrated_acquisition_function": [[27, 1, 1, "", "IntegratedAcquisitionFunction"]], "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction": [[27, 4, 1, "", "_acquisition_function"], [27, 4, 1, "", "_eta"], [27, 4, 1, "", "_functions"], [27, 3, 1, "", "meta"], [27, 3, 1, "", "name"]], "smac.acquisition.function.prior_acqusition_function": [[28, 1, 1, "", "PriorAcquisitionFunction"]], "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction": [[28, 3, 1, "", "meta"], [28, 3, 1, "", "model"], [28, 3, 1, "", "name"]], "smac.acquisition.function.probability_improvement": [[29, 1, 1, "", "PI"]], "smac.acquisition.function.probability_improvement.PI": [[29, 3, 1, "", "meta"], [29, 3, 1, "", "name"]], "smac.acquisition.function.thompson": [[30, 1, 1, "", "TS"]], "smac.acquisition.function.thompson.TS": [[30, 3, 1, "", "name"]], "smac.acquisition.maximizer": [[31, 1, 1, "", "AbstractAcquisitionMaximizer"], [31, 1, 1, "", "DifferentialEvolution"], [31, 1, 1, "", "LocalAndSortedPriorRandomSearch"], [31, 1, 1, "", "LocalAndSortedRandomSearch"], [31, 1, 1, "", "LocalSearch"], [31, 1, 1, "", "RandomSearch"], [32, 0, 0, "-", "abstract_acqusition_maximizer"], [33, 0, 0, "-", "differential_evolution"], [34, 0, 0, "-", "helpers"], [35, 0, 0, "-", "local_and_random_search"], [36, 0, 0, "-", "local_search"], [37, 0, 0, "-", "random_search"]], "smac.acquisition.maximizer.AbstractAcquisitionMaximizer": [[31, 3, 1, "", "acquisition_function"], [31, 2, 1, "", "maximize"], [31, 3, 1, "", "meta"]], "smac.acquisition.maximizer.LocalAndSortedRandomSearch": [[31, 3, 1, "", "acquisition_function"], [31, 3, 1, "", "meta"]], "smac.acquisition.maximizer.LocalSearch": [[31, 3, 1, "", "meta"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer": [[32, 1, 1, "", "AbstractAcquisitionMaximizer"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer": [[32, 3, 1, "", "acquisition_function"], [32, 2, 1, "", "maximize"], [32, 3, 1, "", "meta"]], "smac.acquisition.maximizer.differential_evolution": [[33, 1, 1, "", "DifferentialEvolution"]], "smac.acquisition.maximizer.helpers": [[34, 1, 1, "", "ChallengerList"]], "smac.acquisition.maximizer.local_and_random_search": [[35, 1, 1, "", "LocalAndSortedPriorRandomSearch"], [35, 1, 1, "", "LocalAndSortedRandomSearch"]], "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch": [[35, 3, 1, "", "acquisition_function"], [35, 3, 1, "", "meta"]], "smac.acquisition.maximizer.local_search": [[36, 1, 1, "", "LocalSearch"]], "smac.acquisition.maximizer.local_search.LocalSearch": [[36, 3, 1, "", "meta"]], "smac.acquisition.maximizer.random_search": [[37, 1, 1, "", "RandomSearch"]], "smac.callback": [[38, 1, 1, "", "Callback"]], "smac.callback.Callback": [[38, 2, 1, "", "on_ask_end"], [38, 2, 1, "", "on_ask_start"], [38, 2, 1, "", "on_end"], [38, 2, 1, "", "on_iteration_end"], [38, 2, 1, "", "on_iteration_start"], [38, 2, 1, "", "on_next_configurations_end"], [38, 2, 1, "", "on_next_configurations_start"], [38, 2, 1, "", "on_start"], [38, 2, 1, "", "on_tell_end"], [38, 2, 1, "", "on_tell_start"]], "smac.facade": [[39, 1, 1, "", "AbstractFacade"], [39, 1, 1, "", "AlgorithmConfigurationFacade"], [39, 1, 1, "", "BlackBoxFacade"], [39, 1, 1, "", "HyperbandFacade"], [39, 1, 1, "", "HyperparameterOptimizationFacade"], [39, 1, 1, "", "MultiFidelityFacade"], [39, 1, 1, "", "RandomFacade"], [40, 0, 0, "-", "abstract_facade"], [41, 0, 0, "-", "algorithm_configuration_facade"], [42, 0, 0, "-", "blackbox_facade"], [43, 0, 0, "-", "hyperband_facade"], [44, 0, 0, "-", "hyperparameter_optimization_facade"], [45, 0, 0, "-", "multi_fidelity_facade"], [46, 0, 0, "-", "random_facade"]], "smac.facade.AbstractFacade": [[39, 2, 1, "", "ask"], [39, 2, 1, "", "get_acquisition_function"], [39, 2, 1, "", "get_acquisition_maximizer"], [39, 2, 1, "", "get_config_selector"], [39, 2, 1, "", "get_initial_design"], [39, 2, 1, "", "get_intensifier"], [39, 2, 1, "", "get_model"], [39, 2, 1, "", "get_multi_objective_algorithm"], [39, 2, 1, "", "get_random_design"], [39, 2, 1, "", "get_runhistory_encoder"], [39, 3, 1, "", "intensifier"], [39, 3, 1, "", "meta"], [39, 2, 1, "", "optimize"], [39, 3, 1, "", "optimizer"], [39, 3, 1, "", "runhistory"], [39, 3, 1, "", "scenario"], [39, 2, 1, "", "tell"], [39, 2, 1, "", "validate"]], "smac.facade.AlgorithmConfigurationFacade": [[39, 2, 1, "", "get_acquisition_function"], [39, 2, 1, "", "get_acquisition_maximizer"], [39, 2, 1, "", "get_initial_design"], [39, 2, 1, "", "get_intensifier"], [39, 2, 1, "", "get_model"], [39, 2, 1, "", "get_multi_objective_algorithm"], [39, 2, 1, "", "get_random_design"], [39, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.BlackBoxFacade": [[39, 2, 1, "", "get_acquisition_function"], [39, 2, 1, "", "get_acquisition_maximizer"], [39, 2, 1, "", "get_initial_design"], [39, 2, 1, "", "get_intensifier"], [39, 2, 1, "", "get_kernel"], [39, 2, 1, "", "get_model"], [39, 2, 1, "", "get_multi_objective_algorithm"], [39, 2, 1, "", "get_random_design"], [39, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.HyperbandFacade": [[39, 2, 1, "", "get_intensifier"]], "smac.facade.HyperparameterOptimizationFacade": [[39, 2, 1, "", "get_acquisition_function"], [39, 2, 1, "", "get_acquisition_maximizer"], [39, 2, 1, "", "get_initial_design"], [39, 2, 1, "", "get_intensifier"], [39, 2, 1, "", "get_model"], [39, 2, 1, "", "get_multi_objective_algorithm"], [39, 2, 1, "", "get_random_design"], [39, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.MultiFidelityFacade": [[39, 2, 1, "", "get_initial_design"], [39, 2, 1, "", "get_intensifier"]], "smac.facade.RandomFacade": [[39, 2, 1, "", "get_acquisition_function"], [39, 2, 1, "", "get_acquisition_maximizer"], [39, 2, 1, "", "get_initial_design"], [39, 2, 1, "", "get_intensifier"], [39, 2, 1, "", "get_model"], [39, 2, 1, "", "get_multi_objective_algorithm"], [39, 2, 1, "", "get_random_design"], [39, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.abstract_facade": [[40, 1, 1, "", "AbstractFacade"]], "smac.facade.abstract_facade.AbstractFacade": [[40, 2, 1, "", "ask"], [40, 2, 1, "", "get_acquisition_function"], [40, 2, 1, "", "get_acquisition_maximizer"], [40, 2, 1, "", "get_config_selector"], [40, 2, 1, "", "get_initial_design"], [40, 2, 1, "", "get_intensifier"], [40, 2, 1, "", "get_model"], [40, 2, 1, "", "get_multi_objective_algorithm"], [40, 2, 1, "", "get_random_design"], [40, 2, 1, "", "get_runhistory_encoder"], [40, 3, 1, "", "intensifier"], [40, 3, 1, "", "meta"], [40, 2, 1, "", "optimize"], [40, 3, 1, "", "optimizer"], [40, 3, 1, "", "runhistory"], [40, 3, 1, "", "scenario"], [40, 2, 1, "", "tell"], [40, 2, 1, "", "validate"]], "smac.facade.algorithm_configuration_facade": [[41, 1, 1, "", "AlgorithmConfigurationFacade"]], "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade": [[41, 2, 1, "", "get_acquisition_function"], [41, 2, 1, "", "get_acquisition_maximizer"], [41, 2, 1, "", "get_initial_design"], [41, 2, 1, "", "get_intensifier"], [41, 2, 1, "", "get_model"], [41, 2, 1, "", "get_multi_objective_algorithm"], [41, 2, 1, "", "get_random_design"], [41, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.blackbox_facade": [[42, 1, 1, "", "BlackBoxFacade"]], "smac.facade.blackbox_facade.BlackBoxFacade": [[42, 2, 1, "", "get_acquisition_function"], [42, 2, 1, "", "get_acquisition_maximizer"], [42, 2, 1, "", "get_initial_design"], [42, 2, 1, "", "get_intensifier"], [42, 2, 1, "", "get_kernel"], [42, 2, 1, "", "get_model"], [42, 2, 1, "", "get_multi_objective_algorithm"], [42, 2, 1, "", "get_random_design"], [42, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.hyperband_facade": [[43, 1, 1, "", "HyperbandFacade"]], "smac.facade.hyperband_facade.HyperbandFacade": [[43, 2, 1, "", "get_intensifier"]], "smac.facade.hyperparameter_optimization_facade": [[44, 1, 1, "", "HyperparameterOptimizationFacade"]], "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade": [[44, 2, 1, "", "get_acquisition_function"], [44, 2, 1, "", "get_acquisition_maximizer"], [44, 2, 1, "", "get_initial_design"], [44, 2, 1, "", "get_intensifier"], [44, 2, 1, "", "get_model"], [44, 2, 1, "", "get_multi_objective_algorithm"], [44, 2, 1, "", "get_random_design"], [44, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.multi_fidelity_facade": [[45, 1, 1, "", "MultiFidelityFacade"]], "smac.facade.multi_fidelity_facade.MultiFidelityFacade": [[45, 2, 1, "", "get_initial_design"], [45, 2, 1, "", "get_intensifier"]], "smac.facade.random_facade": [[46, 1, 1, "", "RandomFacade"]], "smac.facade.random_facade.RandomFacade": [[46, 2, 1, "", "get_acquisition_function"], [46, 2, 1, "", "get_acquisition_maximizer"], [46, 2, 1, "", "get_initial_design"], [46, 2, 1, "", "get_intensifier"], [46, 2, 1, "", "get_model"], [46, 2, 1, "", "get_multi_objective_algorithm"], [46, 2, 1, "", "get_random_design"], [46, 2, 1, "", "get_runhistory_encoder"]], "smac.initial_design": [[47, 1, 1, "", "AbstractInitialDesign"], [47, 1, 1, "", "DefaultInitialDesign"], [47, 1, 1, "", "FactorialInitialDesign"], [47, 1, 1, "", "LatinHypercubeInitialDesign"], [47, 1, 1, "", "RandomInitialDesign"], [47, 1, 1, "", "SobolInitialDesign"], [48, 0, 0, "-", "abstract_initial_design"], [49, 0, 0, "-", "default_design"], [50, 0, 0, "-", "factorial_design"], [51, 0, 0, "-", "latin_hypercube_design"], [52, 0, 0, "-", "random_design"], [53, 0, 0, "-", "sobol_design"]], "smac.initial_design.AbstractInitialDesign": [[47, 3, 1, "", "meta"], [47, 2, 1, "", "select_configurations"]], "smac.initial_design.abstract_initial_design": [[48, 1, 1, "", "AbstractInitialDesign"]], "smac.initial_design.abstract_initial_design.AbstractInitialDesign": [[48, 3, 1, "", "meta"], [48, 2, 1, "", "select_configurations"]], "smac.initial_design.default_design": [[49, 1, 1, "", "DefaultInitialDesign"]], "smac.initial_design.factorial_design": [[50, 1, 1, "", "FactorialInitialDesign"]], "smac.initial_design.latin_hypercube_design": [[51, 1, 1, "", "LatinHypercubeInitialDesign"]], "smac.initial_design.random_design": [[52, 1, 1, "", "RandomInitialDesign"]], "smac.initial_design.sobol_design": [[53, 1, 1, "", "SobolInitialDesign"]], "smac.intensifier": [[54, 1, 1, "", "AbstractIntensifier"], [54, 1, 1, "", "Hyperband"], [54, 1, 1, "", "Intensifier"], [54, 1, 1, "", "SuccessiveHalving"], [55, 0, 0, "-", "abstract_intensifier"], [56, 0, 0, "-", "hyperband"], [57, 0, 0, "-", "intensifier"], [58, 0, 0, "-", "successive_halving"]], "smac.intensifier.AbstractIntensifier": [[54, 2, 1, "", "__iter__"], [54, 2, 1, "", "__post_init__"], [54, 3, 1, "", "config_generator"], [54, 3, 1, "", "config_selector"], [54, 2, 1, "", "get_callback"], [54, 2, 1, "", "get_incumbent"], [54, 2, 1, "", "get_incumbent_instance_seed_budget_key_differences"], [54, 2, 1, "", "get_incumbent_instance_seed_budget_keys"], [54, 2, 1, "", "get_incumbents"], [54, 2, 1, "", "get_instance_seed_budget_keys"], [54, 2, 1, "", "get_instance_seed_keys_of_interest"], [54, 2, 1, "", "get_rejected_configs"], [54, 2, 1, "", "get_state"], [54, 2, 1, "", "get_trials_of_interest"], [54, 3, 1, "", "incumbents_changed"], [54, 2, 1, "", "load"], [54, 3, 1, "", "meta"], [54, 2, 1, "", "reset"], [54, 3, 1, "", "runhistory"], [54, 2, 1, "", "save"], [54, 2, 1, "", "set_state"], [54, 3, 1, "", "trajectory"], [54, 2, 1, "", "update_incumbents"], [54, 3, 1, "", "used_walltime"], [54, 3, 1, "", "uses_budgets"], [54, 3, 1, "", "uses_instances"], [54, 3, 1, "", "uses_seeds"]], "smac.intensifier.Hyperband": [[54, 2, 1, "", "get_state"], [54, 2, 1, "", "reset"], [54, 2, 1, "", "set_state"]], "smac.intensifier.Intensifier": [[54, 2, 1, "", "__iter__"], [54, 2, 1, "", "get_state"], [54, 2, 1, "", "reset"], [54, 2, 1, "", "set_state"], [54, 3, 1, "", "uses_budgets"], [54, 3, 1, "", "uses_instances"], [54, 3, 1, "", "uses_seeds"]], "smac.intensifier.SuccessiveHalving": [[54, 2, 1, "", "__post_init__"], [54, 2, 1, "", "get_instance_seed_budget_keys"], [54, 2, 1, "", "get_state"], [54, 2, 1, "", "get_trials_of_interest"], [54, 3, 1, "", "meta"], [54, 2, 1, "", "print_tracker"], [54, 2, 1, "", "reset"], [54, 2, 1, "", "set_state"], [54, 3, 1, "", "uses_budgets"], [54, 3, 1, "", "uses_instances"], [54, 3, 1, "", "uses_seeds"]], "smac.intensifier.abstract_intensifier": [[55, 1, 1, "", "AbstractIntensifier"]], "smac.intensifier.abstract_intensifier.AbstractIntensifier": [[55, 2, 1, "", "__iter__"], [55, 2, 1, "", "__post_init__"], [55, 3, 1, "", "config_generator"], [55, 3, 1, "", "config_selector"], [55, 2, 1, "", "get_callback"], [55, 2, 1, "", "get_incumbent"], [55, 2, 1, "", "get_incumbent_instance_seed_budget_key_differences"], [55, 2, 1, "", "get_incumbent_instance_seed_budget_keys"], [55, 2, 1, "", "get_incumbents"], [55, 2, 1, "", "get_instance_seed_budget_keys"], [55, 2, 1, "", "get_instance_seed_keys_of_interest"], [55, 2, 1, "", "get_rejected_configs"], [55, 2, 1, "", "get_state"], [55, 2, 1, "", "get_trials_of_interest"], [55, 3, 1, "", "incumbents_changed"], [55, 2, 1, "", "load"], [55, 3, 1, "", "meta"], [55, 2, 1, "", "reset"], [55, 3, 1, "", "runhistory"], [55, 2, 1, "", "save"], [55, 2, 1, "", "set_state"], [55, 3, 1, "", "trajectory"], [55, 2, 1, "", "update_incumbents"], [55, 3, 1, "", "used_walltime"], [55, 3, 1, "", "uses_budgets"], [55, 3, 1, "", "uses_instances"], [55, 3, 1, "", "uses_seeds"]], "smac.intensifier.hyperband": [[56, 1, 1, "", "Hyperband"]], "smac.intensifier.hyperband.Hyperband": [[56, 2, 1, "", "get_state"], [56, 2, 1, "", "reset"], [56, 2, 1, "", "set_state"]], "smac.intensifier.intensifier": [[57, 1, 1, "", "Intensifier"]], "smac.intensifier.intensifier.Intensifier": [[57, 2, 1, "", "__iter__"], [57, 2, 1, "", "get_state"], [57, 2, 1, "", "reset"], [57, 2, 1, "", "set_state"], [57, 3, 1, "", "uses_budgets"], [57, 3, 1, "", "uses_instances"], [57, 3, 1, "", "uses_seeds"]], "smac.intensifier.successive_halving": [[58, 1, 1, "", "SuccessiveHalving"]], "smac.intensifier.successive_halving.SuccessiveHalving": [[58, 2, 1, "", "__post_init__"], [58, 2, 1, "", "get_instance_seed_budget_keys"], [58, 2, 1, "", "get_state"], [58, 2, 1, "", "get_trials_of_interest"], [58, 3, 1, "", "meta"], [58, 2, 1, "", "print_tracker"], [58, 2, 1, "", "reset"], [58, 2, 1, "", "set_state"], [58, 3, 1, "", "uses_budgets"], [58, 3, 1, "", "uses_instances"], [58, 3, 1, "", "uses_seeds"]], "smac.main": [[60, 0, 0, "-", "config_selector"], [61, 0, 0, "-", "smbo"]], "smac.main.config_selector": [[60, 1, 1, "", "ConfigSelector"]], "smac.main.config_selector.ConfigSelector": [[60, 2, 1, "", "__iter__"], [60, 3, 1, "", "meta"]], "smac.main.smbo": [[61, 1, 1, "", "SMBO"]], "smac.main.smbo.SMBO": [[61, 2, 1, "", "ask"], [61, 3, 1, "", "budget_exhausted"], [61, 2, 1, "", "exists"], [61, 3, 1, "", "intensifier"], [61, 2, 1, "", "load"], [61, 2, 1, "", "optimize"], [61, 2, 1, "", "print_stats"], [61, 3, 1, "", "remaining_cputime"], [61, 3, 1, "", "remaining_trials"], [61, 3, 1, "", "remaining_walltime"], [61, 2, 1, "", "reset"], [61, 3, 1, "", "runhistory"], [61, 2, 1, "", "save"], [61, 2, 1, "", "tell"], [61, 2, 1, "", "update_acquisition_function"], [61, 2, 1, "", "update_model"], [61, 3, 1, "", "used_target_function_walltime"], [61, 3, 1, "", "used_walltime"], [61, 2, 1, "", "validate"]], "smac.model": [[62, 1, 1, "", "AbstractModel"], [62, 1, 1, "", "MultiObjectiveModel"], [62, 1, 1, "", "RandomModel"], [63, 0, 0, "-", "abstract_model"], [64, 0, 0, "-", "gaussian_process"], [81, 0, 0, "-", "multi_objective_model"], [82, 0, 0, "-", "random_forest"], [85, 0, 0, "-", "random_model"]], "smac.model.AbstractModel": [[62, 3, 1, "", "meta"], [62, 2, 1, "", "predict"], [62, 2, 1, "", "predict_marginalized"], [62, 2, 1, "", "train"]], "smac.model.MultiObjectiveModel": [[62, 3, 1, "", "models"], [62, 2, 1, "", "predict_marginalized"]], "smac.model.abstract_model": [[63, 1, 1, "", "AbstractModel"]], "smac.model.abstract_model.AbstractModel": [[63, 3, 1, "", "meta"], [63, 2, 1, "", "predict"], [63, 2, 1, "", "predict_marginalized"], [63, 2, 1, "", "train"]], "smac.model.gaussian_process": [[64, 1, 1, "", "AbstractGaussianProcess"], [64, 1, 1, "", "GaussianProcess"], [64, 1, 1, "", "MCMCGaussianProcess"], [65, 0, 0, "-", "abstract_gaussian_process"], [66, 0, 0, "-", "gaussian_process"], [67, 0, 0, "-", "gpytorch_gaussian_process"], [68, 0, 0, "-", "kernels"], [74, 0, 0, "-", "mcmc_gaussian_process"], [75, 0, 0, "-", "priors"]], "smac.model.gaussian_process.AbstractGaussianProcess": [[64, 3, 1, "", "meta"]], "smac.model.gaussian_process.GaussianProcess": [[64, 3, 1, "", "meta"], [64, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.MCMCGaussianProcess": [[64, 3, 1, "", "meta"], [64, 3, 1, "", "models"]], "smac.model.gaussian_process.abstract_gaussian_process": [[65, 1, 1, "", "AbstractGaussianProcess"]], "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess": [[65, 3, 1, "", "meta"]], "smac.model.gaussian_process.gaussian_process": [[66, 1, 1, "", "GaussianProcess"]], "smac.model.gaussian_process.gaussian_process.GaussianProcess": [[66, 3, 1, "", "meta"], [66, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.kernels": [[68, 1, 1, "", "AbstractKernel"], [68, 1, 1, "", "ConstantKernel"], [68, 1, 1, "", "HammingKernel"], [68, 1, 1, "", "MaternKernel"], [68, 1, 1, "", "ProductKernel"], [68, 1, 1, "", "RBFKernel"], [68, 1, 1, "", "SumKernel"], [68, 1, 1, "", "WhiteKernel"], [69, 0, 0, "-", "base_kernels"], [70, 0, 0, "-", "hamming_kernel"], [71, 0, 0, "-", "matern_kernel"], [72, 0, 0, "-", "rbf_kernel"], [73, 0, 0, "-", "white_kernel"]], "smac.model.gaussian_process.kernels.AbstractKernel": [[68, 2, 1, "", "__call__"], [68, 2, 1, "", "get_params"], [68, 4, 1, "", "has_conditions"], [68, 3, 1, "", "hyperparameters"], [68, 3, 1, "", "meta"], [68, 3, 1, "", "n_dims"], [68, 4, 1, "", "operate_on"], [68, 4, 1, "", "prior"]], "smac.model.gaussian_process.kernels.ConstantKernel": [[68, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.HammingKernel": [[68, 3, 1, "", "hyperparameter_length_scale"], [68, 3, 1, "", "meta"]], "smac.model.gaussian_process.kernels.ProductKernel": [[68, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.SumKernel": [[68, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels": [[69, 1, 1, "", "AbstractKernel"], [69, 1, 1, "", "ConstantKernel"], [69, 1, 1, "", "ProductKernel"], [69, 1, 1, "", "SumKernel"]], "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel": [[69, 2, 1, "", "__call__"], [69, 2, 1, "", "get_params"], [69, 4, 1, "", "has_conditions"], [69, 3, 1, "", "hyperparameters"], [69, 3, 1, "", "meta"], [69, 3, 1, "", "n_dims"], [69, 4, 1, "", "operate_on"], [69, 4, 1, "", "prior"]], "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel": [[69, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels.ProductKernel": [[69, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels.SumKernel": [[69, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[70, 1, 1, "", "HammingKernel"]], "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel": [[70, 3, 1, "", "hyperparameter_length_scale"], [70, 3, 1, "", "meta"]], "smac.model.gaussian_process.kernels.matern_kernel": [[71, 1, 1, "", "MaternKernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[72, 1, 1, "", "RBFKernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[73, 1, 1, "", "WhiteKernel"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[74, 1, 1, "", "MCMCGaussianProcess"]], "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess": [[74, 3, 1, "", "meta"], [74, 3, 1, "", "models"]], "smac.model.gaussian_process.priors": [[75, 1, 1, "", "GammaPrior"], [75, 1, 1, "", "HorseshoePrior"], [75, 1, 1, "", "LogNormalPrior"], [75, 1, 1, "", "SoftTopHatPrior"], [75, 1, 1, "", "TophatPrior"], [76, 0, 0, "-", "abstract_prior"], [77, 0, 0, "-", "gamma_prior"], [78, 0, 0, "-", "horseshoe_prior"], [79, 0, 0, "-", "log_normal_prior"], [80, 0, 0, "-", "tophat_prior"]], "smac.model.gaussian_process.priors.GammaPrior": [[75, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.HorseshoePrior": [[75, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.LogNormalPrior": [[75, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.SoftTopHatPrior": [[75, 2, 1, "", "get_gradient"], [75, 2, 1, "", "get_log_probability"], [75, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.TophatPrior": [[75, 2, 1, "", "get_gradient"], [75, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.abstract_prior": [[76, 1, 1, "", "AbstractPrior"]], "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior": [[76, 2, 1, "", "get_gradient"], [76, 2, 1, "", "get_log_probability"], [76, 3, 1, "", "meta"], [76, 2, 1, "", "sample_from_prior"]], "smac.model.gaussian_process.priors.gamma_prior": [[77, 1, 1, "", "GammaPrior"]], "smac.model.gaussian_process.priors.gamma_prior.GammaPrior": [[77, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[78, 1, 1, "", "HorseshoePrior"]], "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior": [[78, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.log_normal_prior": [[79, 1, 1, "", "LogNormalPrior"]], "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior": [[79, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.tophat_prior": [[80, 1, 1, "", "SoftTopHatPrior"], [80, 1, 1, "", "TophatPrior"]], "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior": [[80, 2, 1, "", "get_gradient"], [80, 2, 1, "", "get_log_probability"], [80, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.tophat_prior.TophatPrior": [[80, 2, 1, "", "get_gradient"], [80, 3, 1, "", "meta"]], "smac.model.multi_objective_model": [[81, 1, 1, "", "MultiObjectiveModel"]], "smac.model.multi_objective_model.MultiObjectiveModel": [[81, 3, 1, "", "models"], [81, 2, 1, "", "predict_marginalized"]], "smac.model.random_forest": [[82, 1, 1, "", "AbstractRandomForest"], [82, 1, 1, "", "RandomForest"], [83, 0, 0, "-", "abstract_random_forest"], [84, 0, 0, "-", "random_forest"]], "smac.model.random_forest.RandomForest": [[82, 3, 1, "", "meta"], [82, 2, 1, "", "predict_marginalized"]], "smac.model.random_forest.abstract_random_forest": [[83, 1, 1, "", "AbstractRandomForest"]], "smac.model.random_forest.random_forest": [[84, 1, 1, "", "RandomForest"]], "smac.model.random_forest.random_forest.RandomForest": [[84, 3, 1, "", "meta"], [84, 2, 1, "", "predict_marginalized"]], "smac.model.random_model": [[85, 1, 1, "", "RandomModel"]], "smac.multi_objective": [[86, 1, 1, "", "AbstractMultiObjectiveAlgorithm"], [86, 1, 1, "", "MeanAggregationStrategy"], [86, 1, 1, "", "ParEGO"], [87, 0, 0, "-", "abstract_multi_objective_algorithm"], [88, 0, 0, "-", "aggregation_strategy"], [89, 0, 0, "-", "parego"]], "smac.multi_objective.AbstractMultiObjectiveAlgorithm": [[86, 2, 1, "", "__call__"], [86, 3, 1, "", "meta"], [86, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.MeanAggregationStrategy": [[86, 2, 1, "", "__call__"], [86, 3, 1, "", "meta"]], "smac.multi_objective.ParEGO": [[86, 2, 1, "", "__call__"], [86, 3, 1, "", "meta"], [86, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[87, 1, 1, "", "AbstractMultiObjectiveAlgorithm"]], "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm": [[87, 2, 1, "", "__call__"], [87, 3, 1, "", "meta"], [87, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.aggregation_strategy": [[88, 1, 1, "", "MeanAggregationStrategy"]], "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy": [[88, 2, 1, "", "__call__"], [88, 3, 1, "", "meta"]], "smac.multi_objective.parego": [[89, 1, 1, "", "ParEGO"]], "smac.multi_objective.parego.ParEGO": [[89, 2, 1, "", "__call__"], [89, 3, 1, "", "meta"], [89, 2, 1, "", "update_on_iteration_start"]], "smac.random_design": [[90, 1, 1, "", "AbstractRandomDesign"], [90, 1, 1, "", "CosineAnnealingRandomDesign"], [90, 1, 1, "", "DynamicModulusRandomDesign"], [90, 1, 1, "", "DynamicProbabilityRandomDesign"], [90, 1, 1, "", "ModulusRandomDesign"], [90, 1, 1, "", "ProbabilityRandomDesign"], [91, 0, 0, "-", "abstract_random_design"], [92, 0, 0, "-", "annealing_design"], [93, 0, 0, "-", "modulus_design"], [94, 0, 0, "-", "probability_design"]], "smac.random_design.AbstractRandomDesign": [[90, 2, 1, "", "check"], [90, 3, 1, "", "meta"], [90, 2, 1, "", "next_iteration"]], "smac.random_design.CosineAnnealingRandomDesign": [[90, 2, 1, "", "check"], [90, 3, 1, "", "meta"], [90, 2, 1, "", "next_iteration"]], "smac.random_design.DynamicModulusRandomDesign": [[90, 2, 1, "", "check"], [90, 3, 1, "", "meta"], [90, 2, 1, "", "next_iteration"]], "smac.random_design.DynamicProbabilityRandomDesign": [[90, 2, 1, "", "check"], [90, 3, 1, "", "meta"], [90, 2, 1, "", "next_iteration"]], "smac.random_design.ModulusRandomDesign": [[90, 2, 1, "", "check"], [90, 3, 1, "", "meta"]], "smac.random_design.ProbabilityRandomDesign": [[90, 2, 1, "", "check"], [90, 3, 1, "", "meta"]], "smac.random_design.abstract_random_design": [[91, 1, 1, "", "AbstractRandomDesign"]], "smac.random_design.abstract_random_design.AbstractRandomDesign": [[91, 2, 1, "", "check"], [91, 3, 1, "", "meta"], [91, 2, 1, "", "next_iteration"]], "smac.random_design.annealing_design": [[92, 1, 1, "", "CosineAnnealingRandomDesign"]], "smac.random_design.annealing_design.CosineAnnealingRandomDesign": [[92, 2, 1, "", "check"], [92, 3, 1, "", "meta"], [92, 2, 1, "", "next_iteration"]], "smac.random_design.modulus_design": [[93, 1, 1, "", "DynamicModulusRandomDesign"], [93, 1, 1, "", "ModulusRandomDesign"]], "smac.random_design.modulus_design.DynamicModulusRandomDesign": [[93, 2, 1, "", "check"], [93, 3, 1, "", "meta"], [93, 2, 1, "", "next_iteration"]], "smac.random_design.modulus_design.ModulusRandomDesign": [[93, 2, 1, "", "check"], [93, 3, 1, "", "meta"]], "smac.random_design.probability_design": [[94, 1, 1, "", "DynamicProbabilityRandomDesign"], [94, 1, 1, "", "ProbabilityRandomDesign"]], "smac.random_design.probability_design.DynamicProbabilityRandomDesign": [[94, 2, 1, "", "check"], [94, 3, 1, "", "meta"], [94, 2, 1, "", "next_iteration"]], "smac.random_design.probability_design.ProbabilityRandomDesign": [[94, 2, 1, "", "check"], [94, 3, 1, "", "meta"]], "smac.runhistory": [[95, 1, 1, "", "InstanceSeedBudgetKey"], [95, 1, 1, "", "InstanceSeedKey"], [95, 1, 1, "", "RunHistory"], [95, 1, 1, "", "StatusType"], [95, 1, 1, "", "TrialInfo"], [95, 1, 1, "", "TrialKey"], [95, 1, 1, "", "TrialValue"], [96, 0, 0, "-", "dataclasses"], [97, 0, 0, "-", "encoder"], [107, 0, 0, "-", "enumerations"], [108, 0, 0, "-", "errors"], [109, 0, 0, "-", "runhistory"]], "smac.runhistory.InstanceSeedBudgetKey": [[95, 2, 1, "", "get_instance_seed_key"]], "smac.runhistory.RunHistory": [[95, 2, 1, "", "__contains__"], [95, 2, 1, "", "__eq__"], [95, 2, 1, "", "__getitem__"], [95, 2, 1, "", "__iter__"], [95, 2, 1, "", "__len__"], [95, 2, 1, "", "add"], [95, 2, 1, "", "add_running_trial"], [95, 2, 1, "", "add_trial"], [95, 2, 1, "", "average_cost"], [95, 3, 1, "", "config_ids"], [95, 2, 1, "", "empty"], [95, 3, 1, "", "finished"], [95, 2, 1, "", "get_config"], [95, 2, 1, "", "get_config_id"], [95, 2, 1, "", "get_configs"], [95, 2, 1, "", "get_configs_per_budget"], [95, 2, 1, "", "get_cost"], [95, 2, 1, "", "get_instance_seed_budget_keys"], [95, 2, 1, "", "get_min_cost"], [95, 2, 1, "", "get_running_configs"], [95, 2, 1, "", "get_running_trials"], [95, 2, 1, "", "get_trials"], [95, 3, 1, "", "ids_config"], [95, 2, 1, "", "incremental_update_cost"], [95, 2, 1, "", "load"], [95, 2, 1, "", "min_cost"], [95, 3, 1, "", "multi_objective_algorithm"], [95, 3, 1, "", "objective_bounds"], [95, 2, 1, "", "reset"], [95, 3, 1, "", "running"], [95, 2, 1, "", "save"], [95, 3, 1, "", "submitted"], [95, 2, 1, "", "sum_cost"], [95, 2, 1, "", "update"], [95, 2, 1, "", "update_cost"], [95, 2, 1, "", "update_costs"], [95, 2, 1, "", "update_from_json"]], "smac.runhistory.TrialInfo": [[95, 2, 1, "", "get_instance_seed_budget_key"], [95, 2, 1, "", "get_instance_seed_key"]], "smac.runhistory.dataclasses": [[96, 1, 1, "", "InstanceSeedBudgetKey"], [96, 1, 1, "", "InstanceSeedKey"], [96, 1, 1, "", "TrajectoryItem"], [96, 1, 1, "", "TrialInfo"], [96, 1, 1, "", "TrialKey"], [96, 1, 1, "", "TrialValue"]], "smac.runhistory.dataclasses.InstanceSeedBudgetKey": [[96, 2, 1, "", "get_instance_seed_key"]], "smac.runhistory.dataclasses.TrialInfo": [[96, 2, 1, "", "get_instance_seed_budget_key"], [96, 2, 1, "", "get_instance_seed_key"]], "smac.runhistory.encoder": [[97, 1, 1, "", "AbstractRunHistoryEncoder"], [97, 1, 1, "", "RunHistoryEIPSEncoder"], [97, 1, 1, "", "RunHistoryEncoder"], [97, 1, 1, "", "RunHistoryInverseScaledEncoder"], [97, 1, 1, "", "RunHistoryLogEncoder"], [97, 1, 1, "", "RunHistoryLogScaledEncoder"], [97, 1, 1, "", "RunHistoryScaledEncoder"], [97, 1, 1, "", "RunHistorySqrtScaledEncoder"], [98, 0, 0, "-", "abstract_encoder"], [99, 0, 0, "-", "boing_encoder"], [100, 0, 0, "-", "eips_encoder"], [101, 0, 0, "-", "encoder"], [102, 0, 0, "-", "inverse_scaled_encoder"], [103, 0, 0, "-", "log_encoder"], [104, 0, 0, "-", "log_scaled_encoder"], [105, 0, 0, "-", "scaled_encoder"], [106, 0, 0, "-", "sqrt_scaled_encoder"]], "smac.runhistory.encoder.AbstractRunHistoryEncoder": [[97, 2, 1, "", "get_configurations"], [97, 3, 1, "", "meta"], [97, 3, 1, "", "multi_objective_algorithm"], [97, 3, 1, "", "runhistory"], [97, 2, 1, "", "transform"], [97, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryEIPSEncoder": [[97, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryEncoder": [[97, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryInverseScaledEncoder": [[97, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryLogEncoder": [[97, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryLogScaledEncoder": [[97, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryScaledEncoder": [[97, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistorySqrtScaledEncoder": [[97, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.abstract_encoder": [[98, 1, 1, "", "AbstractRunHistoryEncoder"]], "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder": [[98, 2, 1, "", "get_configurations"], [98, 3, 1, "", "meta"], [98, 3, 1, "", "multi_objective_algorithm"], [98, 3, 1, "", "runhistory"], [98, 2, 1, "", "transform"], [98, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.eips_encoder": [[100, 1, 1, "", "RunHistoryEIPSEncoder"]], "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder": [[100, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.encoder": [[101, 1, 1, "", "RunHistoryEncoder"]], "smac.runhistory.encoder.encoder.RunHistoryEncoder": [[101, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[102, 1, 1, "", "RunHistoryInverseScaledEncoder"]], "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder": [[102, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.log_encoder": [[103, 1, 1, "", "RunHistoryLogEncoder"]], "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder": [[103, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.log_scaled_encoder": [[104, 1, 1, "", "RunHistoryLogScaledEncoder"]], "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder": [[104, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.scaled_encoder": [[105, 1, 1, "", "RunHistoryScaledEncoder"]], "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder": [[105, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[106, 1, 1, "", "RunHistorySqrtScaledEncoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder": [[106, 2, 1, "", "transform_response_values"]], "smac.runhistory.enumerations": [[107, 1, 1, "", "StatusType"]], "smac.runhistory.errors": [[108, 5, 1, "", "NotEvaluatedError"]], "smac.runhistory.runhistory": [[109, 1, 1, "", "RunHistory"]], "smac.runhistory.runhistory.RunHistory": [[109, 2, 1, "", "__contains__"], [109, 2, 1, "", "__eq__"], [109, 2, 1, "", "__getitem__"], [109, 2, 1, "", "__iter__"], [109, 2, 1, "", "__len__"], [109, 2, 1, "", "add"], [109, 2, 1, "", "add_running_trial"], [109, 2, 1, "", "add_trial"], [109, 2, 1, "", "average_cost"], [109, 3, 1, "", "config_ids"], [109, 2, 1, "", "empty"], [109, 3, 1, "", "finished"], [109, 2, 1, "", "get_config"], [109, 2, 1, "", "get_config_id"], [109, 2, 1, "", "get_configs"], [109, 2, 1, "", "get_configs_per_budget"], [109, 2, 1, "", "get_cost"], [109, 2, 1, "", "get_instance_seed_budget_keys"], [109, 2, 1, "", "get_min_cost"], [109, 2, 1, "", "get_running_configs"], [109, 2, 1, "", "get_running_trials"], [109, 2, 1, "", "get_trials"], [109, 3, 1, "", "ids_config"], [109, 2, 1, "", "incremental_update_cost"], [109, 2, 1, "", "load"], [109, 2, 1, "", "min_cost"], [109, 3, 1, "", "multi_objective_algorithm"], [109, 3, 1, "", "objective_bounds"], [109, 2, 1, "", "reset"], [109, 3, 1, "", "running"], [109, 2, 1, "", "save"], [109, 3, 1, "", "submitted"], [109, 2, 1, "", "sum_cost"], [109, 2, 1, "", "update"], [109, 2, 1, "", "update_cost"], [109, 2, 1, "", "update_costs"], [109, 2, 1, "", "update_from_json"]], "smac.runner": [[110, 1, 1, "", "AbstractRunner"], [110, 1, 1, "", "DaskParallelRunner"], [110, 5, 1, "", "FirstRunCrashedException"], [110, 5, 1, "", "TargetAlgorithmAbortException"], [110, 1, 1, "", "TargetFunctionRunner"], [111, 0, 0, "-", "abstract_runner"], [112, 0, 0, "-", "abstract_serial_runner"], [113, 0, 0, "-", "dask_runner"], [114, 0, 0, "-", "exceptions"], [115, 0, 0, "-", "target_function_runner"], [116, 0, 0, "-", "target_function_script_runner"]], "smac.runner.AbstractRunner": [[110, 2, 1, "", "count_available_workers"], [110, 2, 1, "", "is_running"], [110, 2, 1, "", "iter_results"], [110, 3, 1, "", "meta"], [110, 2, 1, "", "run"], [110, 2, 1, "", "run_wrapper"], [110, 2, 1, "", "submit_trial"], [110, 2, 1, "", "wait"]], "smac.runner.DaskParallelRunner": [[110, 2, 1, "", "__del__"], [110, 2, 1, "", "close"], [110, 2, 1, "", "count_available_workers"], [110, 2, 1, "", "is_running"], [110, 2, 1, "", "iter_results"], [110, 2, 1, "", "run"], [110, 2, 1, "", "submit_trial"], [110, 2, 1, "", "wait"]], "smac.runner.TargetFunctionRunner": [[110, 2, 1, "", "__call__"], [110, 3, 1, "", "meta"], [110, 2, 1, "", "run"]], "smac.runner.abstract_runner": [[111, 1, 1, "", "AbstractRunner"]], "smac.runner.abstract_runner.AbstractRunner": [[111, 2, 1, "", "count_available_workers"], [111, 2, 1, "", "is_running"], [111, 2, 1, "", "iter_results"], [111, 3, 1, "", "meta"], [111, 2, 1, "", "run"], [111, 2, 1, "", "run_wrapper"], [111, 2, 1, "", "submit_trial"], [111, 2, 1, "", "wait"]], "smac.runner.abstract_serial_runner": [[112, 1, 1, "", "AbstractSerialRunner"]], "smac.runner.abstract_serial_runner.AbstractSerialRunner": [[112, 2, 1, "", "count_available_workers"], [112, 2, 1, "", "is_running"], [112, 2, 1, "", "iter_results"], [112, 2, 1, "", "submit_trial"], [112, 2, 1, "", "wait"]], "smac.runner.dask_runner": [[113, 1, 1, "", "DaskParallelRunner"]], "smac.runner.dask_runner.DaskParallelRunner": [[113, 2, 1, "", "__del__"], [113, 2, 1, "", "close"], [113, 2, 1, "", "count_available_workers"], [113, 2, 1, "", "is_running"], [113, 2, 1, "", "iter_results"], [113, 2, 1, "", "run"], [113, 2, 1, "", "submit_trial"], [113, 2, 1, "", "wait"]], "smac.runner.exceptions": [[114, 5, 1, "", "FirstRunCrashedException"], [114, 5, 1, "", "TargetAlgorithmAbortException"]], "smac.runner.target_function_runner": [[115, 1, 1, "", "TargetFunctionRunner"]], "smac.runner.target_function_runner.TargetFunctionRunner": [[115, 2, 1, "", "__call__"], [115, 3, 1, "", "meta"], [115, 2, 1, "", "run"]], "smac.runner.target_function_script_runner": [[116, 1, 1, "", "TargetFunctionScriptRunner"]], "smac.runner.target_function_script_runner.TargetFunctionScriptRunner": [[116, 2, 1, "", "__call__"], [116, 3, 1, "", "meta"], [116, 2, 1, "", "run"]], "smac.scenario": [[117, 1, 1, "", "Scenario"]], "smac.scenario.Scenario": [[117, 2, 1, "", "__post_init__"], [117, 2, 1, "", "count_instance_features"], [117, 2, 1, "", "count_objectives"], [117, 2, 1, "", "load"], [117, 2, 1, "", "make_serializable"], [117, 3, 1, "", "meta"], [117, 2, 1, "", "save"]], "smac.utils": [[119, 0, 0, "-", "configspace"], [120, 0, 0, "-", "data_structures"], [121, 0, 0, "-", "logging"], [122, 0, 0, "-", "multi_objective"], [123, 0, 0, "-", "pareto_front"], [124, 0, 0, "-", "subspaces"]], "smac.utils.configspace": [[119, 6, 1, "", "convert_configurations_to_array"], [119, 6, 1, "", "get_conditional_hyperparameters"], [119, 6, 1, "", "get_config_hash"], [119, 6, 1, "", "get_types"], [119, 6, 1, "", "print_config_changes"]], "smac.utils.data_structures": [[120, 6, 1, "", "batch"], [120, 6, 1, "", "recursively_compare_dicts"]], "smac.utils.logging": [[121, 6, 1, "", "get_logger"], [121, 6, 1, "", "setup_logging"]], "smac.utils.multi_objective": [[122, 6, 1, "", "normalize_costs"]], "smac.utils.pareto_front": [[123, 6, 1, "", "calculate_pareto_front"], [123, 6, 1, "", "sort_by_crowding_distance"]], "smac.utils.subspaces": [[125, 0, 0, "-", "boing_subspace"], [126, 0, 0, "-", "turbo_subspace"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:exception", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "titleterms": {"instal": 0, "requir": 0, "anaconda": 0, "conda": 0, "forg": 0, "packag": 1, "overview": [1, 147], "featur": 1, "comparison": 1, "get": 2, "start": [2, 17], "configur": [2, 12], "space": 2, "target": [2, 17, 143], "function": [2, 12, 17, 23, 24, 25, 26, 27, 28, 29, 30, 119, 120, 121, 122, 123, 127, 139, 143], "scenario": [2, 117], "facad": [2, 39, 40, 41, 42, 43, 44, 45, 46], "minim": 3, "exampl": [3, 146], "api": 4, "refer": [4, 5], "glossari": 6, "f": 7, "A": 7, "q": 7, "licens": 8, "continu": [9, 131], "reproduc": 10, "optim": [11, 13, 14, 15, 17, 131], "compon": 12, "surrog": 12, "model": [12, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "acquisit": [12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "maxim": [12, 31, 32, 33, 34, 35, 36, 37], "initi": 12, "design": 12, "random": 12, "intensifi": [12, 54, 55, 56, 57, 58], "selector": 12, "multi": [12, 13, 14, 135, 137, 141, 146], "object": [12, 14, 139, 141, 146], "algorithm": 12, "runhistori": [12, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "encod": [12, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "callback": [12, 38, 130], "fidel": [13, 137, 146], "across": 15, "instanc": [15, 137, 146], "ask": [16, 129], "tell": [16, 129], "interfac": [16, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 144, 146], "command": [17, 144, 146], "line": [17, 144, 146], "call": [17, 143], "return": 17, "stop": 18, "criteria": 18, "termin": 18, "cost": 18, "threshold": 18, "automat": 18, "log": [19, 121], "level": 19, "custom": [19, 130], "file": 19, "parallel": 20, "advanc": 21, "usag": 21, "navig": 21, "smac": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "modul": [22, 23, 31, 39, 47, 54, 59, 62, 64, 68, 75, 82, 86, 90, 95, 97, 110, 118, 124], "abstract_acquisition_funct": 24, "class": [24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 60, 61, 63, 65, 66, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 115, 116, 117], "confidence_bound": 25, "expected_improv": 26, "integrated_acquisition_funct": 27, "prior_acqusition_funct": 28, "probability_improv": 29, "thompson": 30, "abstract_acqusition_maxim": 32, "differential_evolut": 33, "helper": 34, "local_and_random_search": 35, "local_search": 36, "random_search": 37, "abstract_facad": 40, "algorithm_configuration_facad": 41, "blackbox_facad": 42, "hyperband_facad": 43, "hyperparameter_optimization_facad": 44, "multi_fidelity_facad": 45, "random_facad": 46, "initial_design": [47, 48, 49, 50, 51, 52, 53], "abstract_initial_design": 48, "default_design": 49, "factorial_design": 50, "latin_hypercube_design": 51, "random_design": [52, 90, 91, 92, 93, 94], "sobol_design": 53, "abstract_intensifi": 55, "hyperband": 56, "successive_halv": 58, "main": [59, 60, 61], "config_selector": 60, "smbo": 61, "abstract_model": 63, "gaussian_process": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "abstract_gaussian_process": 65, "gpytorch_gaussian_process": 67, "kernel": [68, 69, 70, 71, 72, 73], "base_kernel": 69, "hamming_kernel": 70, "matern_kernel": 71, "rbf_kernel": 72, "white_kernel": 73, "mcmc_gaussian_process": 74, "prior": [75, 76, 77, 78, 79, 80, 132], "abstract_prior": 76, "gamma_prior": 77, "horseshoe_prior": 78, "log_normal_prior": 79, "tophat_prior": 80, "multi_objective_model": 81, "random_forest": [82, 83, 84], "abstract_random_forest": 83, "random_model": 85, "multi_object": [86, 87, 88, 89, 122], "abstract_multi_objective_algorithm": 87, "aggregation_strategi": 88, "parego": [89, 140], "abstract_random_design": 91, "annealing_design": 92, "modulus_design": 93, "probability_design": 94, "dataclass": 96, "abstract_encod": 98, "boing_encod": 99, "eips_encod": 100, "inverse_scaled_encod": 102, "log_encod": 103, "log_scaled_encod": 104, "scaled_encod": 105, "sqrt_scaled_encod": 106, "enumer": 107, "error": 108, "except": [108, 114], "runner": [110, 111, 112, 113, 114, 115, 116], "abstract_runn": 111, "abstract_serial_runn": 112, "dask_runn": 113, "target_function_runn": 115, "target_function_script_runn": 116, "util": [118, 119, 120, 121, 122, 123, 124, 125, 126], "configspac": 119, "data_structur": 120, "pareto_front": 123, "subspac": [124, 125, 126], "boing_subspac": 125, "turbo_subspac": 126, "quadrat": 127, "support": 128, "vector": 128, "machin": 128, "cross": 128, "valid": 128, "an": 131, "user": 132, "over": 132, "optimum": 132, "basic": [133, 146], "comput": [134, 138, 142, 145], "time": [134, 138, 142, 145], "layer": 135, "perceptron": 135, "us": 135, "multipl": [135, 136], "epoch": 135, "stochast": 136, "gradient": 136, "descent": 136, "On": 136, "dataset": 136, "2d": 139, "schaffer": 139, "weight": 139, "from": 143, "script": 143, "figur": 147, "home": 148, "contact": 148}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Installation": [[0, "installation"]], "Requirements": [[0, "requirements"]], "Anaconda": [[0, "anaconda"]], "Conda-forge": [[0, "conda-forge"]], "Package Overview": [[1, "package-overview"]], "Features": [[1, "features"]], "Comparison": [[1, "comparison"]], "Getting Started": [[2, "getting-started"]], "Configuration Space": [[2, "configuration-space"]], "Target Function": [[2, "target-function"]], "Scenario": [[2, "scenario"]], "Facade": [[2, "facade"]], "Minimal Example": [[3, "minimal-example"]], "API References": [[4, "api-references"]], "References": [[5, "references"]], "Glossary": [[6, "glossary"]], "F.A.Q.": [[7, "f-a-q"]], "License": [[8, "license"]], "Continue": [[9, "continue"]], "Reproducibility": [[10, "reproducibility"]], "Optimizations": [[11, "optimizations"]], "Components": [[12, "components"]], "Surrogate Model": [[12, "surrogate-model"]], "Acquisition Function": [[12, "acquisition-function"]], "Acquisition Maximizer": [[12, "acquisition-maximizer"]], "Initial Design": [[12, "initial-design"]], "Random Design": [[12, "random-design"]], "Intensifier": [[12, "intensifier"]], "Configuration Selector": [[12, "configuration-selector"]], "Multi-Objective Algorithm": [[12, "multi-objective-algorithm"]], "RunHistory": [[12, "runhistory"]], "RunHistory Encoder": [[12, "runhistory-encoder"]], "Callback": [[12, "callback"]], "Multi-Fidelity Optimization": [[13, "multi-fidelity-optimization"]], "Multi-Objective Optimization": [[14, "multi-objective-optimization"]], "Optimization across Instances": [[15, "optimization-across-instances"]], "Ask-and-Tell Interface": [[16, "ask-and-tell-interface"]], "Command-Line Interface": [[17, "command-line-interface"], [144, "command-line-interface"], [146, "command-line-interface"]], "Call of the Target Function": [[17, "call-of-the-target-function"]], "Return of the Target Function": [[17, "return-of-the-target-function"]], "Start the Optimization": [[17, "start-the-optimization"]], "Stopping Criteria": [[18, "stopping-criteria"]], "Termination Cost Threshold": [[18, "termination-cost-threshold"]], "Automatically Stopping": [[18, "automatically-stopping"]], "Logging": [[19, "logging"]], "Level": [[19, "level"]], "Custom File": [[19, "custom-file"]], "Parallelism": [[20, "parallelism"]], "Advanced Usage": [[21, "advanced-usage"]], "Navigation": [[21, "navigation"]], "smac.acquisition": [[22, "module-smac.acquisition"]], "Interfaces": [[22, "interfaces"], [23, "interfaces"], [24, "interfaces"], [25, "interfaces"], [26, "interfaces"], [27, "interfaces"], [28, "interfaces"], [29, "interfaces"], [30, "interfaces"], [31, "interfaces"], [32, "interfaces"], [33, "interfaces"], [34, "interfaces"], [35, "interfaces"], [36, "interfaces"], [37, "interfaces"], [38, "interfaces"], [39, "interfaces"], [40, "interfaces"], [41, "interfaces"], [42, "interfaces"], [43, "interfaces"], [44, "interfaces"], [45, "interfaces"], [46, "interfaces"], [47, "interfaces"], [48, "interfaces"], [49, "interfaces"], [50, "interfaces"], [51, "interfaces"], [52, "interfaces"], [53, "interfaces"], [54, "interfaces"], [55, "interfaces"], [56, "interfaces"], [57, "interfaces"], [58, "interfaces"], [59, "interfaces"], [60, "interfaces"], [61, "interfaces"], [62, "interfaces"], [63, "interfaces"], [64, "interfaces"], [65, "interfaces"], [66, "interfaces"], [67, "interfaces"], [68, "interfaces"], [69, "interfaces"], [70, "interfaces"], [71, "interfaces"], [72, "interfaces"], [73, "interfaces"], [74, "interfaces"], [75, "interfaces"], [76, "interfaces"], [77, "interfaces"], [78, "interfaces"], [79, "interfaces"], [80, "interfaces"], [81, "interfaces"], [82, "interfaces"], [83, "interfaces"], [84, "interfaces"], [85, "interfaces"], [86, "interfaces"], [87, "interfaces"], [88, "interfaces"], [89, "interfaces"], [90, "interfaces"], [91, "interfaces"], [92, "interfaces"], [93, "interfaces"], [94, "interfaces"], [95, "interfaces"], [96, "interfaces"], [97, "interfaces"], [98, "interfaces"], [99, "interfaces"], [100, "interfaces"], [101, "interfaces"], [102, "interfaces"], [103, "interfaces"], [104, "interfaces"], [105, "interfaces"], [106, "interfaces"], [107, "interfaces"], [108, "interfaces"], [109, "interfaces"], [110, "interfaces"], [111, "interfaces"], [112, "interfaces"], [113, "interfaces"], [114, "interfaces"], [115, "interfaces"], [116, "interfaces"], [117, "interfaces"], [118, "interfaces"], [119, "interfaces"], [120, "interfaces"], [121, "interfaces"], [122, "interfaces"], [123, "interfaces"], [124, "interfaces"], [125, "interfaces"], [126, "interfaces"]], "Modules": [[22, "modules"], [23, "modules"], [31, "modules"], [39, "modules"], [47, "modules"], [54, "modules"], [59, "modules"], [62, "modules"], [64, "modules"], [68, "modules"], [75, "modules"], [82, "modules"], [86, "modules"], [90, "modules"], [95, "modules"], [97, "modules"], [110, "modules"], [118, "modules"], [124, "modules"]], "smac.acquisition.function": [[23, "module-smac.acquisition.function"]], "smac.acquisition.function.abstract_acquisition_function": [[24, "module-smac.acquisition.function.abstract_acquisition_function"]], "Classes": [[24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [55, "classes"], [56, "classes"], [57, "classes"], [58, "classes"], [60, "classes"], [61, "classes"], [63, "classes"], [65, "classes"], [66, "classes"], [69, "classes"], [70, "classes"], [71, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [87, "classes"], [88, "classes"], [89, "classes"], [91, "classes"], [92, "classes"], [93, "classes"], [94, "classes"], [96, "classes"], [98, "classes"], [100, "classes"], [101, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [109, "classes"], [111, "classes"], [112, "classes"], [113, "classes"], [115, "classes"], [116, "classes"], [117, "classes"]], "smac.acquisition.function.confidence_bound": [[25, "module-smac.acquisition.function.confidence_bound"]], "smac.acquisition.function.expected_improvement": [[26, "module-smac.acquisition.function.expected_improvement"]], "smac.acquisition.function.integrated_acquisition_function": [[27, "module-smac.acquisition.function.integrated_acquisition_function"]], "smac.acquisition.function.prior_acqusition_function": [[28, "module-smac.acquisition.function.prior_acqusition_function"]], "smac.acquisition.function.probability_improvement": [[29, "module-smac.acquisition.function.probability_improvement"]], "smac.acquisition.function.thompson": [[30, "module-smac.acquisition.function.thompson"]], "smac.acquisition.maximizer": [[31, "module-smac.acquisition.maximizer"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer": [[32, "module-smac.acquisition.maximizer.abstract_acqusition_maximizer"]], "smac.acquisition.maximizer.differential_evolution": [[33, "module-smac.acquisition.maximizer.differential_evolution"]], "smac.acquisition.maximizer.helpers": [[34, "module-smac.acquisition.maximizer.helpers"]], "smac.acquisition.maximizer.local_and_random_search": [[35, "module-smac.acquisition.maximizer.local_and_random_search"]], "smac.acquisition.maximizer.local_search": [[36, "module-smac.acquisition.maximizer.local_search"]], "smac.acquisition.maximizer.random_search": [[37, "module-smac.acquisition.maximizer.random_search"]], "smac.callback": [[38, "module-smac.callback"]], "smac.facade": [[39, "module-smac.facade"]], "smac.facade.abstract_facade": [[40, "module-smac.facade.abstract_facade"]], "smac.facade.algorithm_configuration_facade": [[41, "module-smac.facade.algorithm_configuration_facade"]], "smac.facade.blackbox_facade": [[42, "module-smac.facade.blackbox_facade"]], "smac.facade.hyperband_facade": [[43, "module-smac.facade.hyperband_facade"]], "smac.facade.hyperparameter_optimization_facade": [[44, "module-smac.facade.hyperparameter_optimization_facade"]], "smac.facade.multi_fidelity_facade": [[45, "module-smac.facade.multi_fidelity_facade"]], "smac.facade.random_facade": [[46, "module-smac.facade.random_facade"]], "smac.initial_design": [[47, "module-smac.initial_design"]], "smac.initial_design.abstract_initial_design": [[48, "module-smac.initial_design.abstract_initial_design"]], "smac.initial_design.default_design": [[49, "module-smac.initial_design.default_design"]], "smac.initial_design.factorial_design": [[50, "module-smac.initial_design.factorial_design"]], "smac.initial_design.latin_hypercube_design": [[51, "module-smac.initial_design.latin_hypercube_design"]], "smac.initial_design.random_design": [[52, "module-smac.initial_design.random_design"]], "smac.initial_design.sobol_design": [[53, "module-smac.initial_design.sobol_design"]], "smac.intensifier": [[54, "module-smac.intensifier"]], "smac.intensifier.abstract_intensifier": [[55, "module-smac.intensifier.abstract_intensifier"]], "smac.intensifier.hyperband": [[56, "module-smac.intensifier.hyperband"]], "smac.intensifier.intensifier": [[57, "module-smac.intensifier.intensifier"]], "smac.intensifier.successive_halving": [[58, "module-smac.intensifier.successive_halving"]], "smac.main": [[59, "module-smac.main"]], "smac.main.config_selector": [[60, "module-smac.main.config_selector"]], "smac.main.smbo": [[61, "module-smac.main.smbo"]], "smac.model": [[62, "module-smac.model"]], "smac.model.abstract_model": [[63, "module-smac.model.abstract_model"]], "smac.model.gaussian_process": [[64, "module-smac.model.gaussian_process"]], "smac.model.gaussian_process.abstract_gaussian_process": [[65, "module-smac.model.gaussian_process.abstract_gaussian_process"]], "smac.model.gaussian_process.gaussian_process": [[66, "module-smac.model.gaussian_process.gaussian_process"]], "smac.model.gaussian_process.gpytorch_gaussian_process": [[67, "module-smac.model.gaussian_process.gpytorch_gaussian_process"]], "smac.model.gaussian_process.kernels": [[68, "module-smac.model.gaussian_process.kernels"]], "smac.model.gaussian_process.kernels.base_kernels": [[69, "module-smac.model.gaussian_process.kernels.base_kernels"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[70, "module-smac.model.gaussian_process.kernels.hamming_kernel"]], "smac.model.gaussian_process.kernels.matern_kernel": [[71, "module-smac.model.gaussian_process.kernels.matern_kernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[72, "module-smac.model.gaussian_process.kernels.rbf_kernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[73, "module-smac.model.gaussian_process.kernels.white_kernel"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[74, "module-smac.model.gaussian_process.mcmc_gaussian_process"]], "smac.model.gaussian_process.priors": [[75, "module-smac.model.gaussian_process.priors"]], "smac.model.gaussian_process.priors.abstract_prior": [[76, "module-smac.model.gaussian_process.priors.abstract_prior"]], "smac.model.gaussian_process.priors.gamma_prior": [[77, "module-smac.model.gaussian_process.priors.gamma_prior"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[78, "module-smac.model.gaussian_process.priors.horseshoe_prior"]], "smac.model.gaussian_process.priors.log_normal_prior": [[79, "module-smac.model.gaussian_process.priors.log_normal_prior"]], "smac.model.gaussian_process.priors.tophat_prior": [[80, "module-smac.model.gaussian_process.priors.tophat_prior"]], "smac.model.multi_objective_model": [[81, "module-smac.model.multi_objective_model"]], "smac.model.random_forest": [[82, "module-smac.model.random_forest"]], "smac.model.random_forest.abstract_random_forest": [[83, "module-smac.model.random_forest.abstract_random_forest"]], "smac.model.random_forest.random_forest": [[84, "module-smac.model.random_forest.random_forest"]], "smac.model.random_model": [[85, "module-smac.model.random_model"]], "smac.multi_objective": [[86, "module-smac.multi_objective"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[87, "module-smac.multi_objective.abstract_multi_objective_algorithm"]], "smac.multi_objective.aggregation_strategy": [[88, "module-smac.multi_objective.aggregation_strategy"]], "smac.multi_objective.parego": [[89, "module-smac.multi_objective.parego"]], "smac.random_design": [[90, "module-smac.random_design"]], "smac.random_design.abstract_random_design": [[91, "module-smac.random_design.abstract_random_design"]], "smac.random_design.annealing_design": [[92, "module-smac.random_design.annealing_design"]], "smac.random_design.modulus_design": [[93, "module-smac.random_design.modulus_design"]], "smac.random_design.probability_design": [[94, "module-smac.random_design.probability_design"]], "smac.runhistory": [[95, "module-smac.runhistory"]], "smac.runhistory.dataclasses": [[96, "module-smac.runhistory.dataclasses"]], "smac.runhistory.encoder": [[97, "module-smac.runhistory.encoder"]], "smac.runhistory.encoder.abstract_encoder": [[98, "module-smac.runhistory.encoder.abstract_encoder"]], "smac.runhistory.encoder.boing_encoder": [[99, "module-smac.runhistory.encoder.boing_encoder"]], "smac.runhistory.encoder.eips_encoder": [[100, "module-smac.runhistory.encoder.eips_encoder"]], "smac.runhistory.encoder.encoder": [[101, "module-smac.runhistory.encoder.encoder"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[102, "module-smac.runhistory.encoder.inverse_scaled_encoder"]], "smac.runhistory.encoder.log_encoder": [[103, "module-smac.runhistory.encoder.log_encoder"]], "smac.runhistory.encoder.log_scaled_encoder": [[104, "module-smac.runhistory.encoder.log_scaled_encoder"]], "smac.runhistory.encoder.scaled_encoder": [[105, "module-smac.runhistory.encoder.scaled_encoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[106, "module-smac.runhistory.encoder.sqrt_scaled_encoder"]], "smac.runhistory.enumerations": [[107, "module-smac.runhistory.enumerations"]], "smac.runhistory.errors": [[108, "module-smac.runhistory.errors"]], "Exceptions": [[108, "exceptions"], [114, "exceptions"]], "smac.runhistory.runhistory": [[109, "module-smac.runhistory.runhistory"]], "smac.runner": [[110, "module-smac.runner"]], "smac.runner.abstract_runner": [[111, "module-smac.runner.abstract_runner"]], "smac.runner.abstract_serial_runner": [[112, "module-smac.runner.abstract_serial_runner"]], "smac.runner.dask_runner": [[113, "module-smac.runner.dask_runner"]], "smac.runner.exceptions": [[114, "module-smac.runner.exceptions"]], "smac.runner.target_function_runner": [[115, "module-smac.runner.target_function_runner"]], "smac.runner.target_function_script_runner": [[116, "module-smac.runner.target_function_script_runner"]], "smac.scenario": [[117, "module-smac.scenario"]], "smac.utils": [[118, "module-smac.utils"]], "smac.utils.configspace": [[119, "module-smac.utils.configspace"]], "Functions": [[119, "functions"], [120, "functions"], [121, "functions"], [122, "functions"], [123, "functions"]], "smac.utils.data_structures": [[120, "module-smac.utils.data_structures"]], "smac.utils.logging": [[121, "module-smac.utils.logging"]], "smac.utils.multi_objective": [[122, "module-smac.utils.multi_objective"]], "smac.utils.pareto_front": [[123, "module-smac.utils.pareto_front"]], "smac.utils.subspaces": [[124, "module-smac.utils.subspaces"]], "smac.utils.subspaces.boing_subspace": [[125, "module-smac.utils.subspaces.boing_subspace"]], "smac.utils.subspaces.turbo_subspace": [[126, "module-smac.utils.subspaces.turbo_subspace"]], "Quadratic Function": [[127, "quadratic-function"]], "Support Vector Machine with Cross-Validation": [[128, "support-vector-machine-with-cross-validation"]], "Ask-and-Tell": [[129, "ask-and-tell"]], "Custom Callback": [[130, "custom-callback"]], "Continue an Optimization": [[131, "continue-an-optimization"]], "User Priors over the Optimum": [[132, "user-priors-over-the-optimum"]], "Basics": [[133, "basics"], [146, "basics"]], "Computation times": [[134, "computation-times"], [138, "computation-times"], [142, "computation-times"], [145, "computation-times"]], "Multi-Layer Perceptron Using Multiple Epochs": [[135, "multi-layer-perceptron-using-multiple-epochs"]], "Stochastic Gradient Descent On Multiple Datasets": [[136, "stochastic-gradient-descent-on-multiple-datasets"]], "Multi-Fidelity and Multi-Instances": [[137, "multi-fidelity-and-multi-instances"], [146, "multi-fidelity-and-multi-instances"]], "2D Schaffer Function with Objective Weights": [[139, "d-schaffer-function-with-objective-weights"]], "ParEGO": [[140, "parego"]], "Multi-Objective": [[141, "multi-objective"], [146, "multi-objective"]], "Call Target Function From Script": [[143, "call-target-function-from-script"]], "Examples": [[146, "examples"]], "Overview Figure": [[147, "overview-figure"]], "Home": [[148, "home"]], "Contact": [[148, "contact"]]}, "indexentries": {"bb": [[6, "term-BB"]], "bo": [[6, "term-BO"]], "bohb": [[6, "term-BOHB"]], "bayesian optimization": [[6, "term-Bayesian-Optimization"]], "black-box": [[6, "term-Black-Box"]], "budget": [[6, "term-Budget"]], "cli": [[6, "term-CLI"]], "cv": [[6, "term-CV"]], "gp": [[6, "term-GP"]], "gp-mcmc": [[6, "term-GP-MCMC"]], "hb": [[6, "term-HB"]], "hp": [[6, "term-HP"]], "hyperband": [[6, "term-Hyperband"]], "incumbent": [[6, "term-Incumbent"]], "instances": [[6, "term-Instances"]], "intensification": [[6, "term-Intensification"]], "mf": [[6, "term-MF"]], "multi-fidelity": [[6, "term-Multi-Fidelity"]], "multi-objective": [[6, "term-Multi-Objective"]], "objective": [[6, "term-Objective"]], "rf": [[6, "term-RF"]], "roar": [[6, "term-ROAR"]], "random online adaptive racing": [[6, "term-Random-Online-Adaptive-Racing"]], "smac": [[6, "term-SMAC"]], "smbo": [[6, "term-SMBO"]], "target function": [[6, "term-Target-Function"]], "trial": [[6, "term-Trial"]], "module": [[22, "module-smac.acquisition"], [23, "module-smac.acquisition.function"], [24, "module-smac.acquisition.function.abstract_acquisition_function"], [25, "module-smac.acquisition.function.confidence_bound"], [26, "module-smac.acquisition.function.expected_improvement"], [27, "module-smac.acquisition.function.integrated_acquisition_function"], [28, "module-smac.acquisition.function.prior_acqusition_function"], [29, "module-smac.acquisition.function.probability_improvement"], [30, "module-smac.acquisition.function.thompson"], [31, "module-smac.acquisition.maximizer"], [32, "module-smac.acquisition.maximizer.abstract_acqusition_maximizer"], [33, "module-smac.acquisition.maximizer.differential_evolution"], [34, "module-smac.acquisition.maximizer.helpers"], [35, "module-smac.acquisition.maximizer.local_and_random_search"], [36, "module-smac.acquisition.maximizer.local_search"], [37, "module-smac.acquisition.maximizer.random_search"], [38, "module-smac.callback"], [39, "module-smac.facade"], [40, "module-smac.facade.abstract_facade"], [41, "module-smac.facade.algorithm_configuration_facade"], [42, "module-smac.facade.blackbox_facade"], [43, "module-smac.facade.hyperband_facade"], [44, "module-smac.facade.hyperparameter_optimization_facade"], [45, "module-smac.facade.multi_fidelity_facade"], [46, "module-smac.facade.random_facade"], [47, "module-smac.initial_design"], [48, "module-smac.initial_design.abstract_initial_design"], [49, "module-smac.initial_design.default_design"], [50, "module-smac.initial_design.factorial_design"], [51, "module-smac.initial_design.latin_hypercube_design"], [52, "module-smac.initial_design.random_design"], [53, "module-smac.initial_design.sobol_design"], [54, "module-smac.intensifier"], [55, "module-smac.intensifier.abstract_intensifier"], [56, "module-smac.intensifier.hyperband"], [57, "module-smac.intensifier.intensifier"], [58, "module-smac.intensifier.successive_halving"], [59, "module-smac.main"], [60, "module-smac.main.config_selector"], [61, "module-smac.main.smbo"], [62, "module-smac.model"], [63, "module-smac.model.abstract_model"], [64, "module-smac.model.gaussian_process"], [65, "module-smac.model.gaussian_process.abstract_gaussian_process"], [66, "module-smac.model.gaussian_process.gaussian_process"], [67, "module-smac.model.gaussian_process.gpytorch_gaussian_process"], [68, "module-smac.model.gaussian_process.kernels"], [69, "module-smac.model.gaussian_process.kernels.base_kernels"], [70, "module-smac.model.gaussian_process.kernels.hamming_kernel"], [71, "module-smac.model.gaussian_process.kernels.matern_kernel"], [72, "module-smac.model.gaussian_process.kernels.rbf_kernel"], [73, "module-smac.model.gaussian_process.kernels.white_kernel"], [74, "module-smac.model.gaussian_process.mcmc_gaussian_process"], [75, "module-smac.model.gaussian_process.priors"], [76, "module-smac.model.gaussian_process.priors.abstract_prior"], [77, "module-smac.model.gaussian_process.priors.gamma_prior"], [78, "module-smac.model.gaussian_process.priors.horseshoe_prior"], [79, "module-smac.model.gaussian_process.priors.log_normal_prior"], [80, "module-smac.model.gaussian_process.priors.tophat_prior"], [81, "module-smac.model.multi_objective_model"], [82, "module-smac.model.random_forest"], [83, "module-smac.model.random_forest.abstract_random_forest"], [84, "module-smac.model.random_forest.random_forest"], [85, "module-smac.model.random_model"], [86, "module-smac.multi_objective"], [87, "module-smac.multi_objective.abstract_multi_objective_algorithm"], [88, "module-smac.multi_objective.aggregation_strategy"], [89, "module-smac.multi_objective.parego"], [90, "module-smac.random_design"], [91, "module-smac.random_design.abstract_random_design"], [92, "module-smac.random_design.annealing_design"], [93, "module-smac.random_design.modulus_design"], [94, "module-smac.random_design.probability_design"], [95, "module-smac.runhistory"], [96, "module-smac.runhistory.dataclasses"], [97, "module-smac.runhistory.encoder"], [98, "module-smac.runhistory.encoder.abstract_encoder"], [99, "module-smac.runhistory.encoder.boing_encoder"], [100, "module-smac.runhistory.encoder.eips_encoder"], [101, "module-smac.runhistory.encoder.encoder"], [102, "module-smac.runhistory.encoder.inverse_scaled_encoder"], [103, "module-smac.runhistory.encoder.log_encoder"], [104, "module-smac.runhistory.encoder.log_scaled_encoder"], [105, "module-smac.runhistory.encoder.scaled_encoder"], [106, "module-smac.runhistory.encoder.sqrt_scaled_encoder"], [107, "module-smac.runhistory.enumerations"], [108, "module-smac.runhistory.errors"], [109, "module-smac.runhistory.runhistory"], [110, "module-smac.runner"], [111, "module-smac.runner.abstract_runner"], [112, "module-smac.runner.abstract_serial_runner"], [113, "module-smac.runner.dask_runner"], [114, "module-smac.runner.exceptions"], [115, "module-smac.runner.target_function_runner"], [116, "module-smac.runner.target_function_script_runner"], [117, "module-smac.scenario"], [118, "module-smac.utils"], [119, "module-smac.utils.configspace"], [120, "module-smac.utils.data_structures"], [121, "module-smac.utils.logging"], [122, "module-smac.utils.multi_objective"], [123, "module-smac.utils.pareto_front"], [124, "module-smac.utils.subspaces"], [125, "module-smac.utils.subspaces.boing_subspace"], [126, "module-smac.utils.subspaces.turbo_subspace"]], "smac.acquisition": [[22, "module-smac.acquisition"]], "abstractacquisitionfunction (class in smac.acquisition.function)": [[23, "smac.acquisition.function.AbstractAcquisitionFunction"]], "ei (class in smac.acquisition.function)": [[23, "smac.acquisition.function.EI"]], "eips (class in smac.acquisition.function)": [[23, "smac.acquisition.function.EIPS"]], "integratedacquisitionfunction (class in smac.acquisition.function)": [[23, "smac.acquisition.function.IntegratedAcquisitionFunction"]], "lcb (class in smac.acquisition.function)": [[23, "smac.acquisition.function.LCB"]], "pi (class in smac.acquisition.function)": [[23, "smac.acquisition.function.PI"]], "prioracquisitionfunction (class in smac.acquisition.function)": [[23, "smac.acquisition.function.PriorAcquisitionFunction"]], "ts (class in smac.acquisition.function)": [[23, "smac.acquisition.function.TS"]], "__call__() (smac.acquisition.function.abstractacquisitionfunction method)": [[23, "smac.acquisition.function.AbstractAcquisitionFunction.__call__"]], "_acquisition_function (smac.acquisition.function.integratedacquisitionfunction attribute)": [[23, "smac.acquisition.function.IntegratedAcquisitionFunction._acquisition_function"]], "_beta (smac.acquisition.function.lcb attribute)": [[23, "smac.acquisition.function.LCB._beta"]], "_eta (smac.acquisition.function.ei attribute)": [[23, "smac.acquisition.function.EI._eta"]], "_eta (smac.acquisition.function.integratedacquisitionfunction attribute)": [[23, "smac.acquisition.function.IntegratedAcquisitionFunction._eta"]], "_functions (smac.acquisition.function.integratedacquisitionfunction attribute)": [[23, "smac.acquisition.function.IntegratedAcquisitionFunction._functions"]], "_log (smac.acquisition.function.ei attribute)": [[23, "smac.acquisition.function.EI._log"]], "_num_data (smac.acquisition.function.lcb attribute)": [[23, "smac.acquisition.function.LCB._num_data"]], "_xi (smac.acquisition.function.ei attribute)": [[23, "smac.acquisition.function.EI._xi"]], "meta (smac.acquisition.function.abstractacquisitionfunction property)": [[23, "smac.acquisition.function.AbstractAcquisitionFunction.meta"]], "meta (smac.acquisition.function.ei property)": [[23, "smac.acquisition.function.EI.meta"]], "meta (smac.acquisition.function.integratedacquisitionfunction property)": [[23, "smac.acquisition.function.IntegratedAcquisitionFunction.meta"]], "meta (smac.acquisition.function.lcb property)": [[23, "smac.acquisition.function.LCB.meta"]], "meta (smac.acquisition.function.pi property)": [[23, "smac.acquisition.function.PI.meta"]], "meta (smac.acquisition.function.prioracquisitionfunction property)": [[23, "smac.acquisition.function.PriorAcquisitionFunction.meta"]], "model (smac.acquisition.function.abstractacquisitionfunction property)": [[23, "smac.acquisition.function.AbstractAcquisitionFunction.model"]], "model (smac.acquisition.function.prioracquisitionfunction property)": [[23, "smac.acquisition.function.PriorAcquisitionFunction.model"]], "name (smac.acquisition.function.abstractacquisitionfunction property)": [[23, "smac.acquisition.function.AbstractAcquisitionFunction.name"]], "name (smac.acquisition.function.ei property)": [[23, "smac.acquisition.function.EI.name"]], "name (smac.acquisition.function.eips property)": [[23, "smac.acquisition.function.EIPS.name"]], "name (smac.acquisition.function.integratedacquisitionfunction property)": [[23, "smac.acquisition.function.IntegratedAcquisitionFunction.name"]], "name (smac.acquisition.function.lcb property)": [[23, "smac.acquisition.function.LCB.name"]], "name (smac.acquisition.function.pi property)": [[23, "smac.acquisition.function.PI.name"]], "name (smac.acquisition.function.prioracquisitionfunction property)": [[23, "smac.acquisition.function.PriorAcquisitionFunction.name"]], "name (smac.acquisition.function.ts property)": [[23, "smac.acquisition.function.TS.name"]], "smac.acquisition.function": [[23, "module-smac.acquisition.function"]], "update() (smac.acquisition.function.abstractacquisitionfunction method)": [[23, "smac.acquisition.function.AbstractAcquisitionFunction.update"]], "abstractacquisitionfunction (class in smac.acquisition.function.abstract_acquisition_function)": [[24, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction"]], "__call__() (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction method)": [[24, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.__call__"]], "meta (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction property)": [[24, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.meta"]], "model (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction property)": [[24, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.model"]], "name (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction property)": [[24, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.name"]], "smac.acquisition.function.abstract_acquisition_function": [[24, "module-smac.acquisition.function.abstract_acquisition_function"]], "update() (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction method)": [[24, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.update"]], "lcb (class in smac.acquisition.function.confidence_bound)": [[25, "smac.acquisition.function.confidence_bound.LCB"]], "_beta (smac.acquisition.function.confidence_bound.lcb attribute)": [[25, "smac.acquisition.function.confidence_bound.LCB._beta"]], "_num_data (smac.acquisition.function.confidence_bound.lcb attribute)": [[25, "smac.acquisition.function.confidence_bound.LCB._num_data"]], "meta (smac.acquisition.function.confidence_bound.lcb property)": [[25, "smac.acquisition.function.confidence_bound.LCB.meta"]], "name (smac.acquisition.function.confidence_bound.lcb property)": [[25, "smac.acquisition.function.confidence_bound.LCB.name"]], "smac.acquisition.function.confidence_bound": [[25, "module-smac.acquisition.function.confidence_bound"]], "ei (class in smac.acquisition.function.expected_improvement)": [[26, "smac.acquisition.function.expected_improvement.EI"]], "eips (class in smac.acquisition.function.expected_improvement)": [[26, "smac.acquisition.function.expected_improvement.EIPS"]], "_eta (smac.acquisition.function.expected_improvement.ei attribute)": [[26, "smac.acquisition.function.expected_improvement.EI._eta"]], "_log (smac.acquisition.function.expected_improvement.ei attribute)": [[26, "smac.acquisition.function.expected_improvement.EI._log"]], "_xi (smac.acquisition.function.expected_improvement.ei attribute)": [[26, "smac.acquisition.function.expected_improvement.EI._xi"]], "meta (smac.acquisition.function.expected_improvement.ei property)": [[26, "smac.acquisition.function.expected_improvement.EI.meta"]], "name (smac.acquisition.function.expected_improvement.ei property)": [[26, "smac.acquisition.function.expected_improvement.EI.name"]], "name (smac.acquisition.function.expected_improvement.eips property)": [[26, "smac.acquisition.function.expected_improvement.EIPS.name"]], "smac.acquisition.function.expected_improvement": [[26, "module-smac.acquisition.function.expected_improvement"]], "integratedacquisitionfunction (class in smac.acquisition.function.integrated_acquisition_function)": [[27, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction"]], "_acquisition_function (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction attribute)": [[27, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction._acquisition_function"]], "_eta (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction attribute)": [[27, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction._eta"]], "_functions (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction attribute)": [[27, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction._functions"]], "meta (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction property)": [[27, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction.meta"]], "name (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction property)": [[27, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction.name"]], "smac.acquisition.function.integrated_acquisition_function": [[27, "module-smac.acquisition.function.integrated_acquisition_function"]], "prioracquisitionfunction (class in smac.acquisition.function.prior_acqusition_function)": [[28, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction"]], "meta (smac.acquisition.function.prior_acqusition_function.prioracquisitionfunction property)": [[28, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction.meta"]], "model (smac.acquisition.function.prior_acqusition_function.prioracquisitionfunction property)": [[28, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction.model"]], "name (smac.acquisition.function.prior_acqusition_function.prioracquisitionfunction property)": [[28, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction.name"]], "smac.acquisition.function.prior_acqusition_function": [[28, "module-smac.acquisition.function.prior_acqusition_function"]], "pi (class in smac.acquisition.function.probability_improvement)": [[29, "smac.acquisition.function.probability_improvement.PI"]], "meta (smac.acquisition.function.probability_improvement.pi property)": [[29, "smac.acquisition.function.probability_improvement.PI.meta"]], "name (smac.acquisition.function.probability_improvement.pi property)": [[29, "smac.acquisition.function.probability_improvement.PI.name"]], "smac.acquisition.function.probability_improvement": [[29, "module-smac.acquisition.function.probability_improvement"]], "ts (class in smac.acquisition.function.thompson)": [[30, "smac.acquisition.function.thompson.TS"]], "name (smac.acquisition.function.thompson.ts property)": [[30, "smac.acquisition.function.thompson.TS.name"]], "smac.acquisition.function.thompson": [[30, "module-smac.acquisition.function.thompson"]], "abstractacquisitionmaximizer (class in smac.acquisition.maximizer)": [[31, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer"]], "differentialevolution (class in smac.acquisition.maximizer)": [[31, "smac.acquisition.maximizer.DifferentialEvolution"]], "localandsortedpriorrandomsearch (class in smac.acquisition.maximizer)": [[31, "smac.acquisition.maximizer.LocalAndSortedPriorRandomSearch"]], "localandsortedrandomsearch (class in smac.acquisition.maximizer)": [[31, "smac.acquisition.maximizer.LocalAndSortedRandomSearch"]], "localsearch (class in smac.acquisition.maximizer)": [[31, "smac.acquisition.maximizer.LocalSearch"]], "randomsearch (class in smac.acquisition.maximizer)": [[31, "smac.acquisition.maximizer.RandomSearch"]], "acquisition_function (smac.acquisition.maximizer.abstractacquisitionmaximizer property)": [[31, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer.acquisition_function"]], "acquisition_function (smac.acquisition.maximizer.localandsortedrandomsearch property)": [[31, "smac.acquisition.maximizer.LocalAndSortedRandomSearch.acquisition_function"]], "maximize() (smac.acquisition.maximizer.abstractacquisitionmaximizer method)": [[31, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer.maximize"]], "meta (smac.acquisition.maximizer.abstractacquisitionmaximizer property)": [[31, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer.meta"]], "meta (smac.acquisition.maximizer.localandsortedrandomsearch property)": [[31, "smac.acquisition.maximizer.LocalAndSortedRandomSearch.meta"]], "meta (smac.acquisition.maximizer.localsearch property)": [[31, "smac.acquisition.maximizer.LocalSearch.meta"]], "smac.acquisition.maximizer": [[31, "module-smac.acquisition.maximizer"]], "abstractacquisitionmaximizer (class in smac.acquisition.maximizer.abstract_acqusition_maximizer)": [[32, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer"]], "acquisition_function (smac.acquisition.maximizer.abstract_acqusition_maximizer.abstractacquisitionmaximizer property)": [[32, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.acquisition_function"]], "maximize() (smac.acquisition.maximizer.abstract_acqusition_maximizer.abstractacquisitionmaximizer method)": [[32, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.maximize"]], "meta (smac.acquisition.maximizer.abstract_acqusition_maximizer.abstractacquisitionmaximizer property)": [[32, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.meta"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer": [[32, "module-smac.acquisition.maximizer.abstract_acqusition_maximizer"]], "differentialevolution (class in smac.acquisition.maximizer.differential_evolution)": [[33, "smac.acquisition.maximizer.differential_evolution.DifferentialEvolution"]], "smac.acquisition.maximizer.differential_evolution": [[33, "module-smac.acquisition.maximizer.differential_evolution"]], "challengerlist (class in smac.acquisition.maximizer.helpers)": [[34, "smac.acquisition.maximizer.helpers.ChallengerList"]], "smac.acquisition.maximizer.helpers": [[34, "module-smac.acquisition.maximizer.helpers"]], "localandsortedpriorrandomsearch (class in smac.acquisition.maximizer.local_and_random_search)": [[35, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedPriorRandomSearch"]], "localandsortedrandomsearch (class in smac.acquisition.maximizer.local_and_random_search)": [[35, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch"]], "acquisition_function (smac.acquisition.maximizer.local_and_random_search.localandsortedrandomsearch property)": [[35, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch.acquisition_function"]], "meta (smac.acquisition.maximizer.local_and_random_search.localandsortedrandomsearch property)": [[35, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch.meta"]], "smac.acquisition.maximizer.local_and_random_search": [[35, "module-smac.acquisition.maximizer.local_and_random_search"]], "localsearch (class in smac.acquisition.maximizer.local_search)": [[36, "smac.acquisition.maximizer.local_search.LocalSearch"]], "meta (smac.acquisition.maximizer.local_search.localsearch property)": [[36, "smac.acquisition.maximizer.local_search.LocalSearch.meta"]], "smac.acquisition.maximizer.local_search": [[36, "module-smac.acquisition.maximizer.local_search"]], "randomsearch (class in smac.acquisition.maximizer.random_search)": [[37, "smac.acquisition.maximizer.random_search.RandomSearch"]], "smac.acquisition.maximizer.random_search": [[37, "module-smac.acquisition.maximizer.random_search"]], "callback (class in smac.callback)": [[38, "smac.callback.Callback"]], "on_ask_end() (smac.callback.callback method)": [[38, "smac.callback.Callback.on_ask_end"]], "on_ask_start() (smac.callback.callback method)": [[38, "smac.callback.Callback.on_ask_start"]], "on_end() (smac.callback.callback method)": [[38, "smac.callback.Callback.on_end"]], "on_iteration_end() (smac.callback.callback method)": [[38, "smac.callback.Callback.on_iteration_end"]], "on_iteration_start() (smac.callback.callback method)": [[38, "smac.callback.Callback.on_iteration_start"]], "on_next_configurations_end() (smac.callback.callback method)": [[38, "smac.callback.Callback.on_next_configurations_end"]], "on_next_configurations_start() (smac.callback.callback method)": [[38, "smac.callback.Callback.on_next_configurations_start"]], "on_start() (smac.callback.callback method)": [[38, "smac.callback.Callback.on_start"]], "on_tell_end() (smac.callback.callback method)": [[38, "smac.callback.Callback.on_tell_end"]], "on_tell_start() (smac.callback.callback method)": [[38, "smac.callback.Callback.on_tell_start"]], "smac.callback": [[38, "module-smac.callback"]], "abstractfacade (class in smac.facade)": [[39, "smac.facade.AbstractFacade"]], "algorithmconfigurationfacade (class in smac.facade)": [[39, "smac.facade.AlgorithmConfigurationFacade"]], "blackboxfacade (class in smac.facade)": [[39, "smac.facade.BlackBoxFacade"]], "hyperbandfacade (class in smac.facade)": [[39, "smac.facade.HyperbandFacade"]], "hyperparameteroptimizationfacade (class in smac.facade)": [[39, "smac.facade.HyperparameterOptimizationFacade"]], "multifidelityfacade (class in smac.facade)": [[39, "smac.facade.MultiFidelityFacade"]], "randomfacade (class in smac.facade)": [[39, "smac.facade.RandomFacade"]], "ask() (smac.facade.abstractfacade method)": [[39, "smac.facade.AbstractFacade.ask"]], "get_acquisition_function() (smac.facade.abstractfacade static method)": [[39, "smac.facade.AbstractFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.algorithmconfigurationfacade static method)": [[39, "smac.facade.AlgorithmConfigurationFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.blackboxfacade static method)": [[39, "smac.facade.BlackBoxFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.hyperparameteroptimizationfacade static method)": [[39, "smac.facade.HyperparameterOptimizationFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.randomfacade static method)": [[39, "smac.facade.RandomFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.abstractfacade static method)": [[39, "smac.facade.AbstractFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.algorithmconfigurationfacade static method)": [[39, "smac.facade.AlgorithmConfigurationFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.blackboxfacade static method)": [[39, "smac.facade.BlackBoxFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.hyperparameteroptimizationfacade static method)": [[39, "smac.facade.HyperparameterOptimizationFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.randomfacade static method)": [[39, "smac.facade.RandomFacade.get_acquisition_maximizer"]], "get_config_selector() (smac.facade.abstractfacade static method)": [[39, "smac.facade.AbstractFacade.get_config_selector"]], "get_initial_design() (smac.facade.abstractfacade static method)": [[39, "smac.facade.AbstractFacade.get_initial_design"]], "get_initial_design() (smac.facade.algorithmconfigurationfacade static method)": [[39, "smac.facade.AlgorithmConfigurationFacade.get_initial_design"]], "get_initial_design() (smac.facade.blackboxfacade static method)": [[39, "smac.facade.BlackBoxFacade.get_initial_design"]], "get_initial_design() (smac.facade.hyperparameteroptimizationfacade static method)": [[39, "smac.facade.HyperparameterOptimizationFacade.get_initial_design"]], "get_initial_design() (smac.facade.multifidelityfacade static method)": [[39, "smac.facade.MultiFidelityFacade.get_initial_design"]], "get_initial_design() (smac.facade.randomfacade static method)": [[39, "smac.facade.RandomFacade.get_initial_design"]], "get_intensifier() (smac.facade.abstractfacade static method)": [[39, "smac.facade.AbstractFacade.get_intensifier"]], "get_intensifier() (smac.facade.algorithmconfigurationfacade static method)": [[39, "smac.facade.AlgorithmConfigurationFacade.get_intensifier"]], "get_intensifier() (smac.facade.blackboxfacade static method)": [[39, "smac.facade.BlackBoxFacade.get_intensifier"]], "get_intensifier() (smac.facade.hyperbandfacade static method)": [[39, "smac.facade.HyperbandFacade.get_intensifier"]], "get_intensifier() (smac.facade.hyperparameteroptimizationfacade static method)": [[39, "smac.facade.HyperparameterOptimizationFacade.get_intensifier"]], "get_intensifier() (smac.facade.multifidelityfacade static method)": [[39, "smac.facade.MultiFidelityFacade.get_intensifier"]], "get_intensifier() (smac.facade.randomfacade static method)": [[39, "smac.facade.RandomFacade.get_intensifier"]], "get_kernel() (smac.facade.blackboxfacade static method)": [[39, "smac.facade.BlackBoxFacade.get_kernel"]], "get_model() (smac.facade.abstractfacade static method)": [[39, "smac.facade.AbstractFacade.get_model"]], "get_model() (smac.facade.algorithmconfigurationfacade static method)": [[39, "smac.facade.AlgorithmConfigurationFacade.get_model"]], "get_model() (smac.facade.blackboxfacade static method)": [[39, "smac.facade.BlackBoxFacade.get_model"]], "get_model() (smac.facade.hyperparameteroptimizationfacade static method)": [[39, "smac.facade.HyperparameterOptimizationFacade.get_model"]], "get_model() (smac.facade.randomfacade static method)": [[39, "smac.facade.RandomFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.abstractfacade static method)": [[39, "smac.facade.AbstractFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.algorithmconfigurationfacade static method)": [[39, "smac.facade.AlgorithmConfigurationFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.blackboxfacade static method)": [[39, "smac.facade.BlackBoxFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.hyperparameteroptimizationfacade static method)": [[39, "smac.facade.HyperparameterOptimizationFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.randomfacade static method)": [[39, "smac.facade.RandomFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.abstractfacade static method)": [[39, "smac.facade.AbstractFacade.get_random_design"]], "get_random_design() (smac.facade.algorithmconfigurationfacade static method)": [[39, "smac.facade.AlgorithmConfigurationFacade.get_random_design"]], "get_random_design() (smac.facade.blackboxfacade static method)": [[39, "smac.facade.BlackBoxFacade.get_random_design"]], "get_random_design() (smac.facade.hyperparameteroptimizationfacade static method)": [[39, "smac.facade.HyperparameterOptimizationFacade.get_random_design"]], "get_random_design() (smac.facade.randomfacade static method)": [[39, "smac.facade.RandomFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.abstractfacade static method)": [[39, "smac.facade.AbstractFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.algorithmconfigurationfacade static method)": [[39, "smac.facade.AlgorithmConfigurationFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.blackboxfacade static method)": [[39, "smac.facade.BlackBoxFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.hyperparameteroptimizationfacade static method)": [[39, "smac.facade.HyperparameterOptimizationFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.randomfacade static method)": [[39, "smac.facade.RandomFacade.get_runhistory_encoder"]], "intensifier (smac.facade.abstractfacade property)": [[39, "smac.facade.AbstractFacade.intensifier"]], "meta (smac.facade.abstractfacade property)": [[39, "smac.facade.AbstractFacade.meta"]], "optimize() (smac.facade.abstractfacade method)": [[39, "smac.facade.AbstractFacade.optimize"]], "optimizer (smac.facade.abstractfacade property)": [[39, "smac.facade.AbstractFacade.optimizer"]], "runhistory (smac.facade.abstractfacade property)": [[39, "smac.facade.AbstractFacade.runhistory"]], "scenario (smac.facade.abstractfacade property)": [[39, "smac.facade.AbstractFacade.scenario"]], "smac.facade": [[39, "module-smac.facade"]], "tell() (smac.facade.abstractfacade method)": [[39, "smac.facade.AbstractFacade.tell"]], "validate() (smac.facade.abstractfacade method)": [[39, "smac.facade.AbstractFacade.validate"]], "abstractfacade (class in smac.facade.abstract_facade)": [[40, "smac.facade.abstract_facade.AbstractFacade"]], "ask() (smac.facade.abstract_facade.abstractfacade method)": [[40, "smac.facade.abstract_facade.AbstractFacade.ask"]], "get_acquisition_function() (smac.facade.abstract_facade.abstractfacade static method)": [[40, "smac.facade.abstract_facade.AbstractFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.abstract_facade.abstractfacade static method)": [[40, "smac.facade.abstract_facade.AbstractFacade.get_acquisition_maximizer"]], "get_config_selector() (smac.facade.abstract_facade.abstractfacade static method)": [[40, "smac.facade.abstract_facade.AbstractFacade.get_config_selector"]], "get_initial_design() (smac.facade.abstract_facade.abstractfacade static method)": [[40, "smac.facade.abstract_facade.AbstractFacade.get_initial_design"]], "get_intensifier() (smac.facade.abstract_facade.abstractfacade static method)": [[40, "smac.facade.abstract_facade.AbstractFacade.get_intensifier"]], "get_model() (smac.facade.abstract_facade.abstractfacade static method)": [[40, "smac.facade.abstract_facade.AbstractFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.abstract_facade.abstractfacade static method)": [[40, "smac.facade.abstract_facade.AbstractFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.abstract_facade.abstractfacade static method)": [[40, "smac.facade.abstract_facade.AbstractFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.abstract_facade.abstractfacade static method)": [[40, "smac.facade.abstract_facade.AbstractFacade.get_runhistory_encoder"]], "intensifier (smac.facade.abstract_facade.abstractfacade property)": [[40, "smac.facade.abstract_facade.AbstractFacade.intensifier"]], "meta (smac.facade.abstract_facade.abstractfacade property)": [[40, "smac.facade.abstract_facade.AbstractFacade.meta"]], "optimize() (smac.facade.abstract_facade.abstractfacade method)": [[40, "smac.facade.abstract_facade.AbstractFacade.optimize"]], "optimizer (smac.facade.abstract_facade.abstractfacade property)": [[40, "smac.facade.abstract_facade.AbstractFacade.optimizer"]], "runhistory (smac.facade.abstract_facade.abstractfacade property)": [[40, "smac.facade.abstract_facade.AbstractFacade.runhistory"]], "scenario (smac.facade.abstract_facade.abstractfacade property)": [[40, "smac.facade.abstract_facade.AbstractFacade.scenario"]], "smac.facade.abstract_facade": [[40, "module-smac.facade.abstract_facade"]], "tell() (smac.facade.abstract_facade.abstractfacade method)": [[40, "smac.facade.abstract_facade.AbstractFacade.tell"]], "validate() (smac.facade.abstract_facade.abstractfacade method)": [[40, "smac.facade.abstract_facade.AbstractFacade.validate"]], "algorithmconfigurationfacade (class in smac.facade.algorithm_configuration_facade)": [[41, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade"]], "get_acquisition_function() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[41, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[41, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[41, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_initial_design"]], "get_intensifier() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[41, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_intensifier"]], "get_model() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[41, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[41, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[41, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[41, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_runhistory_encoder"]], "smac.facade.algorithm_configuration_facade": [[41, "module-smac.facade.algorithm_configuration_facade"]], "blackboxfacade (class in smac.facade.blackbox_facade)": [[42, "smac.facade.blackbox_facade.BlackBoxFacade"]], "get_acquisition_function() (smac.facade.blackbox_facade.blackboxfacade static method)": [[42, "smac.facade.blackbox_facade.BlackBoxFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.blackbox_facade.blackboxfacade static method)": [[42, "smac.facade.blackbox_facade.BlackBoxFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.blackbox_facade.blackboxfacade static method)": [[42, "smac.facade.blackbox_facade.BlackBoxFacade.get_initial_design"]], "get_intensifier() (smac.facade.blackbox_facade.blackboxfacade static method)": [[42, "smac.facade.blackbox_facade.BlackBoxFacade.get_intensifier"]], "get_kernel() (smac.facade.blackbox_facade.blackboxfacade static method)": [[42, "smac.facade.blackbox_facade.BlackBoxFacade.get_kernel"]], "get_model() (smac.facade.blackbox_facade.blackboxfacade static method)": [[42, "smac.facade.blackbox_facade.BlackBoxFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.blackbox_facade.blackboxfacade static method)": [[42, "smac.facade.blackbox_facade.BlackBoxFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.blackbox_facade.blackboxfacade static method)": [[42, "smac.facade.blackbox_facade.BlackBoxFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.blackbox_facade.blackboxfacade static method)": [[42, "smac.facade.blackbox_facade.BlackBoxFacade.get_runhistory_encoder"]], "smac.facade.blackbox_facade": [[42, "module-smac.facade.blackbox_facade"]], "hyperbandfacade (class in smac.facade.hyperband_facade)": [[43, "smac.facade.hyperband_facade.HyperbandFacade"]], "get_intensifier() (smac.facade.hyperband_facade.hyperbandfacade static method)": [[43, "smac.facade.hyperband_facade.HyperbandFacade.get_intensifier"]], "smac.facade.hyperband_facade": [[43, "module-smac.facade.hyperband_facade"]], "hyperparameteroptimizationfacade (class in smac.facade.hyperparameter_optimization_facade)": [[44, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade"]], "get_acquisition_function() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[44, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[44, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[44, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_initial_design"]], "get_intensifier() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[44, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_intensifier"]], "get_model() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[44, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[44, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[44, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[44, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_runhistory_encoder"]], "smac.facade.hyperparameter_optimization_facade": [[44, "module-smac.facade.hyperparameter_optimization_facade"]], "multifidelityfacade (class in smac.facade.multi_fidelity_facade)": [[45, "smac.facade.multi_fidelity_facade.MultiFidelityFacade"]], "get_initial_design() (smac.facade.multi_fidelity_facade.multifidelityfacade static method)": [[45, "smac.facade.multi_fidelity_facade.MultiFidelityFacade.get_initial_design"]], "get_intensifier() (smac.facade.multi_fidelity_facade.multifidelityfacade static method)": [[45, "smac.facade.multi_fidelity_facade.MultiFidelityFacade.get_intensifier"]], "smac.facade.multi_fidelity_facade": [[45, "module-smac.facade.multi_fidelity_facade"]], "randomfacade (class in smac.facade.random_facade)": [[46, "smac.facade.random_facade.RandomFacade"]], "get_acquisition_function() (smac.facade.random_facade.randomfacade static method)": [[46, "smac.facade.random_facade.RandomFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.random_facade.randomfacade static method)": [[46, "smac.facade.random_facade.RandomFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.random_facade.randomfacade static method)": [[46, "smac.facade.random_facade.RandomFacade.get_initial_design"]], "get_intensifier() (smac.facade.random_facade.randomfacade static method)": [[46, "smac.facade.random_facade.RandomFacade.get_intensifier"]], "get_model() (smac.facade.random_facade.randomfacade static method)": [[46, "smac.facade.random_facade.RandomFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.random_facade.randomfacade static method)": [[46, "smac.facade.random_facade.RandomFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.random_facade.randomfacade static method)": [[46, "smac.facade.random_facade.RandomFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.random_facade.randomfacade static method)": [[46, "smac.facade.random_facade.RandomFacade.get_runhistory_encoder"]], "smac.facade.random_facade": [[46, "module-smac.facade.random_facade"]], "abstractinitialdesign (class in smac.initial_design)": [[47, "smac.initial_design.AbstractInitialDesign"]], "defaultinitialdesign (class in smac.initial_design)": [[47, "smac.initial_design.DefaultInitialDesign"]], "factorialinitialdesign (class in smac.initial_design)": [[47, "smac.initial_design.FactorialInitialDesign"]], "latinhypercubeinitialdesign (class in smac.initial_design)": [[47, "smac.initial_design.LatinHypercubeInitialDesign"]], "randominitialdesign (class in smac.initial_design)": [[47, "smac.initial_design.RandomInitialDesign"]], "sobolinitialdesign (class in smac.initial_design)": [[47, "smac.initial_design.SobolInitialDesign"]], "meta (smac.initial_design.abstractinitialdesign property)": [[47, "smac.initial_design.AbstractInitialDesign.meta"]], "select_configurations() (smac.initial_design.abstractinitialdesign method)": [[47, "smac.initial_design.AbstractInitialDesign.select_configurations"]], "smac.initial_design": [[47, "module-smac.initial_design"]], "abstractinitialdesign (class in smac.initial_design.abstract_initial_design)": [[48, "smac.initial_design.abstract_initial_design.AbstractInitialDesign"]], "meta (smac.initial_design.abstract_initial_design.abstractinitialdesign property)": [[48, "smac.initial_design.abstract_initial_design.AbstractInitialDesign.meta"]], "select_configurations() (smac.initial_design.abstract_initial_design.abstractinitialdesign method)": [[48, "smac.initial_design.abstract_initial_design.AbstractInitialDesign.select_configurations"]], "smac.initial_design.abstract_initial_design": [[48, "module-smac.initial_design.abstract_initial_design"]], "defaultinitialdesign (class in smac.initial_design.default_design)": [[49, "smac.initial_design.default_design.DefaultInitialDesign"]], "smac.initial_design.default_design": [[49, "module-smac.initial_design.default_design"]], "factorialinitialdesign (class in smac.initial_design.factorial_design)": [[50, "smac.initial_design.factorial_design.FactorialInitialDesign"]], "smac.initial_design.factorial_design": [[50, "module-smac.initial_design.factorial_design"]], "latinhypercubeinitialdesign (class in smac.initial_design.latin_hypercube_design)": [[51, "smac.initial_design.latin_hypercube_design.LatinHypercubeInitialDesign"]], "smac.initial_design.latin_hypercube_design": [[51, "module-smac.initial_design.latin_hypercube_design"]], "randominitialdesign (class in smac.initial_design.random_design)": [[52, "smac.initial_design.random_design.RandomInitialDesign"]], "smac.initial_design.random_design": [[52, "module-smac.initial_design.random_design"]], "sobolinitialdesign (class in smac.initial_design.sobol_design)": [[53, "smac.initial_design.sobol_design.SobolInitialDesign"]], "smac.initial_design.sobol_design": [[53, "module-smac.initial_design.sobol_design"]], "abstractintensifier (class in smac.intensifier)": [[54, "smac.intensifier.AbstractIntensifier"]], "hyperband (class in smac.intensifier)": [[54, "smac.intensifier.Hyperband"]], "intensifier (class in smac.intensifier)": [[54, "smac.intensifier.Intensifier"]], "successivehalving (class in smac.intensifier)": [[54, "smac.intensifier.SuccessiveHalving"]], "__iter__() (smac.intensifier.abstractintensifier method)": [[54, "smac.intensifier.AbstractIntensifier.__iter__"]], "__iter__() (smac.intensifier.intensifier method)": [[54, "smac.intensifier.Intensifier.__iter__"]], "__post_init__() (smac.intensifier.abstractintensifier method)": [[54, "smac.intensifier.AbstractIntensifier.__post_init__"]], "__post_init__() (smac.intensifier.successivehalving method)": [[54, "smac.intensifier.SuccessiveHalving.__post_init__"]], "config_generator (smac.intensifier.abstractintensifier property)": [[54, "smac.intensifier.AbstractIntensifier.config_generator"]], "config_selector (smac.intensifier.abstractintensifier property)": [[54, "smac.intensifier.AbstractIntensifier.config_selector"]], "get_callback() (smac.intensifier.abstractintensifier method)": [[54, "smac.intensifier.AbstractIntensifier.get_callback"]], "get_incumbent() (smac.intensifier.abstractintensifier method)": [[54, "smac.intensifier.AbstractIntensifier.get_incumbent"]], "get_incumbent_instance_seed_budget_key_differences() (smac.intensifier.abstractintensifier method)": [[54, "smac.intensifier.AbstractIntensifier.get_incumbent_instance_seed_budget_key_differences"]], "get_incumbent_instance_seed_budget_keys() (smac.intensifier.abstractintensifier method)": [[54, "smac.intensifier.AbstractIntensifier.get_incumbent_instance_seed_budget_keys"]], "get_incumbents() (smac.intensifier.abstractintensifier method)": [[54, "smac.intensifier.AbstractIntensifier.get_incumbents"]], "get_instance_seed_budget_keys() (smac.intensifier.abstractintensifier method)": [[54, "smac.intensifier.AbstractIntensifier.get_instance_seed_budget_keys"]], "get_instance_seed_budget_keys() (smac.intensifier.successivehalving method)": [[54, "smac.intensifier.SuccessiveHalving.get_instance_seed_budget_keys"]], "get_instance_seed_keys_of_interest() (smac.intensifier.abstractintensifier method)": [[54, "smac.intensifier.AbstractIntensifier.get_instance_seed_keys_of_interest"]], "get_rejected_configs() (smac.intensifier.abstractintensifier method)": [[54, "smac.intensifier.AbstractIntensifier.get_rejected_configs"]], "get_state() (smac.intensifier.abstractintensifier method)": [[54, "smac.intensifier.AbstractIntensifier.get_state"]], "get_state() (smac.intensifier.hyperband method)": [[54, "smac.intensifier.Hyperband.get_state"]], "get_state() (smac.intensifier.intensifier method)": [[54, "smac.intensifier.Intensifier.get_state"]], "get_state() (smac.intensifier.successivehalving method)": [[54, "smac.intensifier.SuccessiveHalving.get_state"]], "get_trials_of_interest() (smac.intensifier.abstractintensifier method)": [[54, "smac.intensifier.AbstractIntensifier.get_trials_of_interest"]], "get_trials_of_interest() (smac.intensifier.successivehalving method)": [[54, "smac.intensifier.SuccessiveHalving.get_trials_of_interest"]], "incumbents_changed (smac.intensifier.abstractintensifier property)": [[54, "smac.intensifier.AbstractIntensifier.incumbents_changed"]], "load() (smac.intensifier.abstractintensifier method)": [[54, "smac.intensifier.AbstractIntensifier.load"]], "meta (smac.intensifier.abstractintensifier property)": [[54, "smac.intensifier.AbstractIntensifier.meta"]], "meta (smac.intensifier.successivehalving property)": [[54, "smac.intensifier.SuccessiveHalving.meta"]], "print_tracker() (smac.intensifier.successivehalving method)": [[54, "smac.intensifier.SuccessiveHalving.print_tracker"]], "reset() (smac.intensifier.abstractintensifier method)": [[54, "smac.intensifier.AbstractIntensifier.reset"]], "reset() (smac.intensifier.hyperband method)": [[54, "smac.intensifier.Hyperband.reset"]], "reset() (smac.intensifier.intensifier method)": [[54, "smac.intensifier.Intensifier.reset"]], "reset() (smac.intensifier.successivehalving method)": [[54, "smac.intensifier.SuccessiveHalving.reset"]], "runhistory (smac.intensifier.abstractintensifier property)": [[54, "smac.intensifier.AbstractIntensifier.runhistory"]], "save() (smac.intensifier.abstractintensifier method)": [[54, "smac.intensifier.AbstractIntensifier.save"]], "set_state() (smac.intensifier.abstractintensifier method)": [[54, "smac.intensifier.AbstractIntensifier.set_state"]], "set_state() (smac.intensifier.hyperband method)": [[54, "smac.intensifier.Hyperband.set_state"]], "set_state() (smac.intensifier.intensifier method)": [[54, "smac.intensifier.Intensifier.set_state"]], "set_state() (smac.intensifier.successivehalving method)": [[54, "smac.intensifier.SuccessiveHalving.set_state"]], "smac.intensifier": [[54, "module-smac.intensifier"]], "trajectory (smac.intensifier.abstractintensifier property)": [[54, "smac.intensifier.AbstractIntensifier.trajectory"]], "update_incumbents() (smac.intensifier.abstractintensifier method)": [[54, "smac.intensifier.AbstractIntensifier.update_incumbents"]], "used_walltime (smac.intensifier.abstractintensifier property)": [[54, "smac.intensifier.AbstractIntensifier.used_walltime"]], "uses_budgets (smac.intensifier.abstractintensifier property)": [[54, "smac.intensifier.AbstractIntensifier.uses_budgets"]], "uses_budgets (smac.intensifier.intensifier property)": [[54, "smac.intensifier.Intensifier.uses_budgets"]], "uses_budgets (smac.intensifier.successivehalving property)": [[54, "smac.intensifier.SuccessiveHalving.uses_budgets"]], "uses_instances (smac.intensifier.abstractintensifier property)": [[54, "smac.intensifier.AbstractIntensifier.uses_instances"]], "uses_instances (smac.intensifier.intensifier property)": [[54, "smac.intensifier.Intensifier.uses_instances"]], "uses_instances (smac.intensifier.successivehalving property)": [[54, "smac.intensifier.SuccessiveHalving.uses_instances"]], "uses_seeds (smac.intensifier.abstractintensifier property)": [[54, "smac.intensifier.AbstractIntensifier.uses_seeds"]], "uses_seeds (smac.intensifier.intensifier property)": [[54, "smac.intensifier.Intensifier.uses_seeds"]], "uses_seeds (smac.intensifier.successivehalving property)": [[54, "smac.intensifier.SuccessiveHalving.uses_seeds"]], "abstractintensifier (class in smac.intensifier.abstract_intensifier)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier"]], "__iter__() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.__iter__"]], "__post_init__() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.__post_init__"]], "config_generator (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.config_generator"]], "config_selector (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.config_selector"]], "get_callback() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_callback"]], "get_incumbent() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_incumbent"]], "get_incumbent_instance_seed_budget_key_differences() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_incumbent_instance_seed_budget_key_differences"]], "get_incumbent_instance_seed_budget_keys() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_incumbent_instance_seed_budget_keys"]], "get_incumbents() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_incumbents"]], "get_instance_seed_budget_keys() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_instance_seed_budget_keys"]], "get_instance_seed_keys_of_interest() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_instance_seed_keys_of_interest"]], "get_rejected_configs() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_rejected_configs"]], "get_state() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_state"]], "get_trials_of_interest() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_trials_of_interest"]], "incumbents_changed (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.incumbents_changed"]], "load() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.load"]], "meta (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.meta"]], "reset() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.reset"]], "runhistory (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.runhistory"]], "save() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.save"]], "set_state() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.set_state"]], "smac.intensifier.abstract_intensifier": [[55, "module-smac.intensifier.abstract_intensifier"]], "trajectory (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.trajectory"]], "update_incumbents() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.update_incumbents"]], "used_walltime (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.used_walltime"]], "uses_budgets (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_budgets"]], "uses_instances (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_instances"]], "uses_seeds (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_seeds"]], "hyperband (class in smac.intensifier.hyperband)": [[56, "smac.intensifier.hyperband.Hyperband"]], "get_state() (smac.intensifier.hyperband.hyperband method)": [[56, "smac.intensifier.hyperband.Hyperband.get_state"]], "reset() (smac.intensifier.hyperband.hyperband method)": [[56, "smac.intensifier.hyperband.Hyperband.reset"]], "set_state() (smac.intensifier.hyperband.hyperband method)": [[56, "smac.intensifier.hyperband.Hyperband.set_state"]], "smac.intensifier.hyperband": [[56, "module-smac.intensifier.hyperband"]], "intensifier (class in smac.intensifier.intensifier)": [[57, "smac.intensifier.intensifier.Intensifier"]], "__iter__() (smac.intensifier.intensifier.intensifier method)": [[57, "smac.intensifier.intensifier.Intensifier.__iter__"]], "get_state() (smac.intensifier.intensifier.intensifier method)": [[57, "smac.intensifier.intensifier.Intensifier.get_state"]], "reset() (smac.intensifier.intensifier.intensifier method)": [[57, "smac.intensifier.intensifier.Intensifier.reset"]], "set_state() (smac.intensifier.intensifier.intensifier method)": [[57, "smac.intensifier.intensifier.Intensifier.set_state"]], "smac.intensifier.intensifier": [[57, "module-smac.intensifier.intensifier"]], "uses_budgets (smac.intensifier.intensifier.intensifier property)": [[57, "smac.intensifier.intensifier.Intensifier.uses_budgets"]], "uses_instances (smac.intensifier.intensifier.intensifier property)": [[57, "smac.intensifier.intensifier.Intensifier.uses_instances"]], "uses_seeds (smac.intensifier.intensifier.intensifier property)": [[57, "smac.intensifier.intensifier.Intensifier.uses_seeds"]], "successivehalving (class in smac.intensifier.successive_halving)": [[58, "smac.intensifier.successive_halving.SuccessiveHalving"]], "__post_init__() (smac.intensifier.successive_halving.successivehalving method)": [[58, "smac.intensifier.successive_halving.SuccessiveHalving.__post_init__"]], "get_instance_seed_budget_keys() (smac.intensifier.successive_halving.successivehalving method)": [[58, "smac.intensifier.successive_halving.SuccessiveHalving.get_instance_seed_budget_keys"]], "get_state() (smac.intensifier.successive_halving.successivehalving method)": [[58, "smac.intensifier.successive_halving.SuccessiveHalving.get_state"]], "get_trials_of_interest() (smac.intensifier.successive_halving.successivehalving method)": [[58, "smac.intensifier.successive_halving.SuccessiveHalving.get_trials_of_interest"]], "meta (smac.intensifier.successive_halving.successivehalving property)": [[58, "smac.intensifier.successive_halving.SuccessiveHalving.meta"]], "print_tracker() (smac.intensifier.successive_halving.successivehalving method)": [[58, "smac.intensifier.successive_halving.SuccessiveHalving.print_tracker"]], "reset() (smac.intensifier.successive_halving.successivehalving method)": [[58, "smac.intensifier.successive_halving.SuccessiveHalving.reset"]], "set_state() (smac.intensifier.successive_halving.successivehalving method)": [[58, "smac.intensifier.successive_halving.SuccessiveHalving.set_state"]], "smac.intensifier.successive_halving": [[58, "module-smac.intensifier.successive_halving"]], "uses_budgets (smac.intensifier.successive_halving.successivehalving property)": [[58, "smac.intensifier.successive_halving.SuccessiveHalving.uses_budgets"]], "uses_instances (smac.intensifier.successive_halving.successivehalving property)": [[58, "smac.intensifier.successive_halving.SuccessiveHalving.uses_instances"]], "uses_seeds (smac.intensifier.successive_halving.successivehalving property)": [[58, "smac.intensifier.successive_halving.SuccessiveHalving.uses_seeds"]], "smac.main": [[59, "module-smac.main"]], "configselector (class in smac.main.config_selector)": [[60, "smac.main.config_selector.ConfigSelector"]], "__iter__() (smac.main.config_selector.configselector method)": [[60, "smac.main.config_selector.ConfigSelector.__iter__"]], "meta (smac.main.config_selector.configselector property)": [[60, "smac.main.config_selector.ConfigSelector.meta"]], "smac.main.config_selector": [[60, "module-smac.main.config_selector"]], "smbo (class in smac.main.smbo)": [[61, "smac.main.smbo.SMBO"]], "ask() (smac.main.smbo.smbo method)": [[61, "smac.main.smbo.SMBO.ask"]], "budget_exhausted (smac.main.smbo.smbo property)": [[61, "smac.main.smbo.SMBO.budget_exhausted"]], "exists() (smac.main.smbo.smbo method)": [[61, "smac.main.smbo.SMBO.exists"]], "intensifier (smac.main.smbo.smbo property)": [[61, "smac.main.smbo.SMBO.intensifier"]], "load() (smac.main.smbo.smbo method)": [[61, "smac.main.smbo.SMBO.load"]], "optimize() (smac.main.smbo.smbo method)": [[61, "smac.main.smbo.SMBO.optimize"]], "print_stats() (smac.main.smbo.smbo method)": [[61, "smac.main.smbo.SMBO.print_stats"]], "remaining_cputime (smac.main.smbo.smbo property)": [[61, "smac.main.smbo.SMBO.remaining_cputime"]], "remaining_trials (smac.main.smbo.smbo property)": [[61, "smac.main.smbo.SMBO.remaining_trials"]], "remaining_walltime (smac.main.smbo.smbo property)": [[61, "smac.main.smbo.SMBO.remaining_walltime"]], "reset() (smac.main.smbo.smbo method)": [[61, "smac.main.smbo.SMBO.reset"]], "runhistory (smac.main.smbo.smbo property)": [[61, "smac.main.smbo.SMBO.runhistory"]], "save() (smac.main.smbo.smbo method)": [[61, "smac.main.smbo.SMBO.save"]], "smac.main.smbo": [[61, "module-smac.main.smbo"]], "tell() (smac.main.smbo.smbo method)": [[61, "smac.main.smbo.SMBO.tell"]], "update_acquisition_function() (smac.main.smbo.smbo method)": [[61, "smac.main.smbo.SMBO.update_acquisition_function"]], "update_model() (smac.main.smbo.smbo method)": [[61, "smac.main.smbo.SMBO.update_model"]], "used_target_function_walltime (smac.main.smbo.smbo property)": [[61, "smac.main.smbo.SMBO.used_target_function_walltime"]], "used_walltime (smac.main.smbo.smbo property)": [[61, "smac.main.smbo.SMBO.used_walltime"]], "validate() (smac.main.smbo.smbo method)": [[61, "smac.main.smbo.SMBO.validate"]], "abstractmodel (class in smac.model)": [[62, "smac.model.AbstractModel"]], "multiobjectivemodel (class in smac.model)": [[62, "smac.model.MultiObjectiveModel"]], "randommodel (class in smac.model)": [[62, "smac.model.RandomModel"]], "meta (smac.model.abstractmodel property)": [[62, "smac.model.AbstractModel.meta"]], "models (smac.model.multiobjectivemodel property)": [[62, "smac.model.MultiObjectiveModel.models"]], "predict() (smac.model.abstractmodel method)": [[62, "smac.model.AbstractModel.predict"]], "predict_marginalized() (smac.model.abstractmodel method)": [[62, "smac.model.AbstractModel.predict_marginalized"]], "predict_marginalized() (smac.model.multiobjectivemodel method)": [[62, "smac.model.MultiObjectiveModel.predict_marginalized"]], "smac.model": [[62, "module-smac.model"]], "train() (smac.model.abstractmodel method)": [[62, "smac.model.AbstractModel.train"]], "abstractmodel (class in smac.model.abstract_model)": [[63, "smac.model.abstract_model.AbstractModel"]], "meta (smac.model.abstract_model.abstractmodel property)": [[63, "smac.model.abstract_model.AbstractModel.meta"]], "predict() (smac.model.abstract_model.abstractmodel method)": [[63, "smac.model.abstract_model.AbstractModel.predict"]], "predict_marginalized() (smac.model.abstract_model.abstractmodel method)": [[63, "smac.model.abstract_model.AbstractModel.predict_marginalized"]], "smac.model.abstract_model": [[63, "module-smac.model.abstract_model"]], "train() (smac.model.abstract_model.abstractmodel method)": [[63, "smac.model.abstract_model.AbstractModel.train"]], "abstractgaussianprocess (class in smac.model.gaussian_process)": [[64, "smac.model.gaussian_process.AbstractGaussianProcess"]], "gaussianprocess (class in smac.model.gaussian_process)": [[64, "smac.model.gaussian_process.GaussianProcess"]], "mcmcgaussianprocess (class in smac.model.gaussian_process)": [[64, "smac.model.gaussian_process.MCMCGaussianProcess"]], "meta (smac.model.gaussian_process.abstractgaussianprocess property)": [[64, "smac.model.gaussian_process.AbstractGaussianProcess.meta"]], "meta (smac.model.gaussian_process.gaussianprocess property)": [[64, "smac.model.gaussian_process.GaussianProcess.meta"]], "meta (smac.model.gaussian_process.mcmcgaussianprocess property)": [[64, "smac.model.gaussian_process.MCMCGaussianProcess.meta"]], "models (smac.model.gaussian_process.mcmcgaussianprocess property)": [[64, "smac.model.gaussian_process.MCMCGaussianProcess.models"]], "sample_functions() (smac.model.gaussian_process.gaussianprocess method)": [[64, "smac.model.gaussian_process.GaussianProcess.sample_functions"]], "smac.model.gaussian_process": [[64, "module-smac.model.gaussian_process"]], "abstractgaussianprocess (class in smac.model.gaussian_process.abstract_gaussian_process)": [[65, "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess"]], "meta (smac.model.gaussian_process.abstract_gaussian_process.abstractgaussianprocess property)": [[65, "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess.meta"]], "smac.model.gaussian_process.abstract_gaussian_process": [[65, "module-smac.model.gaussian_process.abstract_gaussian_process"]], "gaussianprocess (class in smac.model.gaussian_process.gaussian_process)": [[66, "smac.model.gaussian_process.gaussian_process.GaussianProcess"]], "meta (smac.model.gaussian_process.gaussian_process.gaussianprocess property)": [[66, "smac.model.gaussian_process.gaussian_process.GaussianProcess.meta"]], "sample_functions() (smac.model.gaussian_process.gaussian_process.gaussianprocess method)": [[66, "smac.model.gaussian_process.gaussian_process.GaussianProcess.sample_functions"]], "smac.model.gaussian_process.gaussian_process": [[66, "module-smac.model.gaussian_process.gaussian_process"]], "smac.model.gaussian_process.gpytorch_gaussian_process": [[67, "module-smac.model.gaussian_process.gpytorch_gaussian_process"]], "abstractkernel (class in smac.model.gaussian_process.kernels)": [[68, "smac.model.gaussian_process.kernels.AbstractKernel"]], "constantkernel (class in smac.model.gaussian_process.kernels)": [[68, "smac.model.gaussian_process.kernels.ConstantKernel"]], "hammingkernel (class in smac.model.gaussian_process.kernels)": [[68, "smac.model.gaussian_process.kernels.HammingKernel"]], "maternkernel (class in smac.model.gaussian_process.kernels)": [[68, "smac.model.gaussian_process.kernels.MaternKernel"]], "productkernel (class in smac.model.gaussian_process.kernels)": [[68, "smac.model.gaussian_process.kernels.ProductKernel"]], "rbfkernel (class in smac.model.gaussian_process.kernels)": [[68, "smac.model.gaussian_process.kernels.RBFKernel"]], "sumkernel (class in smac.model.gaussian_process.kernels)": [[68, "smac.model.gaussian_process.kernels.SumKernel"]], "whitekernel (class in smac.model.gaussian_process.kernels)": [[68, "smac.model.gaussian_process.kernels.WhiteKernel"]], "__call__() (smac.model.gaussian_process.kernels.abstractkernel method)": [[68, "smac.model.gaussian_process.kernels.AbstractKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.constantkernel method)": [[68, "smac.model.gaussian_process.kernels.ConstantKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.productkernel method)": [[68, "smac.model.gaussian_process.kernels.ProductKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.sumkernel method)": [[68, "smac.model.gaussian_process.kernels.SumKernel.__call__"]], "get_params() (smac.model.gaussian_process.kernels.abstractkernel method)": [[68, "smac.model.gaussian_process.kernels.AbstractKernel.get_params"]], "has_conditions (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[68, "smac.model.gaussian_process.kernels.AbstractKernel.has_conditions"]], "hyperparameter_length_scale (smac.model.gaussian_process.kernels.hammingkernel property)": [[68, "smac.model.gaussian_process.kernels.HammingKernel.hyperparameter_length_scale"]], "hyperparameters (smac.model.gaussian_process.kernels.abstractkernel property)": [[68, "smac.model.gaussian_process.kernels.AbstractKernel.hyperparameters"]], "meta (smac.model.gaussian_process.kernels.abstractkernel property)": [[68, "smac.model.gaussian_process.kernels.AbstractKernel.meta"]], "meta (smac.model.gaussian_process.kernels.hammingkernel property)": [[68, "smac.model.gaussian_process.kernels.HammingKernel.meta"]], "n_dims (smac.model.gaussian_process.kernels.abstractkernel property)": [[68, "smac.model.gaussian_process.kernels.AbstractKernel.n_dims"]], "operate_on (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[68, "smac.model.gaussian_process.kernels.AbstractKernel.operate_on"]], "prior (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[68, "smac.model.gaussian_process.kernels.AbstractKernel.prior"]], "smac.model.gaussian_process.kernels": [[68, "module-smac.model.gaussian_process.kernels"]], "abstractkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[69, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel"]], "constantkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[69, "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel"]], "productkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[69, "smac.model.gaussian_process.kernels.base_kernels.ProductKernel"]], "sumkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[69, "smac.model.gaussian_process.kernels.base_kernels.SumKernel"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.abstractkernel method)": [[69, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.constantkernel method)": [[69, "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.productkernel method)": [[69, "smac.model.gaussian_process.kernels.base_kernels.ProductKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.sumkernel method)": [[69, "smac.model.gaussian_process.kernels.base_kernels.SumKernel.__call__"]], "get_params() (smac.model.gaussian_process.kernels.base_kernels.abstractkernel method)": [[69, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.get_params"]], "has_conditions (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[69, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.has_conditions"]], "hyperparameters (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[69, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.hyperparameters"]], "meta (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[69, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.meta"]], "n_dims (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[69, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.n_dims"]], "operate_on (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[69, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.operate_on"]], "prior (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[69, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.prior"]], "smac.model.gaussian_process.kernels.base_kernels": [[69, "module-smac.model.gaussian_process.kernels.base_kernels"]], "hammingkernel (class in smac.model.gaussian_process.kernels.hamming_kernel)": [[70, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel"]], "hyperparameter_length_scale (smac.model.gaussian_process.kernels.hamming_kernel.hammingkernel property)": [[70, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel.hyperparameter_length_scale"]], "meta (smac.model.gaussian_process.kernels.hamming_kernel.hammingkernel property)": [[70, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel.meta"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[70, "module-smac.model.gaussian_process.kernels.hamming_kernel"]], "maternkernel (class in smac.model.gaussian_process.kernels.matern_kernel)": [[71, "smac.model.gaussian_process.kernels.matern_kernel.MaternKernel"]], "smac.model.gaussian_process.kernels.matern_kernel": [[71, "module-smac.model.gaussian_process.kernels.matern_kernel"]], "rbfkernel (class in smac.model.gaussian_process.kernels.rbf_kernel)": [[72, "smac.model.gaussian_process.kernels.rbf_kernel.RBFKernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[72, "module-smac.model.gaussian_process.kernels.rbf_kernel"]], "whitekernel (class in smac.model.gaussian_process.kernels.white_kernel)": [[73, "smac.model.gaussian_process.kernels.white_kernel.WhiteKernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[73, "module-smac.model.gaussian_process.kernels.white_kernel"]], "mcmcgaussianprocess (class in smac.model.gaussian_process.mcmc_gaussian_process)": [[74, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess"]], "meta (smac.model.gaussian_process.mcmc_gaussian_process.mcmcgaussianprocess property)": [[74, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess.meta"]], "models (smac.model.gaussian_process.mcmc_gaussian_process.mcmcgaussianprocess property)": [[74, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess.models"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[74, "module-smac.model.gaussian_process.mcmc_gaussian_process"]], "gammaprior (class in smac.model.gaussian_process.priors)": [[75, "smac.model.gaussian_process.priors.GammaPrior"]], "horseshoeprior (class in smac.model.gaussian_process.priors)": [[75, "smac.model.gaussian_process.priors.HorseshoePrior"]], "lognormalprior (class in smac.model.gaussian_process.priors)": [[75, "smac.model.gaussian_process.priors.LogNormalPrior"]], "softtophatprior (class in smac.model.gaussian_process.priors)": [[75, "smac.model.gaussian_process.priors.SoftTopHatPrior"]], "tophatprior (class in smac.model.gaussian_process.priors)": [[75, "smac.model.gaussian_process.priors.TophatPrior"]], "get_gradient() (smac.model.gaussian_process.priors.softtophatprior method)": [[75, "smac.model.gaussian_process.priors.SoftTopHatPrior.get_gradient"]], "get_gradient() (smac.model.gaussian_process.priors.tophatprior method)": [[75, "smac.model.gaussian_process.priors.TophatPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.softtophatprior method)": [[75, "smac.model.gaussian_process.priors.SoftTopHatPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.gammaprior property)": [[75, "smac.model.gaussian_process.priors.GammaPrior.meta"]], "meta (smac.model.gaussian_process.priors.horseshoeprior property)": [[75, "smac.model.gaussian_process.priors.HorseshoePrior.meta"]], "meta (smac.model.gaussian_process.priors.lognormalprior property)": [[75, "smac.model.gaussian_process.priors.LogNormalPrior.meta"]], "meta (smac.model.gaussian_process.priors.softtophatprior property)": [[75, "smac.model.gaussian_process.priors.SoftTopHatPrior.meta"]], "meta (smac.model.gaussian_process.priors.tophatprior property)": [[75, "smac.model.gaussian_process.priors.TophatPrior.meta"]], "smac.model.gaussian_process.priors": [[75, "module-smac.model.gaussian_process.priors"]], "abstractprior (class in smac.model.gaussian_process.priors.abstract_prior)": [[76, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior"]], "get_gradient() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[76, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[76, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.abstract_prior.abstractprior property)": [[76, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.meta"]], "sample_from_prior() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[76, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.sample_from_prior"]], "smac.model.gaussian_process.priors.abstract_prior": [[76, "module-smac.model.gaussian_process.priors.abstract_prior"]], "gammaprior (class in smac.model.gaussian_process.priors.gamma_prior)": [[77, "smac.model.gaussian_process.priors.gamma_prior.GammaPrior"]], "meta (smac.model.gaussian_process.priors.gamma_prior.gammaprior property)": [[77, "smac.model.gaussian_process.priors.gamma_prior.GammaPrior.meta"]], "smac.model.gaussian_process.priors.gamma_prior": [[77, "module-smac.model.gaussian_process.priors.gamma_prior"]], "horseshoeprior (class in smac.model.gaussian_process.priors.horseshoe_prior)": [[78, "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior"]], "meta (smac.model.gaussian_process.priors.horseshoe_prior.horseshoeprior property)": [[78, "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior.meta"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[78, "module-smac.model.gaussian_process.priors.horseshoe_prior"]], "lognormalprior (class in smac.model.gaussian_process.priors.log_normal_prior)": [[79, "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior"]], "meta (smac.model.gaussian_process.priors.log_normal_prior.lognormalprior property)": [[79, "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior.meta"]], "smac.model.gaussian_process.priors.log_normal_prior": [[79, "module-smac.model.gaussian_process.priors.log_normal_prior"]], "softtophatprior (class in smac.model.gaussian_process.priors.tophat_prior)": [[80, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior"]], "tophatprior (class in smac.model.gaussian_process.priors.tophat_prior)": [[80, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior"]], "get_gradient() (smac.model.gaussian_process.priors.tophat_prior.softtophatprior method)": [[80, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.get_gradient"]], "get_gradient() (smac.model.gaussian_process.priors.tophat_prior.tophatprior method)": [[80, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.tophat_prior.softtophatprior method)": [[80, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.tophat_prior.softtophatprior property)": [[80, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.meta"]], "meta (smac.model.gaussian_process.priors.tophat_prior.tophatprior property)": [[80, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior.meta"]], "smac.model.gaussian_process.priors.tophat_prior": [[80, "module-smac.model.gaussian_process.priors.tophat_prior"]], "multiobjectivemodel (class in smac.model.multi_objective_model)": [[81, "smac.model.multi_objective_model.MultiObjectiveModel"]], "models (smac.model.multi_objective_model.multiobjectivemodel property)": [[81, "smac.model.multi_objective_model.MultiObjectiveModel.models"]], "predict_marginalized() (smac.model.multi_objective_model.multiobjectivemodel method)": [[81, "smac.model.multi_objective_model.MultiObjectiveModel.predict_marginalized"]], "smac.model.multi_objective_model": [[81, "module-smac.model.multi_objective_model"]], "abstractrandomforest (class in smac.model.random_forest)": [[82, "smac.model.random_forest.AbstractRandomForest"]], "randomforest (class in smac.model.random_forest)": [[82, "smac.model.random_forest.RandomForest"]], "meta (smac.model.random_forest.randomforest property)": [[82, "smac.model.random_forest.RandomForest.meta"]], "predict_marginalized() (smac.model.random_forest.randomforest method)": [[82, "smac.model.random_forest.RandomForest.predict_marginalized"]], "smac.model.random_forest": [[82, "module-smac.model.random_forest"]], "abstractrandomforest (class in smac.model.random_forest.abstract_random_forest)": [[83, "smac.model.random_forest.abstract_random_forest.AbstractRandomForest"]], "smac.model.random_forest.abstract_random_forest": [[83, "module-smac.model.random_forest.abstract_random_forest"]], "randomforest (class in smac.model.random_forest.random_forest)": [[84, "smac.model.random_forest.random_forest.RandomForest"]], "meta (smac.model.random_forest.random_forest.randomforest property)": [[84, "smac.model.random_forest.random_forest.RandomForest.meta"]], "predict_marginalized() (smac.model.random_forest.random_forest.randomforest method)": [[84, "smac.model.random_forest.random_forest.RandomForest.predict_marginalized"]], "smac.model.random_forest.random_forest": [[84, "module-smac.model.random_forest.random_forest"]], "randommodel (class in smac.model.random_model)": [[85, "smac.model.random_model.RandomModel"]], "smac.model.random_model": [[85, "module-smac.model.random_model"]], "abstractmultiobjectivealgorithm (class in smac.multi_objective)": [[86, "smac.multi_objective.AbstractMultiObjectiveAlgorithm"]], "meanaggregationstrategy (class in smac.multi_objective)": [[86, "smac.multi_objective.MeanAggregationStrategy"]], "parego (class in smac.multi_objective)": [[86, "smac.multi_objective.ParEGO"]], "__call__() (smac.multi_objective.abstractmultiobjectivealgorithm method)": [[86, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.__call__"]], "__call__() (smac.multi_objective.meanaggregationstrategy method)": [[86, "smac.multi_objective.MeanAggregationStrategy.__call__"]], "__call__() (smac.multi_objective.parego method)": [[86, "smac.multi_objective.ParEGO.__call__"]], "meta (smac.multi_objective.abstractmultiobjectivealgorithm property)": [[86, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.meta"]], "meta (smac.multi_objective.meanaggregationstrategy property)": [[86, "smac.multi_objective.MeanAggregationStrategy.meta"]], "meta (smac.multi_objective.parego property)": [[86, "smac.multi_objective.ParEGO.meta"]], "smac.multi_objective": [[86, "module-smac.multi_objective"]], "update_on_iteration_start() (smac.multi_objective.abstractmultiobjectivealgorithm method)": [[86, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.update_on_iteration_start"]], "update_on_iteration_start() (smac.multi_objective.parego method)": [[86, "smac.multi_objective.ParEGO.update_on_iteration_start"]], "abstractmultiobjectivealgorithm (class in smac.multi_objective.abstract_multi_objective_algorithm)": [[87, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm"]], "__call__() (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm method)": [[87, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.__call__"]], "meta (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm property)": [[87, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.meta"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[87, "module-smac.multi_objective.abstract_multi_objective_algorithm"]], "update_on_iteration_start() (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm method)": [[87, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.update_on_iteration_start"]], "meanaggregationstrategy (class in smac.multi_objective.aggregation_strategy)": [[88, "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy"]], "__call__() (smac.multi_objective.aggregation_strategy.meanaggregationstrategy method)": [[88, "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy.__call__"]], "meta (smac.multi_objective.aggregation_strategy.meanaggregationstrategy property)": [[88, "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy.meta"]], "smac.multi_objective.aggregation_strategy": [[88, "module-smac.multi_objective.aggregation_strategy"]], "parego (class in smac.multi_objective.parego)": [[89, "smac.multi_objective.parego.ParEGO"]], "__call__() (smac.multi_objective.parego.parego method)": [[89, "smac.multi_objective.parego.ParEGO.__call__"]], "meta (smac.multi_objective.parego.parego property)": [[89, "smac.multi_objective.parego.ParEGO.meta"]], "smac.multi_objective.parego": [[89, "module-smac.multi_objective.parego"]], "update_on_iteration_start() (smac.multi_objective.parego.parego method)": [[89, "smac.multi_objective.parego.ParEGO.update_on_iteration_start"]], "abstractrandomdesign (class in smac.random_design)": [[90, "smac.random_design.AbstractRandomDesign"]], "cosineannealingrandomdesign (class in smac.random_design)": [[90, "smac.random_design.CosineAnnealingRandomDesign"]], "dynamicmodulusrandomdesign (class in smac.random_design)": [[90, "smac.random_design.DynamicModulusRandomDesign"]], "dynamicprobabilityrandomdesign (class in smac.random_design)": [[90, "smac.random_design.DynamicProbabilityRandomDesign"]], "modulusrandomdesign (class in smac.random_design)": [[90, "smac.random_design.ModulusRandomDesign"]], "probabilityrandomdesign (class in smac.random_design)": [[90, "smac.random_design.ProbabilityRandomDesign"]], "check() (smac.random_design.abstractrandomdesign method)": [[90, "smac.random_design.AbstractRandomDesign.check"]], "check() (smac.random_design.cosineannealingrandomdesign method)": [[90, "smac.random_design.CosineAnnealingRandomDesign.check"]], "check() (smac.random_design.dynamicmodulusrandomdesign method)": [[90, "smac.random_design.DynamicModulusRandomDesign.check"]], "check() (smac.random_design.dynamicprobabilityrandomdesign method)": [[90, "smac.random_design.DynamicProbabilityRandomDesign.check"]], "check() (smac.random_design.modulusrandomdesign method)": [[90, "smac.random_design.ModulusRandomDesign.check"]], "check() (smac.random_design.probabilityrandomdesign method)": [[90, "smac.random_design.ProbabilityRandomDesign.check"]], "meta (smac.random_design.abstractrandomdesign property)": [[90, "smac.random_design.AbstractRandomDesign.meta"]], "meta (smac.random_design.cosineannealingrandomdesign property)": [[90, "smac.random_design.CosineAnnealingRandomDesign.meta"]], "meta (smac.random_design.dynamicmodulusrandomdesign property)": [[90, "smac.random_design.DynamicModulusRandomDesign.meta"]], "meta (smac.random_design.dynamicprobabilityrandomdesign property)": [[90, "smac.random_design.DynamicProbabilityRandomDesign.meta"]], "meta (smac.random_design.modulusrandomdesign property)": [[90, "smac.random_design.ModulusRandomDesign.meta"]], "meta (smac.random_design.probabilityrandomdesign property)": [[90, "smac.random_design.ProbabilityRandomDesign.meta"]], "next_iteration() (smac.random_design.abstractrandomdesign method)": [[90, "smac.random_design.AbstractRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.cosineannealingrandomdesign method)": [[90, "smac.random_design.CosineAnnealingRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.dynamicmodulusrandomdesign method)": [[90, "smac.random_design.DynamicModulusRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.dynamicprobabilityrandomdesign method)": [[90, "smac.random_design.DynamicProbabilityRandomDesign.next_iteration"]], "smac.random_design": [[90, "module-smac.random_design"]], "abstractrandomdesign (class in smac.random_design.abstract_random_design)": [[91, "smac.random_design.abstract_random_design.AbstractRandomDesign"]], "check() (smac.random_design.abstract_random_design.abstractrandomdesign method)": [[91, "smac.random_design.abstract_random_design.AbstractRandomDesign.check"]], "meta (smac.random_design.abstract_random_design.abstractrandomdesign property)": [[91, "smac.random_design.abstract_random_design.AbstractRandomDesign.meta"]], "next_iteration() (smac.random_design.abstract_random_design.abstractrandomdesign method)": [[91, "smac.random_design.abstract_random_design.AbstractRandomDesign.next_iteration"]], "smac.random_design.abstract_random_design": [[91, "module-smac.random_design.abstract_random_design"]], "cosineannealingrandomdesign (class in smac.random_design.annealing_design)": [[92, "smac.random_design.annealing_design.CosineAnnealingRandomDesign"]], "check() (smac.random_design.annealing_design.cosineannealingrandomdesign method)": [[92, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.check"]], "meta (smac.random_design.annealing_design.cosineannealingrandomdesign property)": [[92, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.meta"]], "next_iteration() (smac.random_design.annealing_design.cosineannealingrandomdesign method)": [[92, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.next_iteration"]], "smac.random_design.annealing_design": [[92, "module-smac.random_design.annealing_design"]], "dynamicmodulusrandomdesign (class in smac.random_design.modulus_design)": [[93, "smac.random_design.modulus_design.DynamicModulusRandomDesign"]], "modulusrandomdesign (class in smac.random_design.modulus_design)": [[93, "smac.random_design.modulus_design.ModulusRandomDesign"]], "check() (smac.random_design.modulus_design.dynamicmodulusrandomdesign method)": [[93, "smac.random_design.modulus_design.DynamicModulusRandomDesign.check"]], "check() (smac.random_design.modulus_design.modulusrandomdesign method)": [[93, "smac.random_design.modulus_design.ModulusRandomDesign.check"]], "meta (smac.random_design.modulus_design.dynamicmodulusrandomdesign property)": [[93, "smac.random_design.modulus_design.DynamicModulusRandomDesign.meta"]], "meta (smac.random_design.modulus_design.modulusrandomdesign property)": [[93, "smac.random_design.modulus_design.ModulusRandomDesign.meta"]], "next_iteration() (smac.random_design.modulus_design.dynamicmodulusrandomdesign method)": [[93, "smac.random_design.modulus_design.DynamicModulusRandomDesign.next_iteration"]], "smac.random_design.modulus_design": [[93, "module-smac.random_design.modulus_design"]], "dynamicprobabilityrandomdesign (class in smac.random_design.probability_design)": [[94, "smac.random_design.probability_design.DynamicProbabilityRandomDesign"]], "probabilityrandomdesign (class in smac.random_design.probability_design)": [[94, "smac.random_design.probability_design.ProbabilityRandomDesign"]], "check() (smac.random_design.probability_design.dynamicprobabilityrandomdesign method)": [[94, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.check"]], "check() (smac.random_design.probability_design.probabilityrandomdesign method)": [[94, "smac.random_design.probability_design.ProbabilityRandomDesign.check"]], "meta (smac.random_design.probability_design.dynamicprobabilityrandomdesign property)": [[94, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.meta"]], "meta (smac.random_design.probability_design.probabilityrandomdesign property)": [[94, "smac.random_design.probability_design.ProbabilityRandomDesign.meta"]], "next_iteration() (smac.random_design.probability_design.dynamicprobabilityrandomdesign method)": [[94, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.next_iteration"]], "smac.random_design.probability_design": [[94, "module-smac.random_design.probability_design"]], "instanceseedbudgetkey (class in smac.runhistory)": [[95, "smac.runhistory.InstanceSeedBudgetKey"]], "instanceseedkey (class in smac.runhistory)": [[95, "smac.runhistory.InstanceSeedKey"]], "runhistory (class in smac.runhistory)": [[95, "smac.runhistory.RunHistory"]], "statustype (class in smac.runhistory)": [[95, "smac.runhistory.StatusType"]], "trialinfo (class in smac.runhistory)": [[95, "smac.runhistory.TrialInfo"]], "trialkey (class in smac.runhistory)": [[95, "smac.runhistory.TrialKey"]], "trialvalue (class in smac.runhistory)": [[95, "smac.runhistory.TrialValue"]], "__contains__() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.__contains__"]], "__eq__() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.__eq__"]], "__getitem__() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.__getitem__"]], "__iter__() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.__iter__"]], "__len__() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.__len__"]], "add() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.add"]], "add_running_trial() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.add_running_trial"]], "add_trial() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.add_trial"]], "average_cost() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.average_cost"]], "config_ids (smac.runhistory.runhistory property)": [[95, "smac.runhistory.RunHistory.config_ids"]], "empty() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.empty"]], "finished (smac.runhistory.runhistory property)": [[95, "smac.runhistory.RunHistory.finished"]], "get_config() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.get_config"]], "get_config_id() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.get_config_id"]], "get_configs() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.get_configs"]], "get_configs_per_budget() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.get_configs_per_budget"]], "get_cost() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.get_cost"]], "get_instance_seed_budget_key() (smac.runhistory.trialinfo method)": [[95, "smac.runhistory.TrialInfo.get_instance_seed_budget_key"]], "get_instance_seed_budget_keys() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.get_instance_seed_budget_keys"]], "get_instance_seed_key() (smac.runhistory.instanceseedbudgetkey method)": [[95, "smac.runhistory.InstanceSeedBudgetKey.get_instance_seed_key"]], "get_instance_seed_key() (smac.runhistory.trialinfo method)": [[95, "smac.runhistory.TrialInfo.get_instance_seed_key"]], "get_min_cost() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.get_min_cost"]], "get_running_configs() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.get_running_configs"]], "get_running_trials() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.get_running_trials"]], "get_trials() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.get_trials"]], "ids_config (smac.runhistory.runhistory property)": [[95, "smac.runhistory.RunHistory.ids_config"]], "incremental_update_cost() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.incremental_update_cost"]], "load() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.load"]], "min_cost() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.min_cost"]], "multi_objective_algorithm (smac.runhistory.runhistory property)": [[95, "smac.runhistory.RunHistory.multi_objective_algorithm"]], "objective_bounds (smac.runhistory.runhistory property)": [[95, "smac.runhistory.RunHistory.objective_bounds"]], "reset() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.reset"]], "running (smac.runhistory.runhistory property)": [[95, "smac.runhistory.RunHistory.running"]], "save() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.save"]], "smac.runhistory": [[95, "module-smac.runhistory"]], "submitted (smac.runhistory.runhistory property)": [[95, "smac.runhistory.RunHistory.submitted"]], "sum_cost() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.sum_cost"]], "update() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.update"]], "update_cost() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.update_cost"]], "update_costs() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.update_costs"]], "update_from_json() (smac.runhistory.runhistory method)": [[95, "smac.runhistory.RunHistory.update_from_json"]], "instanceseedbudgetkey (class in smac.runhistory.dataclasses)": [[96, "smac.runhistory.dataclasses.InstanceSeedBudgetKey"]], "instanceseedkey (class in smac.runhistory.dataclasses)": [[96, "smac.runhistory.dataclasses.InstanceSeedKey"]], "trajectoryitem (class in smac.runhistory.dataclasses)": [[96, "smac.runhistory.dataclasses.TrajectoryItem"]], "trialinfo (class in smac.runhistory.dataclasses)": [[96, "smac.runhistory.dataclasses.TrialInfo"]], "trialkey (class in smac.runhistory.dataclasses)": [[96, "smac.runhistory.dataclasses.TrialKey"]], "trialvalue (class in smac.runhistory.dataclasses)": [[96, "smac.runhistory.dataclasses.TrialValue"]], "get_instance_seed_budget_key() (smac.runhistory.dataclasses.trialinfo method)": [[96, "smac.runhistory.dataclasses.TrialInfo.get_instance_seed_budget_key"]], "get_instance_seed_key() (smac.runhistory.dataclasses.instanceseedbudgetkey method)": [[96, "smac.runhistory.dataclasses.InstanceSeedBudgetKey.get_instance_seed_key"]], "get_instance_seed_key() (smac.runhistory.dataclasses.trialinfo method)": [[96, "smac.runhistory.dataclasses.TrialInfo.get_instance_seed_key"]], "smac.runhistory.dataclasses": [[96, "module-smac.runhistory.dataclasses"]], "abstractrunhistoryencoder (class in smac.runhistory.encoder)": [[97, "smac.runhistory.encoder.AbstractRunHistoryEncoder"]], "runhistoryeipsencoder (class in smac.runhistory.encoder)": [[97, "smac.runhistory.encoder.RunHistoryEIPSEncoder"]], "runhistoryencoder (class in smac.runhistory.encoder)": [[97, "smac.runhistory.encoder.RunHistoryEncoder"]], "runhistoryinversescaledencoder (class in smac.runhistory.encoder)": [[97, "smac.runhistory.encoder.RunHistoryInverseScaledEncoder"]], "runhistorylogencoder (class in smac.runhistory.encoder)": [[97, "smac.runhistory.encoder.RunHistoryLogEncoder"]], "runhistorylogscaledencoder (class in smac.runhistory.encoder)": [[97, "smac.runhistory.encoder.RunHistoryLogScaledEncoder"]], "runhistoryscaledencoder (class in smac.runhistory.encoder)": [[97, "smac.runhistory.encoder.RunHistoryScaledEncoder"]], "runhistorysqrtscaledencoder (class in smac.runhistory.encoder)": [[97, "smac.runhistory.encoder.RunHistorySqrtScaledEncoder"]], "get_configurations() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[97, "smac.runhistory.encoder.AbstractRunHistoryEncoder.get_configurations"]], "meta (smac.runhistory.encoder.abstractrunhistoryencoder property)": [[97, "smac.runhistory.encoder.AbstractRunHistoryEncoder.meta"]], "multi_objective_algorithm (smac.runhistory.encoder.abstractrunhistoryencoder property)": [[97, "smac.runhistory.encoder.AbstractRunHistoryEncoder.multi_objective_algorithm"]], "runhistory (smac.runhistory.encoder.abstractrunhistoryencoder property)": [[97, "smac.runhistory.encoder.AbstractRunHistoryEncoder.runhistory"]], "smac.runhistory.encoder": [[97, "module-smac.runhistory.encoder"]], "transform() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[97, "smac.runhistory.encoder.AbstractRunHistoryEncoder.transform"]], "transform_response_values() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[97, "smac.runhistory.encoder.AbstractRunHistoryEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryeipsencoder method)": [[97, "smac.runhistory.encoder.RunHistoryEIPSEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryencoder method)": [[97, "smac.runhistory.encoder.RunHistoryEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryinversescaledencoder method)": [[97, "smac.runhistory.encoder.RunHistoryInverseScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorylogencoder method)": [[97, "smac.runhistory.encoder.RunHistoryLogEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorylogscaledencoder method)": [[97, "smac.runhistory.encoder.RunHistoryLogScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryscaledencoder method)": [[97, "smac.runhistory.encoder.RunHistoryScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorysqrtscaledencoder method)": [[97, "smac.runhistory.encoder.RunHistorySqrtScaledEncoder.transform_response_values"]], "abstractrunhistoryencoder (class in smac.runhistory.encoder.abstract_encoder)": [[98, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder"]], "get_configurations() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[98, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.get_configurations"]], "meta (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder property)": [[98, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.meta"]], "multi_objective_algorithm (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder property)": [[98, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.multi_objective_algorithm"]], "runhistory (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder property)": [[98, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.runhistory"]], "smac.runhistory.encoder.abstract_encoder": [[98, "module-smac.runhistory.encoder.abstract_encoder"]], "transform() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[98, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.transform"]], "transform_response_values() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[98, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.transform_response_values"]], "smac.runhistory.encoder.boing_encoder": [[99, "module-smac.runhistory.encoder.boing_encoder"]], "runhistoryeipsencoder (class in smac.runhistory.encoder.eips_encoder)": [[100, "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder"]], "smac.runhistory.encoder.eips_encoder": [[100, "module-smac.runhistory.encoder.eips_encoder"]], "transform_response_values() (smac.runhistory.encoder.eips_encoder.runhistoryeipsencoder method)": [[100, "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder.transform_response_values"]], "runhistoryencoder (class in smac.runhistory.encoder.encoder)": [[101, "smac.runhistory.encoder.encoder.RunHistoryEncoder"]], "smac.runhistory.encoder.encoder": [[101, "module-smac.runhistory.encoder.encoder"]], "transform_response_values() (smac.runhistory.encoder.encoder.runhistoryencoder method)": [[101, "smac.runhistory.encoder.encoder.RunHistoryEncoder.transform_response_values"]], "runhistoryinversescaledencoder (class in smac.runhistory.encoder.inverse_scaled_encoder)": [[102, "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[102, "module-smac.runhistory.encoder.inverse_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.inverse_scaled_encoder.runhistoryinversescaledencoder method)": [[102, "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder.transform_response_values"]], "runhistorylogencoder (class in smac.runhistory.encoder.log_encoder)": [[103, "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder"]], "smac.runhistory.encoder.log_encoder": [[103, "module-smac.runhistory.encoder.log_encoder"]], "transform_response_values() (smac.runhistory.encoder.log_encoder.runhistorylogencoder method)": [[103, "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder.transform_response_values"]], "runhistorylogscaledencoder (class in smac.runhistory.encoder.log_scaled_encoder)": [[104, "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder"]], "smac.runhistory.encoder.log_scaled_encoder": [[104, "module-smac.runhistory.encoder.log_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.log_scaled_encoder.runhistorylogscaledencoder method)": [[104, "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder.transform_response_values"]], "runhistoryscaledencoder (class in smac.runhistory.encoder.scaled_encoder)": [[105, "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder"]], "smac.runhistory.encoder.scaled_encoder": [[105, "module-smac.runhistory.encoder.scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.scaled_encoder.runhistoryscaledencoder method)": [[105, "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder.transform_response_values"]], "runhistorysqrtscaledencoder (class in smac.runhistory.encoder.sqrt_scaled_encoder)": [[106, "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[106, "module-smac.runhistory.encoder.sqrt_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.sqrt_scaled_encoder.runhistorysqrtscaledencoder method)": [[106, "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder.transform_response_values"]], "statustype (class in smac.runhistory.enumerations)": [[107, "smac.runhistory.enumerations.StatusType"]], "smac.runhistory.enumerations": [[107, "module-smac.runhistory.enumerations"]], "notevaluatederror": [[108, "smac.runhistory.errors.NotEvaluatedError"]], "smac.runhistory.errors": [[108, "module-smac.runhistory.errors"]], "runhistory (class in smac.runhistory.runhistory)": [[109, "smac.runhistory.runhistory.RunHistory"]], "__contains__() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.__contains__"]], "__eq__() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.__eq__"]], "__getitem__() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.__getitem__"]], "__iter__() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.__iter__"]], "__len__() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.__len__"]], "add() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.add"]], "add_running_trial() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.add_running_trial"]], "add_trial() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.add_trial"]], "average_cost() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.average_cost"]], "config_ids (smac.runhistory.runhistory.runhistory property)": [[109, "smac.runhistory.runhistory.RunHistory.config_ids"]], "empty() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.empty"]], "finished (smac.runhistory.runhistory.runhistory property)": [[109, "smac.runhistory.runhistory.RunHistory.finished"]], "get_config() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.get_config"]], "get_config_id() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.get_config_id"]], "get_configs() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.get_configs"]], "get_configs_per_budget() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.get_configs_per_budget"]], "get_cost() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.get_cost"]], "get_instance_seed_budget_keys() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.get_instance_seed_budget_keys"]], "get_min_cost() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.get_min_cost"]], "get_running_configs() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.get_running_configs"]], "get_running_trials() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.get_running_trials"]], "get_trials() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.get_trials"]], "ids_config (smac.runhistory.runhistory.runhistory property)": [[109, "smac.runhistory.runhistory.RunHistory.ids_config"]], "incremental_update_cost() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.incremental_update_cost"]], "load() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.load"]], "min_cost() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.min_cost"]], "multi_objective_algorithm (smac.runhistory.runhistory.runhistory property)": [[109, "smac.runhistory.runhistory.RunHistory.multi_objective_algorithm"]], "objective_bounds (smac.runhistory.runhistory.runhistory property)": [[109, "smac.runhistory.runhistory.RunHistory.objective_bounds"]], "reset() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.reset"]], "running (smac.runhistory.runhistory.runhistory property)": [[109, "smac.runhistory.runhistory.RunHistory.running"]], "save() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.save"]], "smac.runhistory.runhistory": [[109, "module-smac.runhistory.runhistory"]], "submitted (smac.runhistory.runhistory.runhistory property)": [[109, "smac.runhistory.runhistory.RunHistory.submitted"]], "sum_cost() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.sum_cost"]], "update() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.update"]], "update_cost() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.update_cost"]], "update_costs() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.update_costs"]], "update_from_json() (smac.runhistory.runhistory.runhistory method)": [[109, "smac.runhistory.runhistory.RunHistory.update_from_json"]], "abstractrunner (class in smac.runner)": [[110, "smac.runner.AbstractRunner"]], "daskparallelrunner (class in smac.runner)": [[110, "smac.runner.DaskParallelRunner"]], "firstruncrashedexception": [[110, "smac.runner.FirstRunCrashedException"], [114, "smac.runner.exceptions.FirstRunCrashedException"]], "targetalgorithmabortexception": [[110, "smac.runner.TargetAlgorithmAbortException"], [114, "smac.runner.exceptions.TargetAlgorithmAbortException"]], "targetfunctionrunner (class in smac.runner)": [[110, "smac.runner.TargetFunctionRunner"]], "__call__() (smac.runner.targetfunctionrunner method)": [[110, "smac.runner.TargetFunctionRunner.__call__"]], "__del__() (smac.runner.daskparallelrunner method)": [[110, "smac.runner.DaskParallelRunner.__del__"]], "close() (smac.runner.daskparallelrunner method)": [[110, "smac.runner.DaskParallelRunner.close"]], "count_available_workers() (smac.runner.abstractrunner method)": [[110, "smac.runner.AbstractRunner.count_available_workers"]], "count_available_workers() (smac.runner.daskparallelrunner method)": [[110, "smac.runner.DaskParallelRunner.count_available_workers"]], "is_running() (smac.runner.abstractrunner method)": [[110, "smac.runner.AbstractRunner.is_running"]], "is_running() (smac.runner.daskparallelrunner method)": [[110, "smac.runner.DaskParallelRunner.is_running"]], "iter_results() (smac.runner.abstractrunner method)": [[110, "smac.runner.AbstractRunner.iter_results"]], "iter_results() (smac.runner.daskparallelrunner method)": [[110, "smac.runner.DaskParallelRunner.iter_results"]], "meta (smac.runner.abstractrunner property)": [[110, "smac.runner.AbstractRunner.meta"]], "meta (smac.runner.targetfunctionrunner property)": [[110, "smac.runner.TargetFunctionRunner.meta"]], "run() (smac.runner.abstractrunner method)": [[110, "smac.runner.AbstractRunner.run"]], "run() (smac.runner.daskparallelrunner method)": [[110, "smac.runner.DaskParallelRunner.run"]], "run() (smac.runner.targetfunctionrunner method)": [[110, "smac.runner.TargetFunctionRunner.run"]], "run_wrapper() (smac.runner.abstractrunner method)": [[110, "smac.runner.AbstractRunner.run_wrapper"]], "smac.runner": [[110, "module-smac.runner"]], "submit_trial() (smac.runner.abstractrunner method)": [[110, "smac.runner.AbstractRunner.submit_trial"]], "submit_trial() (smac.runner.daskparallelrunner method)": [[110, "smac.runner.DaskParallelRunner.submit_trial"]], "wait() (smac.runner.abstractrunner method)": [[110, "smac.runner.AbstractRunner.wait"]], "wait() (smac.runner.daskparallelrunner method)": [[110, "smac.runner.DaskParallelRunner.wait"]], "abstractrunner (class in smac.runner.abstract_runner)": [[111, "smac.runner.abstract_runner.AbstractRunner"]], "count_available_workers() (smac.runner.abstract_runner.abstractrunner method)": [[111, "smac.runner.abstract_runner.AbstractRunner.count_available_workers"]], "is_running() (smac.runner.abstract_runner.abstractrunner method)": [[111, "smac.runner.abstract_runner.AbstractRunner.is_running"]], "iter_results() (smac.runner.abstract_runner.abstractrunner method)": [[111, "smac.runner.abstract_runner.AbstractRunner.iter_results"]], "meta (smac.runner.abstract_runner.abstractrunner property)": [[111, "smac.runner.abstract_runner.AbstractRunner.meta"]], "run() (smac.runner.abstract_runner.abstractrunner method)": [[111, "smac.runner.abstract_runner.AbstractRunner.run"]], "run_wrapper() (smac.runner.abstract_runner.abstractrunner method)": [[111, "smac.runner.abstract_runner.AbstractRunner.run_wrapper"]], "smac.runner.abstract_runner": [[111, "module-smac.runner.abstract_runner"]], "submit_trial() (smac.runner.abstract_runner.abstractrunner method)": [[111, "smac.runner.abstract_runner.AbstractRunner.submit_trial"]], "wait() (smac.runner.abstract_runner.abstractrunner method)": [[111, "smac.runner.abstract_runner.AbstractRunner.wait"]], "abstractserialrunner (class in smac.runner.abstract_serial_runner)": [[112, "smac.runner.abstract_serial_runner.AbstractSerialRunner"]], "count_available_workers() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[112, "smac.runner.abstract_serial_runner.AbstractSerialRunner.count_available_workers"]], "is_running() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[112, "smac.runner.abstract_serial_runner.AbstractSerialRunner.is_running"]], "iter_results() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[112, "smac.runner.abstract_serial_runner.AbstractSerialRunner.iter_results"]], "smac.runner.abstract_serial_runner": [[112, "module-smac.runner.abstract_serial_runner"]], "submit_trial() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[112, "smac.runner.abstract_serial_runner.AbstractSerialRunner.submit_trial"]], "wait() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[112, "smac.runner.abstract_serial_runner.AbstractSerialRunner.wait"]], "daskparallelrunner (class in smac.runner.dask_runner)": [[113, "smac.runner.dask_runner.DaskParallelRunner"]], "__del__() (smac.runner.dask_runner.daskparallelrunner method)": [[113, "smac.runner.dask_runner.DaskParallelRunner.__del__"]], "close() (smac.runner.dask_runner.daskparallelrunner method)": [[113, "smac.runner.dask_runner.DaskParallelRunner.close"]], "count_available_workers() (smac.runner.dask_runner.daskparallelrunner method)": [[113, "smac.runner.dask_runner.DaskParallelRunner.count_available_workers"]], "is_running() (smac.runner.dask_runner.daskparallelrunner method)": [[113, "smac.runner.dask_runner.DaskParallelRunner.is_running"]], "iter_results() (smac.runner.dask_runner.daskparallelrunner method)": [[113, "smac.runner.dask_runner.DaskParallelRunner.iter_results"]], "run() (smac.runner.dask_runner.daskparallelrunner method)": [[113, "smac.runner.dask_runner.DaskParallelRunner.run"]], "smac.runner.dask_runner": [[113, "module-smac.runner.dask_runner"]], "submit_trial() (smac.runner.dask_runner.daskparallelrunner method)": [[113, "smac.runner.dask_runner.DaskParallelRunner.submit_trial"]], "wait() (smac.runner.dask_runner.daskparallelrunner method)": [[113, "smac.runner.dask_runner.DaskParallelRunner.wait"]], "smac.runner.exceptions": [[114, "module-smac.runner.exceptions"]], "targetfunctionrunner (class in smac.runner.target_function_runner)": [[115, "smac.runner.target_function_runner.TargetFunctionRunner"]], "__call__() (smac.runner.target_function_runner.targetfunctionrunner method)": [[115, "smac.runner.target_function_runner.TargetFunctionRunner.__call__"]], "meta (smac.runner.target_function_runner.targetfunctionrunner property)": [[115, "smac.runner.target_function_runner.TargetFunctionRunner.meta"]], "run() (smac.runner.target_function_runner.targetfunctionrunner method)": [[115, "smac.runner.target_function_runner.TargetFunctionRunner.run"]], "smac.runner.target_function_runner": [[115, "module-smac.runner.target_function_runner"]], "targetfunctionscriptrunner (class in smac.runner.target_function_script_runner)": [[116, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner"]], "__call__() (smac.runner.target_function_script_runner.targetfunctionscriptrunner method)": [[116, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner.__call__"]], "meta (smac.runner.target_function_script_runner.targetfunctionscriptrunner property)": [[116, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner.meta"]], "run() (smac.runner.target_function_script_runner.targetfunctionscriptrunner method)": [[116, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner.run"]], "smac.runner.target_function_script_runner": [[116, "module-smac.runner.target_function_script_runner"]], "scenario (class in smac.scenario)": [[117, "smac.scenario.Scenario"]], "__post_init__() (smac.scenario.scenario method)": [[117, "smac.scenario.Scenario.__post_init__"]], "count_instance_features() (smac.scenario.scenario method)": [[117, "smac.scenario.Scenario.count_instance_features"]], "count_objectives() (smac.scenario.scenario method)": [[117, "smac.scenario.Scenario.count_objectives"]], "load() (smac.scenario.scenario static method)": [[117, "smac.scenario.Scenario.load"]], "make_serializable() (smac.scenario.scenario static method)": [[117, "smac.scenario.Scenario.make_serializable"]], "meta (smac.scenario.scenario property)": [[117, "smac.scenario.Scenario.meta"]], "save() (smac.scenario.scenario method)": [[117, "smac.scenario.Scenario.save"]], "smac.scenario": [[117, "module-smac.scenario"]], "smac.utils": [[118, "module-smac.utils"]], "convert_configurations_to_array() (in module smac.utils.configspace)": [[119, "smac.utils.configspace.convert_configurations_to_array"]], "get_conditional_hyperparameters() (in module smac.utils.configspace)": [[119, "smac.utils.configspace.get_conditional_hyperparameters"]], "get_config_hash() (in module smac.utils.configspace)": [[119, "smac.utils.configspace.get_config_hash"]], "get_types() (in module smac.utils.configspace)": [[119, "smac.utils.configspace.get_types"]], "print_config_changes() (in module smac.utils.configspace)": [[119, "smac.utils.configspace.print_config_changes"]], "smac.utils.configspace": [[119, "module-smac.utils.configspace"]], "batch() (in module smac.utils.data_structures)": [[120, "smac.utils.data_structures.batch"]], "recursively_compare_dicts() (in module smac.utils.data_structures)": [[120, "smac.utils.data_structures.recursively_compare_dicts"]], "smac.utils.data_structures": [[120, "module-smac.utils.data_structures"]], "get_logger() (in module smac.utils.logging)": [[121, "smac.utils.logging.get_logger"]], "setup_logging() (in module smac.utils.logging)": [[121, "smac.utils.logging.setup_logging"]], "smac.utils.logging": [[121, "module-smac.utils.logging"]], "normalize_costs() (in module smac.utils.multi_objective)": [[122, "smac.utils.multi_objective.normalize_costs"]], "smac.utils.multi_objective": [[122, "module-smac.utils.multi_objective"]], "calculate_pareto_front() (in module smac.utils.pareto_front)": [[123, "smac.utils.pareto_front.calculate_pareto_front"]], "smac.utils.pareto_front": [[123, "module-smac.utils.pareto_front"]], "sort_by_crowding_distance() (in module smac.utils.pareto_front)": [[123, "smac.utils.pareto_front.sort_by_crowding_distance"]], "smac.utils.subspaces": [[124, "module-smac.utils.subspaces"]], "smac.utils.subspaces.boing_subspace": [[125, "module-smac.utils.subspaces.boing_subspace"]], "smac.utils.subspaces.turbo_subspace": [[126, "module-smac.utils.subspaces.turbo_subspace"]]}})